(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ 1058:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LDRRouter = void 0;

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var LDRRouter = /*#__PURE__*/function () {
  function LDRRouter() {
    _classCallCheck(this, LDRRouter);
  }

  _createClass(LDRRouter, [{
    key: "navigateTo",
    value: function navigateTo(route) {
      window.location = route;
    }
  }]);

  return LDRRouter;
}();

exports.LDRRouter = LDRRouter;

/***/ }),

/***/ 1059:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatasetStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(DatasetStore, _BaseStore);

  function DatasetStore(dispatcher) {
    var _this;

    _classCallCheck(this, DatasetStore);

    _this = _possibleConstructorReturn(this, (DatasetStore.__proto__ || Object.getPrototypeOf(DatasetStore)).call(this, dispatcher));

    _this.cleanAll();

    return _this;
  }

  _createClass(DatasetStore, [{
    key: "cleanAll",
    value: function cleanAll() {
      this.dataset = {
        total: 0,
        resource: [],
        error: ''
      };
    }
  }, {
    key: "cleanDataset",
    value: function cleanDataset() {
      this.cleanAll();
      this.emitChange();
    }
  }, {
    key: "updateResourceList",
    value: function updateResourceList(payload) {
      this.dataset = {
        graphName: payload.graphName,
        datasetURI: payload.datasetURI,
        resources: payload.resources,
        page: payload.page,
        config: payload.config,
        total: this.dataset.total,
        resourceQuery: payload.resourceQuery,
        error: payload.error
      };
      this.emitChange();
    }
  }, {
    key: "updateDatasetTotal",
    value: function updateDatasetTotal(payload) {
      this.dataset.total = payload.total;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        dataset: this.dataset
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.dataset = state.dataset;
    }
  }]);

  return DatasetStore;
}(_addons.BaseStore);

DatasetStore.storeName = 'DatasetStore'; // PR open in dispatchr to remove this need

DatasetStore.handlers = {
  'LOAD_DATASET_SUCCESS': 'updateResourceList',
  'UPDATE_DATASET_TOTAL_SUCCESS': 'updateDatasetTotal',
  'CLEAN_DATASET_SUCCESS': 'cleanDataset'
};
var _default = DatasetStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1060:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

var _ResourceStoreUtil = _interopRequireDefault(__webpack_require__(2072));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var utilObject = new _ResourceStoreUtil.default();

var ResourceStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(ResourceStore, _BaseStore);

  function ResourceStore(dispatcher) {
    var _this;

    _classCallCheck(this, ResourceStore);

    _this = _possibleConstructorReturn(this, (ResourceStore.__proto__ || Object.getPrototypeOf(ResourceStore)).call(this, dispatcher));

    _this.cleanAll();

    return _this;
  }

  _createClass(ResourceStore, [{
    key: "updatePropertyList",
    value: function updatePropertyList(payload) {
      this.graphName = payload.graphName;
      this.datasetURI = payload.datasetURI;
      this.resourceURI = payload.resourceURI;
      this.resourceType = payload.resourceType;
      this.currentCategory = payload.currentCategory;
      this.propertyPath = payload.propertyPath; // this.properties = payload.properties;

      this.properties = utilObject.preservePropertiesOrder(this.properties, payload.properties);
      this.title = payload.title ? payload.title : payload.resourceURI;
      this.config = payload.config;
      this.error = payload.error;
      this.emitChange();
    }
  }, {
    key: "cleanAll",
    value: function cleanAll() {
      this.properties = [];
      this.datasetURI = '';
      this.graphName = '';
      this.currentCategory = 0;
      this.resourceURI = '';
      this.resourceType = '';
      this.title = '';
      this.propertyPath = [];
      this.config = {};
      this.error = '';
    }
  }, {
    key: "cleanResource",
    value: function cleanResource() {
      this.cleanAll();
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        graphName: this.graphName,
        datasetURI: this.datasetURI,
        resourceURI: this.resourceURI,
        resourceType: this.resourceType,
        title: this.title,
        currentCategory: this.currentCategory,
        properties: this.properties,
        propertyPath: this.propertyPath,
        config: this.config,
        error: this.error
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.properties = state.properties;
      this.resourceURI = state.resourceURI;
      this.resourceType = state.resourceType;
      this.title = state.title;
      this.graphName = state.graphName;
      this.datasetURI = state.datasetURI;
      this.currentCategory = state.currentCategory;
      this.propertyPath = state.propertyPath;
      this.config = state.config;
      this.error = state.error;
    }
  }]);

  return ResourceStore;
}(_addons.BaseStore);

ResourceStore.storeName = 'ResourceStore'; // PR open in dispatchr to remove this need

ResourceStore.handlers = {
  LOAD_RESOURCE_SUCCESS: 'updatePropertyList',
  CLEAN_RESOURCE_SUCCESS: 'cleanResource'
};
var _default = ResourceStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1061:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var IndividualObjectStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(IndividualObjectStore, _BaseStore);

  function IndividualObjectStore(dispatcher) {
    var _this;

    _classCallCheck(this, IndividualObjectStore);

    _this = _possibleConstructorReturn(this, (IndividualObjectStore.__proto__ || Object.getPrototypeOf(IndividualObjectStore)).call(this, dispatcher));
    _this.objectProperties = {};
    _this.objectTypes = {};
    return _this;
  }

  _createClass(IndividualObjectStore, [{
    key: "updateObjectProperties",
    value: function updateObjectProperties(payload) {
      this.objectProperties[payload.objectURI] = payload.properties;
      this.objectTypes[payload.objectURI] = payload.objectType;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        objectProperties: this.objectProperties,
        objectTypes: this.objectTypes
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.objectProperties = state.objectProperties;
      this.objectTypes = state.objectTypes;
    }
  }]);

  return IndividualObjectStore;
}(_addons.BaseStore);

IndividualObjectStore.storeName = 'IndividualObjectStore'; // PR open in dispatchr to remove this need

IndividualObjectStore.handlers = {
  'LOAD_OBJECT_PROPERTIES_SUCCESS': 'updateObjectProperties'
};
var _default = IndividualObjectStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1062:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleAddonsReact = __webpack_require__(79);

var _ObjectIViewer = _interopRequireDefault(__webpack_require__(298));

var _PrefixBasedView = _interopRequireDefault(__webpack_require__(844));

var _ObjectIEditor = _interopRequireDefault(__webpack_require__(552));

var _fluxibleRouter = __webpack_require__(34);

var _semanticUiReact = __webpack_require__(69);

var _languages = __webpack_require__(491);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var IndividualObject = /*#__PURE__*/function (_React$Component) {
  _inherits(IndividualObject, _React$Component);

  function IndividualObject(props) {
    var _this;

    _classCallCheck(this, IndividualObject);

    _this = _possibleConstructorReturn(this, (IndividualObject.__proto__ || Object.getPrototypeOf(IndividualObject)).call(this, props));
    _this.state = {
      objectValue: _this.props.spec.value,
      detailData: {},
      inEditMode: _this.props.inEditMode,
      isExtendedView: 0
    };
    return _this;
  }

  _createClass(IndividualObject, [{
    key: "getLanguage",
    value: function getLanguage(code) {
      var o;

      _languages.list.forEach(function (l) {
        if (l.code === code) {
          //o = l.name +'-'+ l.nativeName;
          o = l.name;
          return o;
        }
      });

      return o;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var self = this; //a trick to allow cascading actions

      var wtime = Math.floor(Math.random() * 1500) + 100; //expand blank nodes

      if (this.props.config && this.props.config.hasBlankNode && this.props.config.autoLoadDetails && this.props.spec.extended && !this.state.isExtendedView) {
        setTimeout(function () {
          self.handleShowDetails();
        }, wtime);
      }
    }
  }, {
    key: "shouldNavigate",
    value: function shouldNavigate() {
      var yes = 0;

      if (this.state.isExtendedView) {
        //after expansion
        if (this.props.spec.extendedViewData) {
          this.props.spec.extendedViewData.forEach(function (el, i) {
            if (el.spec.instances.length > 1) {
              yes = 1;
              return yes;
            }
          });
        } else {
          yes = 0;
          return yes;
        }
      } else {
        if (this.props.spec.extended && this.props.config && this.props.config.extensions) {
          this.props.config.extensions.forEach(function (el, i) {
            if (el.config.allowExtension || el.config.allowNewValue) {
              yes = 1;
              return yes;
            }
          });
        } else {
          yes = 0;
          return yes;
        }
      }

      return yes;
    }
  }, {
    key: "navigateToNewTab",
    value: function navigateToNewTab() {
      var category = 0;

      if (this.props.config && this.props.config.category) {
        category = this.props.config.category;
      }

      this.context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/' + encodeURIComponent(this.props.datasetURI) + '/resource/' + encodeURIComponent(this.props.spec.value) + '/' + category + '/' + encodeURIComponent([this.props.resource, this.props.property])
      });
    }
  }, {
    key: "handleEdit",
    value: function handleEdit() {
      //navigate to a new windows if it has multi-valued objects or extended objects
      if (this.shouldNavigate()) {
        this.navigateToNewTab();
      } else {
        //check if it is extended
        // if(this.props.spec.extended && !this.state.isExtendedView){
        //     this.props.onShowDetail(this.props.spec.value);
        //     this.setState({isExtendedView: 1});
        // }
        this.setState({
          inEditMode: 1
        });
      }
    }
  }, {
    key: "handleAddDetails",
    value: function handleAddDetails() {
      this.setState({
        inEditMode: 1,
        isExtendedView: 1
      });
    } //when clicked on object div

  }, {
    key: "handleOnObjectClick",
    value: function handleOnObjectClick() {
      if (!this.props.readOnly) {
        this.handleEdit();
      }
    }
  }, {
    key: "handleDataEdit",
    value: function handleDataEdit(value) {
      this.setState({
        objectValue: value
      });
    }
  }, {
    key: "handleDetailDataEdit",
    value: function handleDetailDataEdit(detailData) {
      this.setState({
        detailData: detailData
      });
    }
  }, {
    key: "handleSave",
    value: function handleSave() {
      if (this.props.isNewValue) {
        this.props.onCreate(this.state.objectValue, this.props.spec.valueType, this.props.spec.dataType);
      } else {
        //check if it is extended
        if (this.props.spec.extended || this.state.isExtendedView) {
          if (this.props.spec.extended) {
            //update mode
            this.props.onDetailUpdate(this.props.spec.value, this.state.objectValue, this.props.spec.valueType, this.props.spec.dataType, this.state.detailData);
          } else {
            //create mode
            this.props.onDetailCreate(this.props.spec.value, this.state.objectValue, this.props.spec.valueType, this.props.spec.dataType, this.state.detailData);
            this.props.spec.extended = 1;
          }

          this.setState({
            inEditMode: 0,
            isExtendedView: 0
          });
        } else {
          //update only in case of change
          if (this.props.spec.value !== this.state.objectValue) {
            this.props.onUpdate(this.props.spec.value, this.state.objectValue, this.props.spec.valueType, this.props.spec.dataType);
          }

          this.setState({
            inEditMode: 0
          });
        }
      }
    }
  }, {
    key: "handleDelete",
    value: function handleDelete() {
      this.props.onDelete(this.props.spec.value, this.props.spec.valueType, this.props.spec.dataType);
    }
  }, {
    key: "handleUndo",
    value: function handleUndo() {
      this.setState({
        objectValue: this.props.spec.value,
        inEditMode: 0,
        isExtendedView: 0
      });
    }
  }, {
    key: "handleShowDetails",
    value: function handleShowDetails() {
      this.props.onShowDetail(this.props.spec.value);
      this.setState({
        isExtendedView: 1
      });
    }
  }, {
    key: "handleHideDetails",
    value: function handleHideDetails() {
      this.setState({
        isExtendedView: 0
      });
    }
  }, {
    key: "render",
    value: function render() {
      //add object Properties only to the relevant ones
      if (this.state.isExtendedView) {
        if (this.props.spec.extended) {
          this.props.spec.extendedViewData = this.props.objectProperties[this.props.spec.value];
          this.props.spec.objectType = this.props.objectTypes[this.props.spec.value];
        } else {
          //no type is detected yet
          this.props.spec.objectType = ''; //add default details situation

          if (this.props.config && this.props.config.extensions) {
            //get from config and build as a list
            this.props.spec.extendedViewData = this.props.config.extensions;
          } else {
            //use default
            this.props.spec.extendedViewData = [{
              spec: {
                propertyURI: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',
                instances: [{
                  value: 'http://xmlns.com/foaf/0.1/Person',
                  valueType: 'uri'
                }]
              },
              config: {
                hint: ['Type of the entity'],
                label: ['Type']
              }
            }, {
              spec: {
                propertyURI: 'http://www.w3.org/2000/01/rdf-schema#label',
                instances: [{
                  value: 'Label',
                  valueType: 'literal'
                }]
              },
              config: {
                hint: ['A descriptor label for the URI'],
                label: ['Label']
              }
            }];
          }
        }
      } else {
        this.props.spec.extendedViewData = 0;
      }

      var dataViewType, dataEditType;

      if (this.state.inEditMode) {
        dataEditType = _react.default.createElement(_ObjectIEditor.default, {
          isDefault: false,
          resource: this.props.resource,
          property: this.props.property,
          spec: this.props.spec,
          config: this.props.config,
          onDataEdit: this.handleDataEdit.bind(this),
          onDetailDataEdit: this.handleDetailDataEdit.bind(this),
          onEnterPress: this.handleSave.bind(this)
        });
      } else {
        dataViewType = _react.default.createElement(_ObjectIViewer.default, {
          onObjectClick: this.handleOnObjectClick.bind(this),
          datasetURI: this.props.datasetURI,
          spec: this.props.spec,
          config: this.props.config,
          resource: this.props.resource,
          property: this.props.property
        });
      }

      var editDIV, saveDIV, undoDIV, detailDIV, deleteDIV; //disable edit in readOnly mode

      if (!this.props.readOnly) {
        editDIV = _react.default.createElement("div", {
          ref: "edit",
          title: "edit",
          onClick: this.handleEdit.bind(this),
          className: "medium ui circular basic icon button"
        }, _react.default.createElement("i", {
          className: "edit large blue icon link "
        }));
        saveDIV = _react.default.createElement("div", {
          ref: "save",
          title: "save",
          onClick: this.handleSave.bind(this),
          className: "medium ui circular basic icon button"
        }, _react.default.createElement("i", {
          className: "save large green icon link "
        }));

        if (!this.props.isNewValue) {
          undoDIV = _react.default.createElement("div", {
            ref: "undo",
            title: "undo",
            onClick: this.handleUndo.bind(this),
            className: "medium ui circular basic icon button"
          }, _react.default.createElement("i", {
            className: "undo large blue icon link "
          }));
        }

        if (this.props.config && this.props.config.allowNewValue && !this.props.isOnlyChild) {
          deleteDIV = _react.default.createElement("div", {
            ref: "delete",
            title: "delete",
            onClick: this.handleDelete.bind(this),
            className: "medium ui circular basic icon button"
          }, _react.default.createElement("i", {
            className: "trash alternate outline large red icon link "
          }));
        }
      }

      if (this.props.spec.extended) {
        if (this.state.isExtendedView) {
          detailDIV = _react.default.createElement(_semanticUiReact.Popup, {
            trigger: _react.default.createElement("div", {
              ref: "hideDetails",
              title: "hide details",
              onClick: this.handleHideDetails.bind(this),
              className: "medium ui circular basic icon button"
            }, _react.default.createElement("i", {
              className: "hide large blue icon link "
            }, " ")),
            content: 'hide details',
            wide: true,
            position: "right center"
          });
        } else {
          detailDIV = _react.default.createElement(_semanticUiReact.Popup, {
            trigger: _react.default.createElement("div", {
              ref: "showDetails",
              title: 'show ' + this.props.spec.extended + ' remaining details',
              onClick: this.handleShowDetails.bind(this),
              className: "medium ui circular basic icon button"
            }, _react.default.createElement("i", {
              className: "unhide large blue icon link "
            }, " ")),
            content: 'show ' + this.props.spec.extended + ' remaining details',
            wide: true,
            position: "right center"
          });
        }
      } else {
        //show add detail icon if enabled
        if (this.props.config && this.props.config.allowExtension && !this.props.readOnly) {
          detailDIV = _react.default.createElement("div", {
            ref: "addDetails",
            title: "add details",
            onClick: this.handleAddDetails.bind(this),
            className: "medium ui circular basic icon button"
          }, _react.default.createElement("i", {
            className: "add circle large blue icon link "
          }, " "));
        }
      }

      if (this.state.inEditMode) {
        //edit mode
        return _react.default.createElement("div", {
          className: "ui list",
          ref: "individualObjectReactor"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "ui form grid"
        }, _react.default.createElement("div", {
          className: "twelve wide column field"
        }, dataEditType), _react.default.createElement("div", {
          className: "four wide column field"
        }, saveDIV, undoDIV))));
      } else {
        //view mode
        return _react.default.createElement("div", {
          className: "ui list",
          ref: "individualObjectReactor"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "ui form grid"
        }, _react.default.createElement("div", {
          className: "twelve wide column field"
        }, dataViewType, this.props.spec.lang ? _react.default.createElement("span", {
          className: "ui mini label ribbon left attached"
        }, this.getLanguage(this.props.spec.lang)) : null, this.props.spec.dataType ? _react.default.createElement("span", {
          className: "ui mini label ribbon left attached"
        }, _react.default.createElement(_PrefixBasedView.default, {
          spec: {
            value: this.props.spec.dataType
          }
        })) : null), _react.default.createElement("div", {
          className: "four wide column field animated pulse"
        }, detailDIV, editDIV, deleteDIV))));
      }
    }
  }]);

  return IndividualObject;
}(_react.default.Component);

IndividualObject.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
var _default = IndividualObject;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1063:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DBpediaStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(DBpediaStore, _BaseStore);

  function DBpediaStore(dispatcher) {
    var _this;

    _classCallCheck(this, DBpediaStore);

    _this = _possibleConstructorReturn(this, (DBpediaStore.__proto__ || Object.getPrototypeOf(DBpediaStore)).call(this, dispatcher));
    _this.suggestions = [];
    return _this;
  }

  _createClass(DBpediaStore, [{
    key: "lookupDBpedia",
    value: function lookupDBpedia(payload) {
      this.suggestions = payload.suggestions;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        suggestions: this.suggestions
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.suggestions = state.suggestions;
    }
  }]);

  return DBpediaStore;
}(_addons.BaseStore);

DBpediaStore.storeName = 'DBpediaStore'; // PR open in dispatchr to remove this need

DBpediaStore.handlers = {
  'LOOKUP_DBPEDIA_SUCCESS': 'lookupDBpedia'
};
var _default = DBpediaStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1108:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _ObjectIViewer = _interopRequireDefault(__webpack_require__(298));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Default component to display multiple object values as aggregate
*/
var BasicAggregateView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicAggregateView, _React$Component);

  function BasicAggregateView() {
    _classCallCheck(this, BasicAggregateView);

    return _possibleConstructorReturn(this, (BasicAggregateView.__proto__ || Object.getPrototypeOf(BasicAggregateView)).apply(this, arguments));
  }

  _createClass(BasicAggregateView, [{
    key: "render",
    value: function render() {
      var self = this;
      var list = this.props.spec.instances.map(function (node, index) {
        if (!node) {
          return undefined; // stop processing this iteration
        }

        return _react.default.createElement("div", {
          key: index,
          className: "item"
        }, _react.default.createElement(_ObjectIViewer.default, {
          spec: node,
          config: self.props.config
        }));
      });
      return _react.default.createElement("div", {
        className: "ui horizontal list",
        ref: "basicAggregateView"
      }, list);
    }
  }]);

  return BasicAggregateView;
}(_react.default.Component);

BasicAggregateView.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicAggregateView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1109:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DBpediaGMapStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(DBpediaGMapStore, _BaseStore);

  function DBpediaGMapStore(dispatcher) {
    var _this;

    _classCallCheck(this, DBpediaGMapStore);

    _this = _possibleConstructorReturn(this, (DBpediaGMapStore.__proto__ || Object.getPrototypeOf(DBpediaGMapStore)).call(this, dispatcher));
    _this.coordinates = {};
    return _this;
  }

  _createClass(DBpediaGMapStore, [{
    key: "handleCoordinates",
    value: function handleCoordinates(payload) {
      if (payload.property) {
        this.coordinates[payload.property] = payload.coordinates;
      }

      this.emitChange();
    }
  }, {
    key: "cleanMap",
    value: function cleanMap() {
      this.coordinates = [];
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        coordinates: this.coordinates
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.coordinates = state.coordinates;
    }
  }]);

  return DBpediaGMapStore;
}(_addons.BaseStore);

DBpediaGMapStore.storeName = 'DBpediaGMapStore'; // PR open in dispatchr to remove this need

DBpediaGMapStore.handlers = {
  'FIND_COORDINATES_SUCCESS': 'handleCoordinates',
  'CLEAN_GMAP_SUCCESS': 'cleanMap'
};
var _default = DBpediaGMapStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1110:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PatternInstanceRepository = void 0;

var _GenericRepository = _interopRequireDefault(__webpack_require__(893));

var _PatternInstanceQueryBuilder = _interopRequireDefault(__webpack_require__(2207));

var _PatternInstance = __webpack_require__(1112);

var _VisualFrameRepository = __webpack_require__(2214);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PatternInstanceRepository = /*#__PURE__*/function () {
  function PatternInstanceRepository(dbClient, genericRepository, visualFrameRepository, patternQueryBuilder) {
    _classCallCheck(this, PatternInstanceRepository);

    this.genericRepository = genericRepository || new _GenericRepository.default(dbClient);
    this.visualFrameRepository = visualFrameRepository || new _VisualFrameRepository.VisualFrameRepository();
    this.patternQueryBuilder = patternQueryBuilder || new _PatternInstanceQueryBuilder.default();
  }

  _createClass(PatternInstanceRepository, [{
    key: "getPatternInstanceData",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(patternInstance) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(patternInstance && patternInstance.pattern && patternInstance.uri && patternInstance.pattern.uri)) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", this.genericRepository.fetchByQueryObject(this.patternQueryBuilder.getPatternInstanceDataQuery(patternInstance.uri, patternInstance.pattern.uri)));

              case 4:
                return _context.abrupt("return", undefined);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getPatternInstanceData(_x) {
        return _ref.apply(this, arguments);
      }

      return getPatternInstanceData;
    }()
  }, {
    key: "getPatternInstanceType",
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(patternInstanceUri) {
        var pattern;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.genericRepository.fetchByQueryObject(this.patternQueryBuilder.getPatternWithLabel(patternInstanceUri));

              case 2:
                pattern = _context2.sent;
                return _context2.abrupt("return", pattern[0]);

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getPatternInstanceType(_x2) {
        return _ref2.apply(this, arguments);
      }

      return getPatternInstanceType;
    }()
  }, {
    key: "getPatternInstanceWithTypeVisualFrameAndData",
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(patternInstanceUri) {
        var pattern, visualFrame, patternInstance, data;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.getPatternInstanceType(patternInstanceUri);

              case 2:
                pattern = _context3.sent;
                visualFrame = null;

                if (!(pattern && pattern.uri)) {
                  _context3.next = 8;
                  break;
                }

                _context3.next = 7;
                return this.visualFrameRepository.getVisualFrame(pattern.uri);

              case 7:
                visualFrame = _context3.sent;

              case 8:
                patternInstance = _PatternInstance.PatternInstance.create({
                  uri: patternInstanceUri,
                  pattern: pattern,
                  visualFrame: visualFrame
                });
                _context3.next = 11;
                return this.getPatternInstanceData(patternInstance);

              case 11:
                data = _context3.sent;
                patternInstance.data = data;
                return _context3.abrupt("return", patternInstance);

              case 14:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getPatternInstanceWithTypeVisualFrameAndData(_x3) {
        return _ref3.apply(this, arguments);
      }

      return getPatternInstanceWithTypeVisualFrameAndData;
    }()
  }, {
    key: "getPatternInstancesUrisByResource",
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(resourceURI) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.genericRepository.fetchByQueryObject(this.patternQueryBuilder.getPatternInstancesResourceBelongsTo(resourceURI));

              case 2:
                return _context4.abrupt("return", _context4.sent);

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getPatternInstancesUrisByResource(_x4) {
        return _ref4.apply(this, arguments);
      }

      return getPatternInstancesUrisByResource;
    }()
  }, {
    key: "getPatternInstancesByResourceParticipatingInPattern",
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resourceURI) {
        var patternInstancesURI, patternInstances, i, patternInstance;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.getPatternInstancesUrisByResource(resourceURI);

              case 2:
                patternInstancesURI = _context5.sent;
                patternInstances = [];
                i = 0;

              case 5:
                if (!(i < patternInstancesURI.length)) {
                  _context5.next = 13;
                  break;
                }

                _context5.next = 8;
                return this.getPatternInstanceWithTypeVisualFrameAndData(patternInstancesURI[i].uri);

              case 8:
                patternInstance = _context5.sent;
                patternInstances.push(patternInstance);

              case 10:
                i++;
                _context5.next = 5;
                break;

              case 13:
                return _context5.abrupt("return", patternInstances);

              case 14:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getPatternInstancesByResourceParticipatingInPattern(_x5) {
        return _ref5.apply(this, arguments);
      }

      return getPatternInstancesByResourceParticipatingInPattern;
    }()
  }]);

  return PatternInstanceRepository;
}();

exports.PatternInstanceRepository = PatternInstanceRepository;

/***/ }),

/***/ 1111:
/***/ (function(module) {

module.exports = JSON.parse("{\"http://example.com/example-pattern\":\"example.sparql\",\"https://w3id.org/arco/ontology/denotative-description/measurement-collection\":\"collection.sparql\",\"https://w3id.org/arco/ontology/location/cultural-property-component-of\":\"culturalcomponentof.sparql\",\"https://w3id.org/arco/ontology/location/time-indexed-typed-location\":\"timedlocation.sparql\"}");

/***/ }),

/***/ 1112:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PatternInstance = void 0;

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PatternInstance = /*#__PURE__*/function () {
  function PatternInstance(uri, pattern, visualFrame, data) {
    _classCallCheck(this, PatternInstance);

    this.uri = uri;
    this.pattern = pattern;
    this.visualFrame = visualFrame;
    this.data = data;
  }

  _createClass(PatternInstance, null, [{
    key: "create",
    value: function create(_ref) {
      var uri = _ref.uri,
          pattern = _ref.pattern,
          visualFrame = _ref.visualFrame,
          data = _ref.data;
      return new PatternInstance(uri, pattern, visualFrame, data);
    }
  }, {
    key: "aggregateInstances",
    value: function aggregateInstances(instance1, instance2) {
      return PatternInstance.create({
        uri: instance1.uri,
        pattern: instance1.pattern,
        visualFrame: instance1.visualFrame,
        data: instance1.data.concat(instance2.data)
      });
    }
  }]);

  return PatternInstance;
}();

exports.PatternInstance = PatternInstance;

/***/ }),

/***/ 1113:
/***/ (function(module) {

module.exports = JSON.parse("{\"http://example.com/example-pattern\":\"ExampleVisualFrame.js\",\"https://w3id.org/arco/ontology/denotative-description/measurement-collection\":\"CollectionVisualFrame.js\",\"https://w3id.org/arco/ontology/location/cultural-property-component-of\":\"PartOfVisualFrame.js\",\"https://w3id.org/arco/ontology/location/time-indexed-typed-location\":\"TimeIndexedTypedLocationVisualFrame.js\"}");

/***/ }),

/***/ 1117:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.routeToResource = routeToResource;

var _LDRRouter = __webpack_require__(1058);

function routeToResource(dataset, resource) {
  var router = new _LDRRouter.LDRRouter();
  var route = "".concat(Object({"NODE_ENV":"production","BROWSER":"true","PUBLIC_URL":undefined,"CONFIG_SPARQL_ENDPOINT_URI":"https://arco.istc.cnr.it/odpr/sparql","CONFIG_GRAPH":"http://odpreactor.arco.istc.cnr.it/configuration","ODP_REACTOR_GRAPH_HOST":"https://odp-reactor-browser.vercel.app","ODP_REACTOR_GRAPH_PORT":"443"}).HOST, ":").concat(Object({"NODE_ENV":"production","BROWSER":"true","PUBLIC_URL":undefined,"CONFIG_SPARQL_ENDPOINT_URI":"https://arco.istc.cnr.it/odpr/sparql","CONFIG_GRAPH":"http://odpreactor.arco.istc.cnr.it/configuration","ODP_REACTOR_GRAPH_HOST":"https://odp-reactor-browser.vercel.app","ODP_REACTOR_GRAPH_PORT":"443"}).PORT, "/endpoints/").concat(encodeURIComponent(dataset), "/graphs/").concat(encodeURIComponent(resource));
  router.navigateTo(route);
}

/***/ }),

/***/ 1118:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ExampleVisualFrame = /*#__PURE__*/function (_React$Component) {
  _inherits(ExampleVisualFrame, _React$Component);

  function ExampleVisualFrame() {
    _classCallCheck(this, ExampleVisualFrame);

    return _possibleConstructorReturn(this, (ExampleVisualFrame.__proto__ || Object.getPrototypeOf(ExampleVisualFrame)).apply(this, arguments));
  }

  _createClass(ExampleVisualFrame, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", null, "An example visual frame");
    }
  }]);

  return ExampleVisualFrame;
}(_react.default.Component);

exports.default = ExampleVisualFrame;
module.exports = exports.default;

/***/ }),

/***/ 1120:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = _interopRequireDefault(__webpack_require__(1));

var _CollectionVisualFrame = _interopRequireDefault(__webpack_require__(583));

var _ReactComponentTester = __webpack_require__(587);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ReactComponentTester.reactTester.itRendersWithoutExploding(_react.default.createElement(_CollectionVisualFrame.default, null), 'CollectionVisualFrame');

/***/ }),

/***/ 1187:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = _interopRequireDefault(__webpack_require__(1));

var _PartOfVisualFrame = _interopRequireDefault(__webpack_require__(584));

var _ReactComponentTester = __webpack_require__(587);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ReactComponentTester.reactTester.itRendersWithoutExploding(_react.default.createElement(_PartOfVisualFrame.default, null), 'PartOfVisualFrame');

/***/ }),

/***/ 1188:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = _interopRequireDefault(__webpack_require__(1));

var _TimeIndexedTypedLocationVisualFrame = _interopRequireDefault(__webpack_require__(585));

var _ReactComponentTester = __webpack_require__(587);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ReactComponentTester.reactTester.itRendersWithoutExploding(_react.default.createElement(_TimeIndexedTypedLocationVisualFrame.default, null), 'TimeIndexedTypedLocationVisualFrame');

/***/ }),

/***/ 1189:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomLoader = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactLoaderSpinner = _interopRequireDefault(__webpack_require__(2362));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CustomLoader = function CustomLoader(props) {
  return _react.default.createElement(_reactLoaderSpinner.default, {
    type: "RevolvingDot",
    color: "#2185d0",
    height: 100,
    width: 100
  });
};

exports.CustomLoader = CustomLoader;

/***/ }),

/***/ 119:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadResource;

var _general = __webpack_require__(59);

function loadResource(context, payload, done) {
  console.log('load resource running');
  context.dispatch('LOADING_DATA', {});
  context.service.read('resource.properties', payload, {
    timeout: 25 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('LOAD_RESOURCE_FAILURE', err); // nobody listen to this
    } else {
      context.dispatch('CLEAN_RESOURCE_SUCCESS', res);
      context.dispatch('CLEAN_GMAP_SUCCESS', res);
      context.dispatch('LOAD_RESOURCE_SUCCESS', res);
    }

    context.dispatch('UPDATE_PAGE_TITLE', {
      pageTitle: _general.appFullTitle + ' | Dataset | ' + decodeURIComponent(payload.dataset) + ' | Resource | ' + decodeURIComponent(payload.resource) + ' | Category | ' + payload.category || ''
    });
    context.dispatch('LOADED_DATA', {});
    console.log('LOAD RESOURCE ACTION END');
    done();
  });
}

module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1190:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var UserStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(UserStore, _BaseStore);

  function UserStore(dispatcher) {
    var _this;

    _classCallCheck(this, UserStore);

    _this = _possibleConstructorReturn(this, (UserStore.__proto__ || Object.getPrototypeOf(UserStore)).call(this, dispatcher));
    _this.users = [];
    _this.graphName = '';
    _this.datasetURI = '';
    _this.msgSent = 0;
    return _this;
  }

  _createClass(UserStore, [{
    key: "updateUsersList",
    value: function updateUsersList(payload) {
      this.users = payload.users;
      this.graphName = payload.graphName;
      this.datasetURI = payload.datasetURI;
      this.emitChange();
    }
  }, {
    key: "updateMsg",
    value: function updateMsg(payload) {
      this.msgSent = 1;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        users: this.users,
        graphName: this.graphName,
        datasetURI: this.datasetURI,
        msgSent: this.msgSent
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.users = state.users;
      this.graphName = state.graphName;
      this.datasetURI = state.datasetURI;
      this.msgSent = state.msgSent;
    }
  }]);

  return UserStore;
}(_addons.BaseStore);

UserStore.storeName = 'UserStore'; // PR open in dispatchr to remove this need

UserStore.handlers = {
  'LOAD_USERS_LIST_SUCCESS': 'updateUsersList',
  'SEND_EMAIL_MSG_SUCCESS': 'updateMsg'
};
var _default = UserStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1208:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _debug = _interopRequireDefault(__webpack_require__(1225));

var _fluxibleAddonsReact = __webpack_require__(79);

var _app = _interopRequireDefault(__webpack_require__(1235));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*global document, window */
var debugClient = (0, _debug.default)('ld-r');
var dehydratedState = window.App; // Sent from the server

window.React = _reactDom.default; // For chrome dev tool support
// expose debug object to browser, so that it can be enabled/disabled from browser:
// https://github.com/visionmedia/debug#browser-support

window.fluxibleDebug = _debug.default;
debugClient('rehydrating app'); // pass in the dehydrated server state from server.js

_app.default.rehydrate(dehydratedState, function (err, context) {
  if (err) {
    throw err;
  }

  window.context = context;
  var mountNode = document.getElementById('app');
  debugClient('React Rendering');

  _reactDom.default.hydrate((0, _fluxibleAddonsReact.createElementWithContext)(context), mountNode, function () {
    return debugClient('React Rendered');
  });
});

/***/ }),

/***/ 1235:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fluxible = _interopRequireDefault(__webpack_require__(1236));

var _fluxiblePluginFetchr = _interopRequireDefault(__webpack_require__(1244));

var _authentication = _interopRequireDefault(__webpack_require__(1254));

var _Application = _interopRequireDefault(__webpack_require__(1256));

var _RouteStore = _interopRequireDefault(__webpack_require__(1278));

var _ApplicationStore = _interopRequireDefault(__webpack_require__(638));

var _DatasetStore = _interopRequireDefault(__webpack_require__(1059));

var _UserStore = _interopRequireDefault(__webpack_require__(1190));

var _ResourceStore = _interopRequireDefault(__webpack_require__(1060));

var _IndividualObjectStore = _interopRequireDefault(__webpack_require__(1061));

var _DBpediaStore = _interopRequireDefault(__webpack_require__(1063));

var _DBpediaGMapStore = _interopRequireDefault(__webpack_require__(1109));

var _FacetedBrowserStore = _interopRequireDefault(__webpack_require__(887));

var _DatasetsStore = _interopRequireDefault(__webpack_require__(488));

var _DatasetAnnotationStore = _interopRequireDefault(__webpack_require__(705));

var _QueryImportStore = _interopRequireDefault(__webpack_require__(707));

var _ImportStore = _interopRequireDefault(__webpack_require__(463));

var _PatternStore = _interopRequireDefault(__webpack_require__(2397));

var _PatternInstanceStore = _interopRequireDefault(__webpack_require__(2398));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PUBLIC_URL = undefined ? undefined : '';
var app = new _fluxible.default({
  component: _Application.default,
  stores: [_RouteStore.default, _ApplicationStore.default, _DatasetsStore.default, _DatasetStore.default, _UserStore.default, _ResourceStore.default, _IndividualObjectStore.default, _DBpediaStore.default, _DBpediaGMapStore.default, _FacetedBrowserStore.default, _DatasetAnnotationStore.default, _QueryImportStore.default, _ImportStore.default, _PatternStore.default, _PatternInstanceStore.default]
});
app.plug((0, _fluxiblePluginFetchr.default)({
  xhrPath: "".concat(PUBLIC_URL, "/api") // Path for XHR to be served from

}));
app.plug((0, _authentication.default)({}));
var _default = app;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1254:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1255);

/***/ }),

/***/ 1255:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function authPlugin(options) {
  /**
   * @class authPlugin
   */
  return {
    name: 'AuthPlugin',
    // Called after context creation to dynamically create a context plugin
    plugContext: function plugContext(contextOptions) {
      // `options` is the same as what is passed into `Fluxible.createContext(options)`
      var user = null;

      if (contextOptions.req) {
        user = contextOptions.req.user;
      } // Returns a context plugin


      return {
        /**
         * Provides full access to the user in the action context
         * @param {Object} actionContext
         */
        plugActionContext: function plugActionContext(actionContext) {
          actionContext.getUser = function () {
            return user;
          };
        },

        /**
         * Provides access to user
         * @param {Object} componentContext
         */
        plugComponentContext: function plugComponentContext(componentContext) {
          componentContext.getUser = function () {
            return user;
          };
        },

        /**
         * Provides access to user
         * @param {Object} storeContext
         */
        plugStoreContext: function plugStoreContext(storeContext) {
          storeContext.getUser = function () {
            return user;
          };
        },
        dehydrate: function dehydrate() {
          return {
            user: user
          };
        },
        // Called on client to rehydrate the context plugin settings
        rehydrate: function rehydrate(state) {
          user = state.user;
        }
      };
    }
  };
};

/***/ }),

/***/ 1256:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _Nav = _interopRequireDefault(__webpack_require__(626));

var _HelpModal = _interopRequireDefault(__webpack_require__(635));

var _Home = _interopRequireDefault(__webpack_require__(636));

var _About = _interopRequireDefault(__webpack_require__(637));

var _ApplicationStore = _interopRequireDefault(__webpack_require__(638));

var _fluxibleAddonsReact = __webpack_require__(79);

var _fluxibleRouter = __webpack_require__(34);

var _ErrorHandler = _interopRequireDefault(__webpack_require__(1274));

var _regeneratorRuntime = _interopRequireDefault(__webpack_require__(1277));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

//import { hotjar } from 'react-hotjar';
var Application = /*#__PURE__*/function (_React$Component) {
  _inherits(Application, _React$Component);

  function Application(props, context) {
    _classCallCheck(this, Application);

    return _possibleConstructorReturn(this, (Application.__proto__ || Object.getPrototypeOf(Application)).call(this, props, context)); // this.state = {
    //     matomoTracker: null
    // };
  }

  _createClass(Application, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var newProps = this.props;

      if (newProps.ApplicationStore.pageTitle === prevProps.ApplicationStore.pageTitle) {
        return;
      }

      document.title = newProps.ApplicationStore.pageTitle;
    } // componentDidMount() {
    //     // hotjar.initialize(2294500, 6);
    //     if (!this.state.matomoTracker) {
    //         const tracker = new MatomoTracker({
    //             urlBase: 'https://cnr.matomo.cloud/',
    //             siteId: 6,
    //             disabled: false, // optional, false by default. Makes all tracking calls no-ops if set to true.
    //             heartBeat: {
    //                 // optional, enabled by default
    //                 active: true, // optional, default value: true
    //                 seconds: 10 // optional, default value: `15
    //             },
    //             linkTracking: true, // optional, default value: true
    //             configurations: {
    //                 // optional, default value: {}
    //                 // any valid matomo configuration, all below are optional
    //             }
    //         });
    //         this.setState({ matomoTracker: tracker });
    //     }
    // }

  }, {
    key: "render",
    value: function render() {
      var Handler = this.props.currentRoute.handler; // if (this.state.matomoTracker) {
      //     console.log('Tracking matomo');
      //     this.state.matomoTracker.trackPageView();
      // }
      //render content

      return _react.default.createElement(_ErrorHandler.default, null, _react.default.createElement("div", null, _react.default.createElement(_Nav.default, {
        loading: this.props.ApplicationStore.loading
      }), _react.default.createElement(Handler, null), _react.default.createElement(_HelpModal.default, null)));
    }
  }]);

  return Application;
}(_react.default.Component);

Application.contextTypes = {
  getStore: _propTypes.default.func,
  executeAction: _propTypes.default.func,
  getUser: _propTypes.default.func
};
Application = (0, _fluxibleAddonsReact.connectToStores)(Application, [_ApplicationStore.default], function (context, props) {
  return {
    ApplicationStore: context.getStore(_ApplicationStore.default).getState()
  };
});
Application = (0, _fluxibleRouter.handleHistory)(Application, {
  enableScroll: false
});
Application = (0, _fluxibleAddonsReact.provideContext)(Application, {
  //jshint ignore:line
  getUser: _propTypes.default.func
});
var _default = Application;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1274:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(__webpack_require__(1));

var _Nav = _interopRequireDefault(__webpack_require__(626));

var _HelpModal = _interopRequireDefault(__webpack_require__(635));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var ErrorHandler = /*#__PURE__*/function (_Component) {
  _inherits(ErrorHandler, _Component);

  function ErrorHandler(props) {
    var _this;

    _classCallCheck(this, ErrorHandler);

    _this = _possibleConstructorReturn(this, (ErrorHandler.__proto__ || Object.getPrototypeOf(ErrorHandler)).call(this, props));
    _this.state = {
      hasError: false
    };
    return _this;
  }

  _createClass(ErrorHandler, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, info) {
      // Display fallback UI
      this.setState({
        hasError: true
      }); // You can also log the error to an error reporting service
      //   logErrorToMyService(error, info);
    }
  }, {
    key: "render",
    value: function render() {
      if (this.state.hasError) {
        // You can render any custom fallback UI
        return _react.default.createElement("div", null, _react.default.createElement(_Nav.default, null), _react.default.createElement(_HelpModal.default, null), _react.default.createElement(_semanticUiReact.Segment, {
          placeholder: true,
          textAlign: "center"
        }, _react.default.createElement("div", null, _react.default.createElement("div", null, _react.default.createElement(_semanticUiReact.Icon, {
          size: "huge",
          name: "warning"
        })), _react.default.createElement("h1", null, "An error occured"), _react.default.createElement("div", null, _react.default.createElement("a", {
          href: "".concat(PUBLIC_URL, "/")
        }, "Go back")))));
      }

      return this.props.children;
    }
  }]);

  return ErrorHandler;
}(_react.Component);

exports.default = ErrorHandler;
module.exports = exports.default;

/***/ }),

/***/ 1278:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fluxibleRouter = __webpack_require__(34);

var _routes = _interopRequireDefault(__webpack_require__(1279));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = _fluxibleRouter.RouteStore.withStaticRoutes(_routes.default);

exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1279:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _loadDatasets = _interopRequireDefault(__webpack_require__(1280));

var _loadDataset = _interopRequireDefault(__webpack_require__(1281));

var _loadResource = _interopRequireDefault(__webpack_require__(119));

var _loadUsersList = _interopRequireDefault(__webpack_require__(644));

var _loadFacets = _interopRequireDefault(__webpack_require__(462));

var _loadEnvStates = _interopRequireDefault(__webpack_require__(1284));

var _getLoadEnvState = _interopRequireDefault(__webpack_require__(1285));

var _general = __webpack_require__(59);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PUBLIC_URL = undefined ? undefined : "";
var _default = {
  home: {
    path: "".concat(PUBLIC_URL, "/"),
    method: "get",
    handler: __webpack_require__(636),
    label: _general.appShortTitle,
    action: function action(context, payload, done) {
      context.dispatch("UPDATE_PAGE_TITLE", {
        pageTitle: _general.appFullTitle + " | Home"
      });
      done();
    }
  },
  about: {
    path: "".concat(PUBLIC_URL, "/about"),
    method: "get",
    handler: __webpack_require__(637),
    label: "About",
    action: function action(context, payload, done) {
      context.dispatch("UPDATE_PAGE_TITLE", {
        pageTitle: _general.appFullTitle + " | About"
      });
      done();
    }
  },
  importCSV: {
    path: "".concat(PUBLIC_URL, "/importCSV"),
    method: "get",
    handler: __webpack_require__(1286),
    label: "CSVImport",
    action: function action(context, payload, done) {
      context.dispatch("UPDATE_PAGE_TITLE", {
        pageTitle: _general.appFullTitle + " | Import CSV files"
      });
      done();
    }
  },
  newDataset: {
    path: "".concat(PUBLIC_URL, "/newDataset"),
    method: "get",
    handler: __webpack_require__(1297),
    label: "NewDataset",
    action: function action(context, payload, done) {
      context.dispatch("UPDATE_PAGE_TITLE", {
        pageTitle: _general.appFullTitle + " | Add a new dataset"
      });
      done();
    }
  },
  annotateDataset: {
    path: "".concat(PUBLIC_URL, "/annotateDataset"),
    method: "get",
    handler: __webpack_require__(1454),
    label: "DatasetAnnotation",
    action: function action(context, payload, done) {
      context.executeAction(_loadDatasets.default, {
        pageTitle: "Annotate a dataset"
      }, done);
    }
  },
  wysiwyq: {
    path: "".concat(PUBLIC_URL, "/wysiwyq"),
    method: "get",
    handler: __webpack_require__(1460),
    label: "ImportQuery",
    action: function action(context, payload, done) {
      context.executeAction(_loadEnvStates.default, {
        pageTitle: "Import a Query | WYSIWYQ mode"
      }, done);
    }
  },
  facets: {
    path: "".concat(PUBLIC_URL, "/browse/:id?/:stateURI?"),
    method: "get",
    handler: __webpack_require__(1464),
    label: "Faceted Browser",
    action: function action(context, payload, done) {
      var datasetURI, page, stateURI;
      datasetURI = payload.params.id;
      stateURI = payload.params.stateURI;

      if (!datasetURI) {
        datasetURI = 0;
      }

      if (!stateURI) {
        //only init if no state is given
        stateURI = 0;
        context.executeAction(_loadFacets.default, {
          mode: "init",
          id: decodeURIComponent(datasetURI),
          stateURI: stateURI,
          selection: 0,
          page: 1
        }, done);
      } else {
        //get && load the given state
        context.executeAction(_getLoadEnvState.default, {
          mode: "init",
          id: decodeURIComponent(datasetURI),
          stateURI: stateURI,
          selection: 0,
          page: 1
        }, done);
      }
    }
  },
  datasets: {
    //if no id is provided -> will start by defaultDatasetURI in reactor.config
    path: "".concat(PUBLIC_URL, "/datasets"),
    method: "get",
    handler: __webpack_require__(1704),
    label: "Datasets",
    action: function action(context, payload, done) {
      context.executeAction(_loadDatasets.default, {}, done);
    }
  },
  dataset: {
    //if no id is provided -> will start by defaultDatasetURI in reactor.config
    path: "".concat(PUBLIC_URL, "/dataset/:page?/:id?"),
    method: "get",
    handler: __webpack_require__(2070),
    label: "Dataset",
    action: function action(context, payload, done) {
      var datasetURI, page;
      datasetURI = decodeURIComponent(payload.params.id);

      if (!datasetURI) {
        datasetURI = 0;
      }

      page = payload.params.page;

      if (!page) {
        page = 1;
      } //do not allow to browse user graph


      if (datasetURI === _general.authDatasetURI[0]) {
        datasetURI = 0;
      }

      context.executeAction(_loadDataset.default, {
        id: datasetURI,
        page: page
      }, done);
    }
  },
  resource: {
    path: "".concat(PUBLIC_URL, "/dataset/:did/:resource/:rid/:pcategory?/:propertyPath?"),
    method: "get",
    handler: __webpack_require__(551),
    label: "Resource",
    action: function action(context, payload, done) {
      //predicate Category
      var category = payload.params.pcategory;

      if (!category) {
        category = 0;
      }

      var propertyPath = payload.params.propertyPath;

      if (!propertyPath) {
        propertyPath = [];
      }

      var datasetURI = payload.params.did;

      if (!datasetURI) {
        datasetURI = 0;
      }

      context.executeAction(_loadResource.default, {
        dataset: datasetURI,
        resource: payload.params.rid,
        category: category,
        propertyPath: propertyPath
      }, done);
    }
  },
  resourcePatterns: {
    path: "".concat(PUBLIC_URL, "/patterns/dataset/:did/:resource/:rid/:patternIds"),
    method: "get",
    handler: __webpack_require__(551),
    label: "ResourcePatterns",
    action: function action(context, payload, done) {
      console.log("resourcePatternsRoute patternIds: ", payload.params.patternIds); //predicate Category

      var category = payload.params.pcategory;

      if (!category) {
        category = 0;
      }

      var propertyPath = payload.params.propertyPath;

      if (!propertyPath) {
        propertyPath = [];
      }

      var datasetURI = payload.params.did;

      if (!datasetURI) {
        datasetURI = 0;
      }

      context.executeAction(_loadResource.default, {
        dataset: datasetURI,
        resource: payload.params.rid,
        category: category,
        propertyPath: propertyPath
      }, done);
    }
  },
  user: {
    path: "".concat(PUBLIC_URL, "/user/:id"),
    method: "get",
    handler: __webpack_require__(551),
    label: "User",
    action: function action(context, payload, done) {
      var category = 0;
      context.executeAction(_loadResource.default, {
        dataset: _general.authDatasetURI[0],
        resource: _general.baseResourceDomain + "/user/" + decodeURIComponent(payload.params.id),
        category: category
      }, done);
    }
  },
  users: {
    path: "".concat(PUBLIC_URL, "/users"),
    method: "get",
    handler: __webpack_require__(2393),
    label: "Users List",
    action: function action(context, payload, done) {
      context.executeAction(_loadUsersList.default, {}, done);
    }
  },
  errortest: {
    path: "".concat(PUBLIC_URL, "/errortest"),
    method: "get",
    handler: __webpack_require__(2396),
    label: "Error Test"
  }
};
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1280:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadDatasets;

var _general = __webpack_require__(59);

function loadDatasets(context, payload, done) {
  context.dispatch('LOADING_DATA', {});
  var pageTitle = 'Datasets';

  if (payload.pageTitle) {
    pageTitle = payload.pageTitle;
  }

  context.service.read('dataset.datasetsList', payload, {
    timeout: 20 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('LOAD_DATASETS_FAILURE', err);
    } else {
      context.dispatch('LOAD_DATASETS_SUCCESS', res);
    }

    context.dispatch('UPDATE_PAGE_TITLE', {
      pageTitle: _general.appFullTitle + ' | ' + pageTitle || ''
    });
    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1281:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadDataset;

var _general = __webpack_require__(59);

var _async = _interopRequireDefault(__webpack_require__(342));

var _getResourcesCount = _interopRequireDefault(__webpack_require__(1282));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadDataset(context, payload, done) {
  console.log('LOAD DATASET called');
  context.dispatch('LOADING_DATA', {}); //load all required actions in parallel

  _async.default.parallel([function (callback) {
    context.service.read('dataset.resourcesByType', payload, {
      timeout: 20 * 1000
    }, function (err, res) {
      if (err) {
        context.dispatch('LOAD_DATASET_FAILURE', err);
      } else {
        context.dispatch('LOAD_DATASET_SUCCESS', res);
      }

      callback();
    });
  }, function (callback) {
    context.executeAction(_getResourcesCount.default, {
      id: payload.id
    }, callback);
  }], // final callback
  function (err, results) {
    if (err) {
      return;
    }

    context.dispatch('UPDATE_PAGE_TITLE', {
      pageTitle: _general.appFullTitle + ' | Dataset | ' + payload.id || ''
    });
    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1282:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getResourcesCount;

function getResourcesCount(context, payload, done) {
  context.service.read('dataset.countResourcesByType', payload, {
    timeout: 20 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_DATASET_TOTAL_FAILURE', err);
    } else {
      context.dispatch('UPDATE_DATASET_TOTAL_SUCCESS', res);
    }

    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1283:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadDynamicFacetsConfig;

function loadDynamicFacetsConfig(context, payload, done) {
  context.service.read('facet.dynamicConfig', payload, {
    timeout: 20 * 1000
  }, function (err, res) {
    context.dispatch('LOAD_FACETS_CONFIG', res);
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1284:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadEnvStates;

var _general = __webpack_require__(59);

function loadEnvStates(context, payload, done) {
  context.dispatch('LOADING_DATA', {});
  var pageTitle = 'Datasets';

  if (payload.pageTitle) {
    pageTitle = payload.pageTitle;
  }

  context.service.read('resource.envStates', payload, {
    timeout: 40 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_QUERIES_SAVED_FAILURE', err);
    } else {
      context.dispatch('UPDATE_QUERIES_SAVED', res);
    }

    context.dispatch('UPDATE_PAGE_TITLE', {
      pageTitle: _general.appFullTitle + ' | ' + pageTitle || ''
    });
    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1285:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getLoadEnvState;

var _getEnvState = _interopRequireDefault(__webpack_require__(645));

var _loadFacets = _interopRequireDefault(__webpack_require__(462));

var _async = _interopRequireDefault(__webpack_require__(342));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getLoadEnvState(context, payload, done) {
  //used for loading progress indicator
  context.dispatch('LOADING_DATA', {});

  _async.default.waterfall([function (cback) {
    context.executeAction(_getEnvState.default, payload, cback);
  }, function (previousResult, cback) {
    var stateObj = {};
    var ldr_prefix = 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#';
    var settingProp = '';
    previousResult.properties.forEach(function (item) {
      settingProp = item.propertyURI.replace(ldr_prefix, '').replace('http://www.w3.org/2000/01/rdf-schema#', '').trim();
      stateObj[settingProp] = decodeURIComponent(item.instances[0].value);
    });
    var selection = JSON.parse(stateObj.selection);
    var options = selection.options;
    var datasetConfig = {};

    if (options.datasetConfig) {
      datasetConfig = options.datasetConfig;
    }

    var env = {
      stateURI: previousResult.resourceURI,
      desc: stateObj.label,
      searchTerm: stateObj.searchTerm,
      selection: selection.prevSelection,
      pivotConstraint: stateObj.pivotConstraint,
      id: payload.id,
      invert: options.invert,
      range: options.range,
      datasetConfig: datasetConfig,
      analysisProps: options.analysisProps,
      page: stateObj.page,
      facetConfigs: options.facetConfigs
    };
    context.executeAction(_loadFacets.default, {
      mode: 'envState',
      isPivotChange: env.isPivotChange,
      stateURI: env.stateURI,
      id: payload.id,
      searchTerm: env.searchTerm,
      page: env.page,
      pivotConstraint: env.pivotConstraint,
      selection: {
        prevSelection: selection.prevSelection,
        options: {
          invert: env.invert,
          range: env.range,
          analysisProps: env.analysisProps,
          facetConfigs: options.facetConfigs
        }
      }
    }, cback);
  }], // final callback
  function (err) {
    if (err) console.log('error in loading env states', err);
    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1286:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleAddonsReact = __webpack_require__(79);

var _FileInput = _interopRequireDefault(__webpack_require__(646));

var _parseCSV = _interopRequireDefault(__webpack_require__(1294));

var _general = __webpack_require__(59);

var _createSampleCSVMapping = _interopRequireDefault(__webpack_require__(1295));

var _CSVPreview = _interopRequireDefault(__webpack_require__(1296));

var _semanticUiReact = __webpack_require__(69);

var _ImportStore = _interopRequireDefault(__webpack_require__(463));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var CSVImport = /*#__PURE__*/function (_React$Component) {
  _inherits(CSVImport, _React$Component);

  function CSVImport() {
    var _this;

    _classCallCheck(this, CSVImport);

    _this = _possibleConstructorReturn(this, (CSVImport.__proto__ || Object.getPrototypeOf(CSVImport)).call(this));
    _this.state = {
      status: 0,
      delimiter: ',',
      filePath: ''
    };
    return _this;
  }

  _createClass(CSVImport, [{
    key: "handleDelimiterChange",
    value: function handleDelimiterChange(event) {
      this.setState({
        delimiter: event.target.value
      });
    }
  }, {
    key: "handleMappingCreation",
    value: function handleMappingCreation() {
      //create a sample mapping configuration editable by user
      var self = this;
      var sample = self.props.ImportStore.rows[0];
      var columns = [];

      for (var prop in sample) {
        columns.push(prop);
      }

      this.context.executeAction(_createSampleCSVMapping.default, {
        filePath: self.state.filePath,
        delimiter: self.state.delimiter,
        columns: columns
      });
    }
  }, {
    key: "handleDataEdit",
    value: function handleDataEdit(value) {
      var self = this; //after the file is uploaded should start the processing
      //console.log(value);
      //call parsing action

      var fileBase = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
      self.setState({
        status: 1,
        filePath: value
      });
      this.context.executeAction(_parseCSV.default, {
        fileName: value.replace(fileBase, ''),
        delimiter: self.state.delimiter
      });
    }
  }, {
    key: "render",
    value: function render() {
      if (!_general.enableCSVImport) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding",
          ref: "CSVImport"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui row"
        }, _react.default.createElement("div", {
          className: "column"
        }, _react.default.createElement("div", {
          className: "ui segment content"
        }, _react.default.createElement("h2", null, "It is not allowed to import CSV files based on your current configurations. Please contact your admin to enable this feature..."))))));
      }

      var dropzoneRef;
      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding",
        ref: "CSVImport"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui row"
      }, _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ui segment content"
      }, _react.default.createElement("h2", {
        className: "ui header"
      }, "Import CSV files (as JSON-LD RDF Graph)"), _react.default.createElement("section", null, _react.default.createElement(_semanticUiReact.Form, {
        size: "big"
      }, !this.state.status ? _react.default.createElement(_semanticUiReact.Form.Field, {
        label: "Delimiter*",
        control: "input",
        placeholder: "Delimiter e.g. , or ;",
        onChange: this.handleDelimiterChange.bind(this),
        value: this.state.delimiter,
        style: {
          width: '100px'
        }
      }) : null, _react.default.createElement(_semanticUiReact.Divider, {
        hidden: true
      }), !this.state.status ? _react.default.createElement(_FileInput.default, {
        onDataEdit: this.handleDataEdit.bind(this),
        config: {
          acceptedMimeTypes: 'text/*, text/csv, application/csv, application/vnd.ms-excel',
          maxFileSize: 157286400,
          fileNamePrefix: 'data'
        }
      }) : null, this.state.status === 1 ? _react.default.createElement("div", {
        className: "uploaded"
      }, this.props.ImportStore.completed ? _react.default.createElement(_CSVPreview.default, {
        spec: this.props.ImportStore
      }) : 'Processing the file...') : null, _react.default.createElement(_semanticUiReact.Divider, {
        hidden: true
      }), this.props.ImportStore.completed && this.props.ImportStore.total ? _react.default.createElement("center", null, _react.default.createElement("a", {
        className: "ui icon button",
        href: "/importCSV"
      }, _react.default.createElement("i", {
        className: "left arrow icon"
      }), ' ', "Reset"), ' ', _react.default.createElement("div", {
        className: "ui primary icon button",
        onClick: this.handleMappingCreation.bind(this)
      }, "Configuration", ' ', _react.default.createElement("i", {
        className: "right arrow icon"
      }))) : null)))))));
    }
  }]);

  return CSVImport;
}(_react.default.Component);

CSVImport.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
CSVImport = (0, _fluxibleAddonsReact.connectToStores)(CSVImport, [_ImportStore.default], function (context, props) {
  return {
    ImportStore: context.getStore(_ImportStore.default).getState()
  };
});
module.exports = CSVImport;

/***/ }),

/***/ 1294:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseCSV;

function parseCSV(context, payload, done) {
  context.dispatch('CLEAR_IMPORT_CONFFIG_SUCCESS', {});
  context.service.read('import.csvparse', payload, {
    timeout: 30 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('READ_CSV_FAILURE', err);
      done();
    } else {
      context.dispatch('READ_CSV_SUCCESS', res);
      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1295:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createSampleCSVMapping;

var _fluxibleRouter = __webpack_require__(34);

function createSampleCSVMapping(context, payload, done) {
  context.service.create('import.csvmapping', payload, {
    timeout: 30 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('CREATE_CSV_MAPPING_FAILURE', err);
      done();
    } else {
      context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/' + encodeURIComponent(res.d) + '/resource/' + encodeURIComponent(res.r)
      });
      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1296:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var CSVPreview = /*#__PURE__*/function (_React$Component) {
  _inherits(CSVPreview, _React$Component);

  function CSVPreview() {
    _classCallCheck(this, CSVPreview);

    return _possibleConstructorReturn(this, (CSVPreview.__proto__ || Object.getPrototypeOf(CSVPreview)).call(this));
  }

  _createClass(CSVPreview, [{
    key: "render",
    value: function render() {
      var theaderDIV,
          dtableHeaders = [],
          dtableCells = [],
          list;
      var outDIV = '';
      var countDIV = '';

      if (parseInt(this.props.spec.total)) {
        for (var prop in this.props.spec.rows[0]) {
          dtableHeaders.push(_react.default.createElement(_semanticUiReact.Table.HeaderCell, {
            key: prop
          }, prop));
        }

        theaderDIV = _react.default.createElement(_semanticUiReact.Table.Header, null, _react.default.createElement(_semanticUiReact.Table.Row, null, dtableHeaders));
        list = this.props.spec.rows.map(function (node, index) {
          dtableCells = [];

          for (var _prop in node) {
            dtableCells.push(_react.default.createElement(_semanticUiReact.Table.Cell, {
              key: 'c' + index + _prop
            }, node[_prop]));
          }

          return _react.default.createElement(_semanticUiReact.Table.Row, {
            key: index
          }, dtableCells);
        });
        outDIV = _react.default.createElement(_semanticUiReact.Table, {
          celled: true,
          padded: true,
          striped: true,
          selectable: true,
          compact: true
        }, theaderDIV, _react.default.createElement(_semanticUiReact.Table.Body, null, list));
        countDIV = 'Displaying ' + this.props.spec.total + ' rows as preview:';
      } else {
        outDIV = _react.default.createElement("div", {
          className: "ui red segment"
        }, _react.default.createElement("div", {
          className: "header"
        }, "No record was found in the file! It might be a parsing issue, please check your file and the delimiter used. ", _react.default.createElement("br", null), "It could also occur because you have not set the right permission on your upload folder or the maximum upload size on your web server is exceeded!"));
      }

      return _react.default.createElement("div", {
        className: "ui segment",
        ref: "CSVPreview",
        style: {
          overflow: 'scroll'
        }
      }, _react.default.createElement("center", null, countDIV), outDIV);
    }
  }]);

  return CSVPreview;
}(_react.default.Component);

module.exports = CSVPreview;

/***/ }),

/***/ 1297:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleRouter = __webpack_require__(34);

var _general = __webpack_require__(59);

var _semanticUiReact = __webpack_require__(69);

var _PrefixBasedInput = _interopRequireDefault(__webpack_require__(343));

var _url = _interopRequireDefault(__webpack_require__(486));

var _createEmptyDataset = _interopRequireDefault(__webpack_require__(1451));

var _createFromExistingDataset = _interopRequireDefault(__webpack_require__(1453));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var NewDataset = /*#__PURE__*/function (_React$Component) {
  _inherits(NewDataset, _React$Component);

  function NewDataset(props) {
    var _this;

    _classCallCheck(this, NewDataset);

    _this = _possibleConstructorReturn(this, (NewDataset.__proto__ || Object.getPrototypeOf(NewDataset)).call(this, props));
    _this.state = {
      datasetLabel: '',
      endpointURI: '',
      graphName: '',
      resourceFocusType: ''
    };

    _this.handleCreateDataset.bind(_this);

    return _this;
  }

  _createClass(NewDataset, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "handleChange",
    value: function handleChange(element, e) {
      if (element === 'datasetLabel') {
        this.setState({
          datasetLabel: e.target.value.trim()
        });
      } else if (element === 'graphName') {
        this.setState({
          graphName: e.target.value.trim()
        });
      }
    }
  }, {
    key: "handleResourceFocusTypeChange",
    value: function handleResourceFocusTypeChange(val) {
      this.setState({
        resourceFocusType: val.trim()
      });
    }
  }, {
    key: "handleEndpointURIChange",
    value: function handleEndpointURIChange(val) {
      this.setState({
        endpointURI: val.trim()
      });
    }
  }, {
    key: "handleCreateDataset",
    value: function handleCreateDataset() {
      var user,
          tmp = this.context.getUser(); //we do not need this for super user

      if (tmp) {
        if (!tmp.isSuperUser || !parseInt(tmp.isSuperUser)) {
          user = tmp.id;
        }
      }

      var datasetURI, datasetLabel, endpointURI, graphName, resourceFocusType, host, port, path, protocol, endpointType;
      graphName = 'default';
      datasetLabel = 'd' + Math.round(+new Date() / 1000);
      datasetURI = _general.baseResourceDomain[0] + '/' + datasetLabel; //do not add two slashes

      if (_general.baseResourceDomain[0].slice(-1) === '/') {
        datasetURI = _general.baseResourceDomain[0] + datasetLabel;
      }

      if (this.state.datasetLabel) {
        datasetLabel = this.state.datasetLabel;
      }

      if (this.state.graphName) {
        graphName = this.state.graphName;
      }

      if (this.state.resourceFocusType) {
        resourceFocusType = this.state.resourceFocusType;
      }

      if (!this.state.endpointURI) {
        this.context.executeAction(_createEmptyDataset.default, {
          datasetLabel: datasetLabel,
          datasetURI: datasetURI,
          user: user
        });
      } else {
        endpointURI = this.state.endpointURI;

        if (endpointURI.indexOf('http://') === -1 && endpointURI.indexOf('https://') === -1) {
          endpointURI = 'http://' + endpointURI;
        }

        var parsed = _url.default.parse(endpointURI);

        host = parsed.hostname;
        path = parsed.pathname;

        if (parsed.port) {
          port = parsed.port;
        } else {
          port = 80;
        }

        if (parsed.protocol) {
          protocol = parsed.protocol.replace(':', '');
        } else {
          protocol = 'http';
        }

        endpointType = 'ClioPatria';
        this.context.executeAction(_createFromExistingDataset.default, {
          datasetLabel: datasetLabel,
          datasetURI: datasetURI,
          graphName: graphName,
          resourceFocusType: resourceFocusType,
          host: host,
          port: port,
          path: path,
          protocol: protocol,
          endpointType: endpointType
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var formDIV,
          errorDIV,
          self = this;
      var newDatasetID, newDatasetURI;
      var user = this.context.getUser();

      if (_general.enableAuthentication && !user) {
        errorDIV = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, ' ', "Please ", _react.default.createElement("a", {
          href: "".concat(PUBLIC_URL, "/register")
        }, "Register"), ' ', "or ", _react.default.createElement("a", {
          href: "".concat(PUBLIC_URL, "/login")
        }, "Login"), " to see the datasets."));
      } else {
        if (!_general.enableAddingNewDatasets) {
          errorDIV = _react.default.createElement("div", {
            className: "ui warning message"
          }, _react.default.createElement("div", {
            className: "header"
          }, ' ', "It is not possible to add new datasets in this application!"));
        }
      }

      var commonEndpoints = [{
        title: 'http://dbpedia.org/sparql'
      }, {
        title: 'http://live.dbpedia.org/sparql'
      }];

      if (!errorDIV) {
        formDIV = _react.default.createElement(_semanticUiReact.Form, {
          size: "big"
        }, _react.default.createElement(_semanticUiReact.Form.Field, {
          label: "Dataset Label",
          control: "input",
          placeholder: "Dataset Label / or leave empty for a random name!",
          onChange: this.handleChange.bind(this, 'datasetLabel')
        }), _react.default.createElement("div", null, _react.default.createElement("b", null, "URL of the SPARQL Endpoint"), _react.default.createElement(_PrefixBasedInput.default, {
          autocompletelist: commonEndpoints,
          noFocus: true,
          spec: {
            value: ''
          },
          onDataEdit: this.handleEndpointURIChange.bind(this),
          placeholder: "URL of the SPARQL Endpoint / or leave it empty to use generic one in your local config",
          allowActionByKey: false
        })), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), this.state.graphName || this.state.endpointURI ? _react.default.createElement(_semanticUiReact.Form.Field, {
          label: "Graph Name",
          control: "input",
          placeholder: "Graph Name / or leave it empty for all graphs",
          onChange: this.handleChange.bind(this, 'graphName')
        }) : '', this.state.resourceFocusType || this.state.endpointURI ? _react.default.createElement("div", null, _react.default.createElement("b", null, "Resource Focus Type"), _react.default.createElement(_PrefixBasedInput.default, {
          includeOnly: ['classes'],
          noFocus: true,
          spec: {
            value: ''
          },
          onDataEdit: this.handleResourceFocusTypeChange.bind(this),
          placeholder: "Resource Focus Type / or leave it empty for all resource types",
          onEnterPress: this.handleCreateDataset.bind(this),
          allowActionByKey: true
        })) : '', _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), _react.default.createElement("div", {
          className: "ui big blue button",
          onClick: function onClick() {
            try {
              _this2.handleCreateDataset();

              console.log('Create dataset');
            } catch (e) {
              console.log(e);
            }
          }
        }, "Add Dataset"), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }));
      }

      var headerDIV = _react.default.createElement("h2", null, "Add a new dataset by connecting to a SPARQL endpoint ");

      if (_general.enableCSVImport) {
        headerDIV = _react.default.createElement("h2", null, "Add a new dataset by connecting to a SPARQL endpoint or", ' ', _react.default.createElement("a", {
          className: "ui big icon button",
          href: "/importCSV"
        }, _react.default.createElement("i", {
          className: "icon file alternate outline"
        }), " Import CSV data"));
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "datasets"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, headerDIV, errorDIV, formDIV)));
    }
  }]);

  return NewDataset;
}(_react.default.Component);

NewDataset.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
var _default = NewDataset;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1298:
/***/ (function(module, exports) {

module.exports = {
  autocompletelist: {
    ldrClasses: [{
      title: 'ldr:FacetsConfig'
    }, {
      title: 'ldr:ReactorConfig'
    }, {
      title: 'ldr:ServerConfig'
    }, {
      title: 'ldr:FacetsPropertyConfig'
    }, {
      title: 'ldr:AnnotatedResource'
    }, {
      title: 'ldr:Constraint'
    }],
    ldrProperties: [{
      title: 'ldr:config'
    }, {
      title: 'ldr:dataset'
    }, {
      title: 'ldr:resource'
    }, {
      title: 'ldr:property'
    }, {
      title: 'ldr:object'
    }, {
      title: 'ldr:dataType'
    }, {
      title: 'ldr:scope'
    }, {
      title: 'ldr:list'
    }, {
      title: 'ldr:label'
    }, {
      title: 'ldr:datasetLabel'
    }, {
      title: 'ldr:datasetCategory'
    }, {
      title: 'ldr:host'
    }, {
      title: 'ldr:protocol'
    }, {
      title: 'ldr:port'
    }, {
      title: 'ldr:path'
    }, {
      title: 'ldr:username'
    }, {
      title: 'ldr:password'
    }, {
      title: 'ldr:delimitedBy'
    }, {
      title: 'ldr:annotatedBy'
    }, {
      title: 'ldr:annotations'
    }, {
      title: 'ldr:surfaceForm'
    }, {
      title: 'ldr:offset'
    }, {
      title: 'ldr:uri'
    }, {
      title: 'ldr:options'
    }, {
      title: 'ldr:metadata'
    }, {
      title: 'ldr:position'
    }, {
      title: 'ldr:pivotDataset'
    }, {
      title: 'ldr:graphName'
    }, {
      title: 'ldr:useReasoning'
    }, {
      title: 'ldr:datasetReactor'
    }, {
      title: 'ldr:resourceFocusType'
    }, {
      title: 'ldr:resourceGeoProperty'
    }, {
      title: 'ldr:resourceImageProperty'
    }, {
      title: 'ldr:resourceLabelProperty'
    }, {
      title: 'ldr:resourceLanguageTag'
    }, {
      title: 'ldr:maxNumberOfResourcesOnPage'
    }, {
      title: 'ldr:templateResource'
    }, {
      title: 'ldr:readOnly'
    }, {
      title: 'ldr:readOnlyProperty'
    }, {
      title: 'ldr:readOnlyResource'
    }, {
      title: 'ldr:openInNewWindows'
    }, {
      title: 'ldr:resourceReactor'
    }, {
      title: 'ldr:usePropertyCategories'
    }, {
      title: 'ldr:propertyCategories'
    }, {
      title: 'ldr:dynamicResourceDomain'
    }, {
      title: 'ldr:treatAsResourceType'
    }, {
      title: 'ldr:propertyReactor'
    }, {
      title: 'ldr:category'
    }, {
      title: 'ldr:hint'
    }, {
      title: 'ldr:zoomLevel'
    }, {
      title: 'ldr:simplifyPolyLines'
    }, {
      title: 'ldr:simplifyHighQuality'
    }, {
      title: 'ldr:simplifyTolerance'
    }, {
      title: 'ldr:mapWidth'
    }, {
      title: 'ldr:mapHeight'
    }, {
      title: 'ldr:multiColor'
    }, {
      title: 'ldr:isHidden'
    }, {
      title: 'ldr:hasNumericValues'
    }, {
      title: 'ldr:defaultValue'
    }, {
      title: 'ldr:allowResourceClone'
    }, {
      title: 'ldr:allowResourceDelete'
    }, {
      title: 'ldr:allowResourceNew'
    }, {
      title: 'ldr:allowPropertyNew'
    }, {
      title: 'ldr:allowNewValue'
    }, {
      title: 'ldr:hasLimitedAccess'
    }, {
      title: 'ldr:displayQueries'
    }, {
      title: 'ldr:allowRangeOfValues'
    }, {
      title: 'ldr:allowInlineConfig'
    }, {
      title: 'ldr:allowExtension'
    }, {
      title: 'ldr:hasBlankNode'
    }, {
      title: 'ldr:autoLoadDetails'
    }, {
      title: 'ldr:objectReactor'
    }, {
      title: 'ldr:objectIEditor'
    }, {
      title: 'ldr:objectAEditor'
    }, {
      title: 'ldr:extendedOEditor'
    }, {
      title: 'ldr:objectIViewer'
    }, {
      title: 'ldr:hidePropertyName'
    }, {
      title: 'ldr:objectAViewer'
    }, {
      title: 'ldr:objectBrowser'
    }, {
      title: 'ldr:datasetViewer'
    }, {
      title: 'ldr:extendedOViewer'
    }, {
      title: 'ldr:shortenURI'
    }, {
      title: 'ldr:asWikipedia'
    }, {
      title: 'ldr:dateTimeFormat'
    }, {
      title: 'ldr:shapeColor'
    }, {
      title: 'ldr:height'
    }, {
      title: 'ldr:width'
    }, {
      title: 'ldr:allowUserDefinedValue'
    }, {
      title: 'ldr:calendarFormat'
    }, {
      title: 'ldr:containerDatasetURI'
    }, {
      title: 'ldr:hasLinkedValue'
    }, {
      title: 'ldr:constraint'
    }, {
      title: 'ldr:restrictAnalysisToSelected'
    }, {
      title: 'ldr:enabled'
    }, {
      title: 'ldr:acceptedMimeTypes'
    }, {
      title: 'ldr:fileNamePrefix'
    }, {
      title: 'ldr:maxFileSize'
    }, {
      title: 'ldr:decodeURIComponent'
    }, {
      title: 'ldr:encodeURIComponent'
    }, {
      title: 'ldr:rtl'
    }],
    ldrLiterals: [{
      title: 'OrgResource'
    }, {
      title: 'PersonResource'
    }, {
      title: 'AggregateObject'
    }, {
      title: 'BasicAggregateView'
    }, {
      title: 'BasicDBpediaView'
    }, {
      title: 'BasicDateTimeView'
    }, {
      title: 'BasicIndividualView'
    }, {
      title: 'BasicHTMLContentView'
    }, {
      title: 'BasicImageView'
    }, {
      title: 'YASQEViewer'
    }, {
      title: 'BasicLinkedIndividualView'
    }, {
      title: 'BasicMapView'
    }, {
      title: 'LanguageView'
    }, {
      title: 'PasswordView'
    }, {
      title: 'ThreeLetterCountryView'
    }, {
      title: 'ToggleView'
    }, {
      title: 'TwoLetterCountryView'
    }, {
      title: 'BasicAggregateMapView'
    }, {
      title: 'DBpediaMapView'
    }, {
      title: 'MarkdownView'
    }, {
      title: 'BasicCalendarInput'
    }, {
      title: 'BasicTextareaInput'
    }, {
      title: 'DBpediaInput'
    }, {
      title: 'LanguageInput'
    }, {
      title: 'PasswordInput'
    }, {
      title: 'PrefixBasedInput'
    }, {
      title: 'ToggleEdit'
    }, {
      title: 'FileInput'
    }, {
      title: 'BasicOptionInput'
    }, {
      title: 'BasicResourceList'
    }, {
      title: 'TagListBrowser'
    }, {
      title: 'GeoListBrowser'
    }, {
      title: 'CheckListBrowser'
    }, {
      title: 'TaxonomyBrowser'
    }, {
      title: 'BarChartBrowser'
    }, {
      title: 'TagCloudBrowser'
    }],
    classes: [{
      title: 'skos:Concept'
    }, {
      title: 'schema:Organization'
    }, {
      title: 'foaf:Document'
    }, {
      title: 'foaf:Person'
    }, {
      title: 'foaf:Organization'
    }, {
      title: 'dbo:Organisation'
    }, {
      title: 'dbo:University'
    }, {
      title: 'vivo:Company'
    }, {
      title: 'bibo:Book'
    }, {
      title: 'void:Dataset'
    }, {
      title: 'prov:Entity'
    }],
    properties: [{
      title: 'rdf:type'
    }, {
      title: 'rdfs:label'
    }, {
      title: 'rdfs:comment'
    }, {
      title: 'rdfs:seeAlso'
    }, {
      title: 'owl:sameAs'
    }, {
      title: 'geo:geometry'
    }, {
      title: 'skos:prefLabel'
    }, {
      title: 'skos:narrower'
    }, {
      title: 'skos:altLabel'
    }, {
      title: 'skos:broader'
    }, {
      title: 'skos:definition'
    }, {
      title: 'skos:exactMatch'
    }, {
      title: 'skos:example'
    }, {
      title: 'skos:member'
    }, {
      title: 'skos:note'
    }, {
      title: 'skos:related'
    }, {
      title: 'foaf:primaryTopic'
    }, {
      title: 'foaf:homepage'
    }, {
      title: 'foaf:depiction'
    }, {
      title: 'foaf:thumbnail'
    }, {
      title: 'foaf:firstName'
    }, {
      title: 'foaf:lastName'
    }, {
      title: 'foaf:name'
    }, {
      title: 'vcard:email'
    }, {
      title: 'dcterms:title'
    }, {
      title: 'dcterms:subject'
    }, {
      title: 'dcterms:creator'
    }, {
      title: 'dcterms:description'
    }, {
      title: 'dcterms:contributor'
    }, {
      title: 'dcterms:modified'
    }, {
      title: 'dcterms:isPartOf'
    }, {
      title: 'dcterms:issued'
    }, {
      title: 'dcterms:format'
    }, {
      title: 'dcterms:language'
    }, {
      title: 'dbo:birthPlace'
    }, {
      title: 'dbo:deathPlace'
    }, {
      title: 'dbo:birthDate'
    }, {
      title: 'dbo:spouse'
    }, {
      title: 'dbo:knownFor'
    }, {
      title: 'dbo:deathDate'
    }, {
      title: 'dbp:children'
    }]
  }
};

/***/ }),

/***/ 1451:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createEmptyDataset;

var _fluxibleRouter = __webpack_require__(34);

var _general = __webpack_require__(59);

var _addDatasetEditor = _interopRequireDefault(__webpack_require__(1452));

var _createNewReactorConfig = _interopRequireDefault(__webpack_require__(358));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createEmptyDataset(context, payload, done) {
  var newDatasetURI = payload.datasetURI;
  context.executeAction(_createNewReactorConfig.default, {
    scope: 'D',
    dataset: newDatasetURI,
    resourceURI: '',
    propertyURI: '',
    options: {
      fromScratch: 1,
      datasetLabel: payload.datasetLabel
    },
    redirect: 0
  }, function (err, res) {
    context.service.create('resource.new', {
      dataset: newDatasetURI,
      isNewDataset: 1
    }, {}, function (err2, res2) {
      if (err) {
        context.dispatch('CREATE_DATASET_FAILURE', err2);
        done();
      } else {
        context.dispatch('CREATE_DATASET_SUCCESS', res2); //navigate

        context.executeAction(_fluxibleRouter.navigateAction, {
          url: '/dataset/1/' + encodeURIComponent(res2.datasetURI)
        });
        context.executeAction(_addDatasetEditor.default, {
          dataset: newDatasetURI,
          user: payload.user
        }, function (err, res) {
          done();
        });
      }
    });
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1452:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = addDatasetEditor;

var _fluxibleRouter = __webpack_require__(34);

function addDatasetEditor(context, payload, done) {
  context.service.create('admin.datasetEditor', payload, {}, function (err, res) {
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1453:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createFromExistingDataset;

var _fluxibleRouter = __webpack_require__(34);

var _general = __webpack_require__(59);

var _createNewReactorConfig = _interopRequireDefault(__webpack_require__(358));

var _createASampleFacetsConfig = _interopRequireDefault(__webpack_require__(487));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PUBLIC_URL = undefined ? undefined : '';

function createFromExistingDataset(context, payload, done) {
  var newDatasetURI = payload.datasetURI;
  context.executeAction(_createASampleFacetsConfig.default, {
    dataset: newDatasetURI,
    options: {
      datasetLabel: payload.datasetLabel
    },
    redirect: 0
  }, function (err0, res0) {
    context.executeAction(_createNewReactorConfig.default, {
      scope: 'D',
      dataset: newDatasetURI,
      resourceURI: '',
      propertyURI: '',
      options: {
        fromScratch: 0,
        datasetLabel: payload.datasetLabel,
        resourceFocusType: payload.resourceFocusType
      },
      redirect: 0
    }, function (err, res) {
      context.service.create('resource.newServerConfig', {
        dataset: newDatasetURI,
        isNewDataset: 1,
        options: {
          host: payload.host,
          port: payload.port,
          path: payload.path,
          protocol: payload.protocol,
          graphName: payload.graphName,
          endpointType: payload.endpointType,
          datasetLabel: payload.datasetLabel
        }
      }, {}, function (err2, res2) {
        if (err2) {
          context.dispatch('CREATE_DATASET_FAILURE', err2);
          done();
        } else {
          context.dispatch('CREATE_DATASET_SUCCESS', res2); // would you want to navigate ??
          //navigate

          context.executeAction(_fluxibleRouter.navigateAction, {
            url: "".concat(PUBLIC_URL, "/datasets")
          });
          done();
        }
      });
    });
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1454:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _fluxibleAddonsReact = __webpack_require__(79);

var _DatasetsStore = _interopRequireDefault(__webpack_require__(488));

var _DatasetAnnotationStore = _interopRequireDefault(__webpack_require__(705));

var _fluxibleRouter = __webpack_require__(34);

var _general = __webpack_require__(59);

var _accessManagement = __webpack_require__(489);

var _semanticUiReact = __webpack_require__(69);

var _PrefixBasedInput = _interopRequireDefault(__webpack_require__(343));

var _url = _interopRequireDefault(__webpack_require__(486));

var _annotateDataset = _interopRequireDefault(__webpack_require__(1455));

var _countAnnotatedResourcesWithProp = _interopRequireDefault(__webpack_require__(706));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var DatasetAnnotation = /*#__PURE__*/function (_React$Component) {
  _inherits(DatasetAnnotation, _React$Component);

  function DatasetAnnotation(props) {
    var _this;

    _classCallCheck(this, DatasetAnnotation);

    _this = _possibleConstructorReturn(this, (DatasetAnnotation.__proto__ || Object.getPrototypeOf(DatasetAnnotation)).call(this, props));
    _this.state = {
      api: 'dbspotlight',
      language: 'en',
      stopWords: '',
      confidence: 0.5,
      batchSize: 10,
      feedbackInterval: 3,
      advancedMode: 0,
      storingDataset: '',
      datasetURI: '',
      resourceType: '',
      propertyURI: '',
      annotationMode: 0,
      storeInNewDataset: false,
      noDynamicConfig: 0,
      hideFeedback: false
    };
    return _this;
  }

  _createClass(DatasetAnnotation, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.state.annotationMode && !this.state.hideFeedback) {
        var tags = this.prepareTagsForCloud(this.props.DatasetAnnotationStore.tags);

        if (tags.length) {
          //$('.tagCloud').jQCloud(this.prepareTagsForCloud(this.props.DatasetAnnotationStore.tags));
          $('.tagCloud').jQCloud('update', tags, {
            autoResize: true
          });
        }
      }
    }
    /*
    compareObjProps(a,b) {
        if (a.count < b.count)
            return 1;
        if (a.count > b.count)
            return -1;
        return 0;
    }
    */

  }, {
    key: "prepareTagsForCloud",
    value: function prepareTagsForCloud(obj) {
      var tags = [];

      for (var prop in obj) {
        tags.push({
          link: prop,
          weight: obj[prop].count,
          text: obj[prop].text,
          html: {
            title: obj[prop].count,
            target: '_blank'
          }
        });
      }

      return tags;
    }
    /*
    generateTagArray(obj){
        let tags = [];
        for(let prop in obj){
            tags.push({uri: prop, count: obj[prop].count, text: obj[prop].text});
        }
        tags.sort(this.compareObjProps);
        //limit it to 500
        if(tags.length>2000){
            tags = tags.slice(0, 2000);
        }
        return tags;
    }
    */

  }, {
    key: "handleChange",
    value: function handleChange(element, e) {
      if (element === 'datasetURI') {
        if (e.target.value) {
          this.setState({
            datasetURI: e.target.value.trim()
          });
        } else {
          this.setState({
            datasetURI: ''
          });
        }
      } else if (element === 'resourceType') {
        this.setState({
          resourceType: e.target.value.trim()
        });
      } else if (element === 'propertyURI') {
        this.setState({
          propertyURI: e.target.value.trim()
        });
      }
    }
  }, {
    key: "handleResourceURIChange",
    value: function handleResourceURIChange(val) {
      this.setState({
        resourceType: val.trim()
      });
    }
  }, {
    key: "handlePropertyURIChange",
    value: function handlePropertyURIChange(val) {
      this.setState({
        propertyURI: val.trim()
      });
    }
  }, {
    key: "handleStoringCheckBox",
    value: function handleStoringCheckBox(e, t) {
      if (t.value === '1') {
        //create a new random dataset URI
        var newDatasetURI = _general.baseResourceDomain[0] + '/astore' + Math.round(+new Date() / 1000); //do not add two slashes

        if (_general.baseResourceDomain[0].slice(-1) === '/') {
          newDatasetURI = _general.baseResourceDomain[0] + 'astore' + Math.round(+new Date() / 1000);
        }

        this.setState({
          storeInNewDataset: true,
          storingDataset: newDatasetURI,
          noDynamicConfig: 0
        });
      } else {
        this.setState({
          storeInNewDataset: false,
          storingDataset: '',
          noDynamicConfig: 0
        });
      }
    }
  }, {
    key: "handleFeedbackCheckBox",
    value: function handleFeedbackCheckBox(e, t) {
      if (t.value === '1') {
        this.setState({
          hideFeedback: true
        });
      } else {
        this.setState({
          hideFeedback: false
        });
      }
    }
  }, {
    key: "startInterval",
    value: function startInterval() {
      var self = this; //set an interval for progress bar

      var intervalId = setInterval(function () {
        self.context.executeAction(_countAnnotatedResourcesWithProp.default, {
          id: self.state.storeInNewDataset ? self.state.storingDataset : self.state.datasetURI,
          resourceType: self.state.resourceType,
          propertyURI: self.state.propertyURI,
          inANewDataset: self.state.storingDataset,
          storingDataset: self.state.storingDataset
        });

        if (self.props.DatasetAnnotationStore.stats.annotated && self.props.DatasetAnnotationStore.stats.annotated === self.props.DatasetAnnotationStore.stats.total) {
          clearInterval(intervalId);
        }
      }, self.state.feedbackInterval * 1000);
      this.setState({
        intervalId: intervalId
      });
    }
  }, {
    key: "handleAnnotateDataset",
    value: function handleAnnotateDataset() {
      var self = this;

      if (self.state.datasetURI && self.state.propertyURI) {
        self.startInterval();
        self.setState({
          annotationMode: 1
        });
        self.context.executeAction(_annotateDataset.default, {
          id: self.state.datasetURI,
          resourceType: self.state.resourceType,
          propertyURI: self.state.propertyURI,
          storingDataset: self.state.storingDataset,
          datasetLabel: self.findDatasetLabel(self.state.datasetURI),
          noDynamicConfig: self.state.noDynamicConfig,
          confidence: self.state.confidence,
          api: self.state.api,
          stopWords: self.state.stopWords,
          hideFeedback: self.state.hideFeedback,
          batchSize: self.state.batchSize
        });
      }
    }
  }, {
    key: "findDatasetLabel",
    value: function findDatasetLabel(datasetURI) {
      var dss = this.props.DatasetsStore.datasetsList;
      var label = datasetURI;
      dss.forEach(function (node) {
        if (node.features && node.features.datasetLabel && node.d === datasetURI) {
          label = node.features.datasetLabel;
          return label;
        }
      });
      return label;
    }
  }, {
    key: "showHideAdvanceOptions",
    value: function showHideAdvanceOptions() {
      this.setState({
        advancedMode: !this.state.advancedMode
      });
    }
  }, {
    key: "handleNewDatasetChange",
    value: function handleNewDatasetChange(event) {
      //in this case, do not create a dynamic config, admin should handle it manually
      this.setState({
        storingDataset: event.target.value,
        noDynamicConfig: 1
      });
    }
  }, {
    key: "handleConfidenceChange",
    value: function handleConfidenceChange(event) {
      var val = event.target.value.trim(); //if it is a number

      if (!isNaN(val)) {
        if (Number(val) <= 1 && Number(val) >= 0) {
          this.setState({
            confidence: val
          });
        }
      }
    }
  }, {
    key: "handleAPIChange",
    value: function handleAPIChange(event) {
      var val = event.target.value.trim();
      this.setState({
        api: val
      });
    }
  }, {
    key: "handleBatchSizeChange",
    value: function handleBatchSizeChange(event) {
      var val = event.target.value.trim(); //if it is a number

      if (!isNaN(val)) {
        if (Number(val) <= 100 && Number(val) >= 1) {
          this.setState({
            batchSize: val
          });
        }
      }
    }
  }, {
    key: "handleFeedbackIntervalChange",
    value: function handleFeedbackIntervalChange(event) {
      var val = event.target.value.trim(); //if it is a number

      if (!isNaN(val)) {
        if (Number(val) >= 1) {
          this.setState({
            feedbackInterval: val
          });
        }
      }
    }
  }, {
    key: "handleStopWordsChange",
    value: function handleStopWordsChange(event) {
      this.setState({
        stopWords: event.target.value.trim()
      });
    }
  }, {
    key: "render",
    value: function render() {
      var optionsList,
          dss = this.props.DatasetsStore.datasetsList;
      var self = this,
          errorDIV = '',
          formDIV = '';
      var user;
      var allowChangingNewDataset = false; //do not query for user each time we annotate content!

      if (!this.state.annotationMode) {
        user = this.context.getUser(); //only admin can change the random new dataset!

        if (!_general.enableAuthentication || parseInt(user.isSuperUser)) {
          allowChangingNewDataset = true;
        }

        var tmpOption = '';
        optionsList = dss.filter(function (option, index) {
          //filter out datasets if no access is provided
          tmpOption = '1';

          if (_general.enableAuthentication && option.features.hasLimitedAccess && parseInt(option.features.hasLimitedAccess)) {
            //need to handle access to the dataset
            //if user is the editor by default he already has view access
            var editAccess = (0, _accessManagement.checkEditAccess)(user, option.d, 0, 0, 0);

            if (!editAccess.access || editAccess.type === 'partial') {
              var viewAccess = (0, _accessManagement.checkViewAccess)(user, option.d, 0, 0, 0);

              if (!viewAccess.access) {
                tmpOption = '';
              }
            }
          }

          if (tmpOption) {
            return true;
          } else {
            return false;
          }
        }).map(function (option, index) {
          return _react.default.createElement("option", {
            key: index,
            value: option.d
          }, ' ', option.d && option.features.datasetLabel ? option.features.datasetLabel : option.d, ' ');
        });
      }

      if (_general.enableAuthentication && !this.state.annotationMode && !user) {
        errorDIV = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, ' ', "Please ", _react.default.createElement("a", {
          href: "/register"
        }, "Register"), " or", ' ', _react.default.createElement("a", {
          href: "/login"
        }, "Login"), " to see the datasets."));
      } else {
        if (!_general.enableDatasetAnnotation) {
          errorDIV = _react.default.createElement("div", {
            className: "ui warning message"
          }, _react.default.createElement("div", {
            className: "header"
          }, ' ', "It is not possible to annotate datasets in this application!"));
        } else if (!dss.length) {
          errorDIV = _react.default.createElement("div", {
            className: "ui warning message"
          }, _react.default.createElement("div", {
            className: "header"
          }, ' ', "No dataset found for annotations!"));
        }
      }

      var tagsDIV = '';
      /*
      tagsDIV = self.generateTagArray(this.props.DatasetAnnotationStore.tags).map((node, index)=>{
          return (<div className='ui basic label' key={index}><a href={node.uri} target="_blank">{node.text}</a> ({node.count})</div>);
      });
      */

      if (!errorDIV) {
        formDIV = _react.default.createElement(_semanticUiReact.Form, {
          size: "big"
        }, _react.default.createElement("b", null, "* Dataset"), _react.default.createElement("select", {
          ref: "datasetURI",
          className: "ui search dropdown",
          onChange: this.handleChange.bind(this, 'datasetURI')
        }, _react.default.createElement("option", {
          value: ''
        }, " Select a Dataset "), optionsList), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), _react.default.createElement("b", null, "URI of the resource types"), _react.default.createElement(_PrefixBasedInput.default, {
          includeOnly: ['ldrClasses', 'classes'],
          noFocus: true,
          spec: {
            value: ''
          },
          onDataEdit: this.handleResourceURIChange.bind(this),
          placeholder: "URI of the resource types to be annotated / leave empty for all resources",
          allowActionByKey: false
        }), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), _react.default.createElement("b", null, "* URI of the property used for annotation"), _react.default.createElement(_PrefixBasedInput.default, {
          includeOnly: ['ldrProperties', 'properties'],
          noFocus: true,
          spec: {
            value: ''
          },
          onDataEdit: this.handlePropertyURIChange.bind(this),
          placeholder: "URI of the property for which the values are annotated",
          allowActionByKey: false
        }), _react.default.createElement(_semanticUiReact.Form.Group, null, _react.default.createElement("label", null, "Store annotations in a new dataset?"), _react.default.createElement(_semanticUiReact.Form.Radio, {
          label: "No, just enrich the original dataset",
          name: "storeAnn",
          value: "0",
          checked: !this.state.storeInNewDataset,
          onChange: this.handleStoringCheckBox.bind(this)
        }), _react.default.createElement(_semanticUiReact.Form.Radio, {
          label: "Yes, create a new dataset for annotations",
          name: "storeAnn",
          value: "1",
          checked: this.state.storeInNewDataset,
          onChange: this.handleStoringCheckBox.bind(this)
        })), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), allowChangingNewDataset && this.state.storeInNewDataset ? _react.default.createElement("input", {
          ref: "newDatasetInput",
          type: "text",
          value: this.state.storingDataset,
          placeholder: "Add URI of the new dataset",
          onChange: this.handleNewDatasetChange.bind(this)
        }) : '', _react.default.createElement("a", {
          className: "ui basic icon button",
          onClick: this.showHideAdvanceOptions.bind(this)
        }, _react.default.createElement("i", {
          className: "blue icon setting"
        }), " Advanced Options"), this.state.advancedMode ? _react.default.createElement("div", {
          className: "ui list"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("b", null, "Annotator API"), _react.default.createElement("select", {
          ref: "api",
          className: "ui search dropdown",
          onChange: this.handleAPIChange.bind(this),
          value: this.state.api
        }, _react.default.createElement("option", {
          value: "dbspotlight"
        }, ' ', "DBpedia Spotlight", ' '), _react.default.createElement("option", {
          value: "custom"
        }, " Custom "))), _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("b", null, "Language"), _react.default.createElement("select", {
          ref: "language",
          className: "ui disabled search dropdown"
        }, _react.default.createElement("option", {
          value: "en"
        }, " English "))), _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("b", null, "Confidence"), _react.default.createElement("input", {
          type: "text",
          value: this.state.confidence,
          onChange: this.handleConfidenceChange.bind(this),
          placeholder: "Confidence degree: a number between 0 to 1"
        })), _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("b", null, "Stop Words"), _react.default.createElement("input", {
          type: "text",
          value: this.state.stopWords,
          onChange: this.handleStopWordsChange.bind(this),
          placeholder: "Comma seperated list of stop words"
        })), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("b", null, "Batch Size (number of parallel requests)"), _react.default.createElement("input", {
          type: "text",
          value: this.state.batchSize,
          onChange: this.handleBatchSizeChange.bind(this),
          placeholder: "Batch Size: a number between 1 to 100"
        })), _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("b", null, "Feedback Interval (in seconds)"), _react.default.createElement("input", {
          type: "text",
          value: this.state.feedbackInterval,
          onChange: this.handleFeedbackIntervalChange.bind(this),
          placeholder: "Feedback Interval in seconds"
        })), _react.default.createElement(_semanticUiReact.Form.Group, null, _react.default.createElement("label", null, "Hide Tag Cloud Feedback?"), _react.default.createElement(_semanticUiReact.Form.Radio, {
          label: "No",
          name: "hideFeedback",
          value: "0",
          checked: !this.state.hideFeedback,
          onChange: this.handleFeedbackCheckBox.bind(this)
        }), _react.default.createElement(_semanticUiReact.Form.Radio, {
          label: "Yes, it helps for scalability",
          name: "hideFeedback",
          value: "1",
          checked: this.state.hideFeedback,
          onChange: this.handleFeedbackCheckBox.bind(this)
        }))) : null, _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }), _react.default.createElement("div", {
          className: "ui big blue button",
          onClick: this.handleAnnotateDataset.bind(this)
        }, "Annotate Dataset"), _react.default.createElement(_semanticUiReact.Divider, {
          hidden: true
        }));
      }

      var progressDIV = '';

      if (this.state.annotationMode) {
        var remainingTime = 0;

        if (this.props.DatasetAnnotationStore.stats.prevAnnotated && this.props.DatasetAnnotationStore.stats.annotated && this.props.DatasetAnnotationStore.stats.total) {
          remainingTime = Math.floor(this.state.feedbackInterval * (this.props.DatasetAnnotationStore.stats.total - this.props.DatasetAnnotationStore.stats.annotated) / (this.props.DatasetAnnotationStore.stats.annotated - this.props.DatasetAnnotationStore.stats.prevAnnotated));
        }

        var remainingTimeDIV = '';

        if (remainingTime) {
          if (remainingTime >= 60) {
            if (remainingTime >= 3600) {
              remainingTimeDIV = _react.default.createElement("span", null, "Estimated Remaining Time: ~", ' ', _react.default.createElement("b", null, Math.round(remainingTime / 3600 * 100) / 100), ' ', "hour(s)");
            } else {
              remainingTimeDIV = _react.default.createElement("span", null, "Estimated Remaining Time: ~", ' ', _react.default.createElement("b", null, Math.round(remainingTime / 60 * 100) / 100), ' ', "minute(s)");
            }
          } else {
            remainingTimeDIV = _react.default.createElement("span", null, "Estimated Remaining Time: ~ ", _react.default.createElement("b", null, remainingTime), ' ', "second(s)");
          }
        }

        formDIV = '';
        progressDIV = _react.default.createElement("div", null, _react.default.createElement("div", {
          className: "ui list"
        }, _react.default.createElement("div", {
          className: "item"
        }, "Dataset:", ' ', _react.default.createElement("b", null, _react.default.createElement("a", {
          href: '/dataset/1/' + encodeURIComponent(this.state.datasetURI),
          target: "_blank"
        }, this.findDatasetLabel(this.state.datasetURI))), ' ', !this.state.storingDataset ? '' : _react.default.createElement("span", null, ' ', "->", ' ', _react.default.createElement("b", null, _react.default.createElement("a", {
          href: '/browse/' + encodeURIComponent(this.state.storingDataset),
          target: "_blank"
        }, "[Annotated]", ' ', this.findDatasetLabel(this.state.datasetURI)))), ' '), !this.state.resourceType ? '' : _react.default.createElement("div", {
          className: "item"
        }, "Resource Type: ", _react.default.createElement("b", null, this.state.resourceType)), _react.default.createElement("div", {
          className: "item"
        }, "Property used: ", _react.default.createElement("b", null, this.state.propertyURI))), this.props.DatasetAnnotationStore.stats.annotated && this.props.DatasetAnnotationStore.stats.annotated === this.props.DatasetAnnotationStore.stats.total ? _react.default.createElement(_semanticUiReact.Progress, {
          percent: 100,
          progress: true,
          success: true
        }, "Enriched", ' ', this.props.DatasetAnnotationStore.stats.annotated, ' ', "out of", ' ', this.props.DatasetAnnotationStore.stats.total, ' ', "items") : _react.default.createElement("div", null, _react.default.createElement(_semanticUiReact.Progress, {
          percent: this.props.DatasetAnnotationStore.stats.annotated ? Math.floor(this.props.DatasetAnnotationStore.stats.annotated / this.props.DatasetAnnotationStore.stats.total * 100) : 0,
          progress: true,
          active: true,
          color: "blue"
        }, "Enriched", ' ', this.props.DatasetAnnotationStore.stats.annotated, ' ', "out of", ' ', this.props.DatasetAnnotationStore.stats.total, ' ', "items", ' ', _react.default.createElement("a", {
          className: "ui button mini circular",
          onClick: this.handleAnnotateDataset.bind(this)
        }, _react.default.createElement("i", {
          className: "ui icon blue refresh"
        }), ' ', "refresh")), this.state.hideFeedback ? _react.default.createElement("div", {
          className: "ui equal width center aligned padded grid"
        }, _react.default.createElement("div", {
          className: "row"
        }, _react.default.createElement("div", {
          className: "column"
        }, remainingTimeDIV))) : _react.default.createElement("div", {
          className: "ui raised stacked segments"
        }, _react.default.createElement("div", {
          className: "ui secondary compact segment"
        }, _react.default.createElement("a", {
          href: '/dataset/' + encodeURIComponent(this.state.datasetURI) + '/resource/' + encodeURIComponent(this.props.DatasetAnnotationStore.currentID),
          target: "_blank"
        }, this.props.DatasetAnnotationStore.currentID)), _react.default.createElement("div", {
          className: "ui compact segment"
        }, _react.default.createElement("div", {
          dangerouslySetInnerHTML: {
            __html: this.props.DatasetAnnotationStore.annotatedText
          }
        })))), this.state.hideFeedback ? null : _react.default.createElement("div", {
          className: "ui segment"
        }, _react.default.createElement("div", {
          ref: "tagCloud",
          className: "tagCloud",
          style: {
            minHeight: 300,
            minWidth: 300
          }
        }), tagsDIV));
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "datasets"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement("h2", null, "Annotate dataset"), errorDIV, formDIV, progressDIV)));
    }
  }]);

  return DatasetAnnotation;
}(_react.default.Component);

DatasetAnnotation.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
DatasetAnnotation = (0, _fluxibleAddonsReact.connectToStores)(DatasetAnnotation, [_DatasetsStore.default, _DatasetAnnotationStore.default], function (context, props) {
  return {
    DatasetsStore: context.getStore(_DatasetsStore.default).getState(),
    DatasetAnnotationStore: context.getStore(_DatasetAnnotationStore.default).getState()
  };
});
var _default = DatasetAnnotation;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1455:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = annotateDataset;

var _general = __webpack_require__(59);

var _async = _interopRequireDefault(__webpack_require__(342));

var _getDatasetResourcePropValues = _interopRequireDefault(__webpack_require__(1456));

var _countAnnotatedResourcesWithProp = _interopRequireDefault(__webpack_require__(706));

var _countTotalResourcesWithProp = _interopRequireDefault(__webpack_require__(1457));

var _annotateText = _interopRequireDefault(__webpack_require__(1458));

var _createResourceAnnotation = _interopRequireDefault(__webpack_require__(1459));

var _createNewReactorConfig = _interopRequireDefault(__webpack_require__(358));

var _createASampleFacetsConfig = _interopRequireDefault(__webpack_require__(487));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//let startTime, elapsedTime;
var processData = function processData(page, maxPerPage, totalPages, payload, done) {
  //console.log('processing', page, maxPerPage, totalPages, payload);
  context.executeAction(_getDatasetResourcePropValues.default, {
    id: payload.id,
    resourceType: payload.resourceType,
    propertyURI: payload.propertyURI,
    maxOnPage: maxPerPage,
    page: page,
    inNewDataset: payload.storingDataset ? payload.storingDataset : 0
  }, function (err2, res2) {
    //console.log('getDatasetResourcePropValues', page, res2);
    asyncAnnotationTasks[page] = [];
    asyncEnrichmentTasks[page] = [];

    if (res2 && res2.resources && res2.resources.length) {
      res2.resources.forEach(function (resource) {
        asyncAnnotationTasks[page].push(function (acallback) {
          //annotation progress
          progressCounter++; //startTime = Date.now();

          context.executeAction(_annotateText.default, {
            query: resource.ov,
            id: resource.r,
            confidence: payload.confidence,
            language: payload.language,
            api: payload.api,
            stopWords: payload.stopWords,
            hideFeedback: payload.hideFeedback
          }, function (err3, res3) {
            //elapsedTime = Date.now() - startTime;
            //console.log('got annotation for '+ res3.id+' in ' + elapsedTime);
            //console.log('annotateText', resource.ov, res3);
            //create a queue for enrichment
            asyncEnrichmentTasks[page].push(function (ecallback) {
              if (res3 && res3.id && !res3.error) {
                //startTime = Date.now();
                context.executeAction(_createResourceAnnotation.default, {
                  //it can store annotations in a different dataset if set
                  dataset: payload.storingDataset ? payload.storingDataset : res2.datasetURI,
                  resource: res3.id,
                  property: res2.propertyURI,
                  api: payload.api,
                  annotations: res3.tags,
                  inNewDataset: payload.storingDataset ? payload.storingDataset : 0
                }, function (err4, res4) {
                  //elapsedTime = Date.now() - startTime;
                  //console.log('wrote annotation for '+ res3.id+' in ' + elapsedTime);
                  //console.log('createResourceAnnotation', res4, resource.ov, progressCounter+1);
                  ecallback(null, null);
                });
              } else {
                ecallback(null, null);
              }
            });
            acallback(null, resource.r); //callback
          });
        });
      });
    }

    if (asyncAnnotationTasks[page].length) {
      //run tasks async: todo: increase parallel requests to dbpedia sptlight?
      //async.series(asyncAnnotationTasks [page], (err5, res5)=>{
      _async.default.parallel(asyncAnnotationTasks[page], function (err5, res5) {
        //console.log(asyncEnrichmentTasks);
        _async.default.series(asyncEnrichmentTasks[page], function (err6, res6) {
          //async.parallel(asyncEnrichmentTasks [page], (err6, res6)=>{
          //console.log('parallel' + page, progressCounter, totalToBeAnnotated);
          if (progressCounter === totalToBeAnnotated) {
            //end of annotation for this loop
            done();
          } //console.log('next loop?', page , totalPages);


          if (page < totalPages) {
            processData(page + 1, maxPerPage, totalPages, payload, done);
          }
        });
      });
    } else {
      if (progressCounter === totalToBeAnnotated) {
        //end of annotation for this loop
        done();
      } //console.log('next loop?', page , totalPages);


      if (page < totalPages) {
        processData(page + 1, maxPerPage, totalPages, payload, done);
      }
    }
  });
};

var totalPages = 0;
var asyncAnnotationTasks = {};
var asyncEnrichmentTasks = {};
var totalToBeAnnotated = 0;
var progressCounter = 0;
var maxPerPage = 10;

function annotateDataset(context, payload, done) {
  if (payload.maxPerPage) {
    maxPerPage = payload.maxPerPage;
  }

  if (payload.batchSize) {
    maxPerPage = payload.batchSize;
  } //get the number of annotated/all resource


  context.executeAction(_countTotalResourcesWithProp.default, payload, function (err0, res0) {
    context.executeAction(_countAnnotatedResourcesWithProp.default, {
      id: payload.storingDataset ? payload.storingDataset : payload.id,
      resourceType: payload.resourceType,
      propertyURI: payload.propertyURI,
      inNewDataset: payload.storingDataset ? payload.storingDataset : 0
    }, function (err1, res1) {
      if (payload.storingDataset && !parseInt(payload.noDynamicConfig)) {
        //create a new reactor config if set
        context.executeAction(_createNewReactorConfig.default, {
          dataset: payload.storingDataset,
          scope: 'D',
          options: {
            resourceFocusType: 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#AnnotatedResource',
            datasetLabel: '[Annotated] ' + payload.datasetLabel
          }
        }, function (err11, res11) {}); //create a new facets config if set

        context.executeAction(_createASampleFacetsConfig.default, {
          dataset: payload.storingDataset,
          options: {
            annotationFacets: 1,
            datasetLabel: '[Annotated] ' + payload.datasetLabel
          }
        }, function (err12, res12) {});
      }

      totalToBeAnnotated = parseInt(res0 && res0.total ? res0.total : 0) - parseInt(res1 && res1.annotated ? res1.annotated : 0);
      totalPages = Math.ceil(totalToBeAnnotated / maxPerPage); //console.log(res1.annotated, res0.total, totalPages);
      //stop if all are annotated

      if (!totalPages) {
        done();
        return 0;
      }

      progressCounter = 0;
      processData(1, maxPerPage, totalPages, payload, done);
    });
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1456:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getDatasetResourcePropValues;

function getDatasetResourcePropValues(context, payload, done) {
  context.service.read('dataset.resourceProp', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_DATASET_RPV__FAILURE', err);
    } else {
      context.dispatch('UPDATE_DATASET_RPV_SUCCESS', res);
    }

    done(null, res);
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1457:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = countTotalResourcesWithProp;

function countTotalResourcesWithProp(context, payload, done) {
  context.service.read('dataset.countTotalResourcesWithProp', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_ANNOTATION_STAT_TOTAL__FAILURE', err);
    } else {
      context.dispatch('UPDATE_ANNOTATION_STAT_TOTAL', res);
    }

    done(null, res);
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1458:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = annotateText;

function annotateText(context, payload, done) {
  if (payload.api === 'custom') {
    context.service.read('custom.ner', payload, {
      timeout: 20 * 1000
    }, function (err, res) {
      if (err) {
        var error_res = {
          tags: [],
          id: payload.id,
          msg: err
        };
        context.dispatch('UPDATE_TEXT_ANNOTATION__FAILURE', error_res);
      } else {
        //hide feedback for scalability
        if (payload.hideFeedback) {//context.dispatch('UPDATE_ANNOTATION_TAGS', res);
        } else {
          context.dispatch('UPDATE_ANNOTATION_TAGS', res);
        }
      }

      done(null, res);
    });
  } else {
    context.service.read('dbpedia.spotlight', payload, {
      timeout: 20 * 1000
    }, function (err, res) {
      if (err) {
        var error_res = {
          tags: [],
          id: payload.id,
          msg: err
        };
        context.dispatch('UPDATE_TEXT_ANNOTATION__FAILURE', error_res);
      } else {
        //hide feedback for scalability
        if (payload.hideFeedback) {//context.dispatch('UPDATE_ANNOTATION_TAGS', res);
        } else {
          context.dispatch('UPDATE_ANNOTATION_TAGS', res);
        }
      }

      done(null, res);
    });
  }
}

module.exports = exports.default;

/***/ }),

/***/ 1459:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createResourceAnnotation;

function createResourceAnnotation(context, payload, done) {
  context.service.create('resource.annotate', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('CREATE_RESOURCE_ANNOTATION_FAILURE', err);
      done(err, res);
    } else {
      context.dispatch('CREATE_RESOURCE_ANNOTATION_SUCCESS', res);
      done(null, res);
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1460:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _fluxibleAddonsReact = __webpack_require__(79);

var _QueryImportStore = _interopRequireDefault(__webpack_require__(707));

var _fluxibleRouter = __webpack_require__(34);

var _general = __webpack_require__(59);

var _accessManagement = __webpack_require__(489);

var _semanticUiReact = __webpack_require__(69);

var _YASQEViewer = _interopRequireDefault(__webpack_require__(295));

var _WaitAMoment = _interopRequireDefault(__webpack_require__(490));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

;

var WYSIWYQ = /*#__PURE__*/function (_React$Component) {
  _inherits(WYSIWYQ, _React$Component);

  function WYSIWYQ(props) {
    var _this;

    _classCallCheck(this, WYSIWYQ);

    _this = _possibleConstructorReturn(this, (WYSIWYQ.__proto__ || Object.getPrototypeOf(WYSIWYQ)).call(this, props));
    _this.state = {
      stateURI: '',
      isGenerating: 0
    };
    return _this;
  }

  _createClass(WYSIWYQ, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {}
  }, {
    key: "handleWYSIWYQ",
    value: function handleWYSIWYQ() {
      var id = this.state.stateURI;
      var page = this.props.QueryImportStore.queries[id].page;
      var selection = this.props.QueryImportStore.queries[id].selection[0];
      var dataset = this.props.QueryImportStore.queries[id].dataset[0];
      this.setState({
        isGenerating: 1
      });

      if (selection === 'undefined') {
        this.context.executeAction(_fluxibleRouter.navigateAction, {
          url: '/dataset/' + page + '/' + encodeURIComponent(dataset)
        });
      } else {
        window.location = '/browse/' + encodeURIComponent(dataset) + '/' + encodeURIComponent(id);
        /* the following code doesn't run the preparation action before component mount
        this.context.executeAction(navigateAction, {
            url: '/browse/'+encodeURIComponent(dataset)+'/'+encodeURIComponent(id)
        });
        */
      }
    }
  }, {
    key: "compare",
    value: function compare(a, b) {
      var aD = new Date(a.createdOn[0]);
      var bD = new Date(b.createdOn[0]);

      if (aD > bD) {
        return -1;
      }

      if (aD < bD) {
        return 1;
      } // names must be equal


      return 0;
    }
  }, {
    key: "handleChange",
    value: function handleChange(e, _ref) {
      var value = _ref.value;
      this.setState({
        stateURI: value
      });
    }
  }, {
    key: "render",
    value: function render() {
      var dss = []; //convert object to array

      for (var prop in this.props.QueryImportStore.queries) {
        this.props.QueryImportStore.queries[prop].id = prop;
        dss.push(this.props.QueryImportStore.queries[prop]);
      }

      var optionsList;
      user = this.context.getUser(); //only admin can change the random new dataset!

      if (!_general.enableAuthentication || parseInt(user.isSuperUser)) {
        allowChangingNewDataset = true;
      }

      var tmpOption = '';
      var self = this,
          errorDIV = '',
          formDIV = '';
      var user;
      var allowChangingNewDataset = false;
      dss.sort(this.compare);
      var dss_options = [];
      dss.forEach(function (option, index) {
        dss_options.push({
          key: index,
          value: option.id,
          text: '[' + option.createdOn[0].split('.')[0].replace('T', ' ') + '] ' + option.label[0]
        });
      });
      var queryDIV = '';

      if (this.state.stateURI) {
        queryDIV = _react.default.createElement("div", {
          className: "ui tertiary segment"
        }, _react.default.createElement(_YASQEViewer.default, {
          spec: {
            value: decodeURIComponent(this.props.QueryImportStore.queries[this.state.stateURI].resourceQuery)
          }
        }));
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "WYSIWYQ"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, this.state.isGenerating ? _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement(_WaitAMoment.default, {
        msg: "Wait a moment until the browsing environment is generated..."
      }), _react.default.createElement("div", {
        className: "ui info message"
      }, _react.default.createElement("b", null, "Query:"), " ", this.props.QueryImportStore.queries[this.state.stateURI].label), queryDIV) : _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement("h2", null, "Import an Existing Query"), dss.length ? _react.default.createElement(_semanticUiReact.Form, {
        size: "big"
      }, _react.default.createElement(_semanticUiReact.Dropdown, {
        onChange: this.handleChange.bind(this),
        placeholder: "Select a Query",
        fluid: true,
        search: true,
        selection: true,
        options: dss_options
      }), queryDIV, _react.default.createElement(_semanticUiReact.Divider, {
        hidden: true
      }), this.state.stateURI ? _react.default.createElement("div", {
        className: "ui big blue button",
        onClick: this.handleWYSIWYQ.bind(this)
      }, "Turn Query to UI") : null, _react.default.createElement(_semanticUiReact.Divider, {
        hidden: true
      })) : _react.default.createElement("div", {
        className: "ui warning message"
      }, "No query was found!"))));
    }
  }]);

  return WYSIWYQ;
}(_react.default.Component);

WYSIWYQ.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
WYSIWYQ = (0, _fluxibleAddonsReact.connectToStores)(WYSIWYQ, [_QueryImportStore.default], function (context, props) {
  return {
    QueryImportStore: context.getStore(_QueryImportStore.default).getState()
  };
});
var _default = WYSIWYQ;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1463:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Timer = /*#__PURE__*/function (_React$Component) {
  _inherits(Timer, _React$Component);

  function Timer(props) {
    var _this;

    _classCallCheck(this, Timer);

    _this = _possibleConstructorReturn(this, (Timer.__proto__ || Object.getPrototypeOf(Timer)).call(this, props));
    _this.state = {
      counter: 0,
      timer: null
    };
    return _this;
  }

  _createClass(Timer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var self = this;
      var timer = setInterval(function () {
        self.tick();
      }, 1000);
      this.setState({
        timer: timer
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearInterval(this.state.timer);
    }
  }, {
    key: "tick",
    value: function tick() {
      this.setState({
        counter: this.state.counter + 1
      });
    }
  }, {
    key: "render",
    value: function render() {
      var msg = 'Wait a moment until the new environment is generated...';

      if (this.props.msg) {
        msg = this.props.msg;
      }

      return _react.default.createElement("div", {
        className: "ui mini statistic"
      }, _react.default.createElement("div", {
        className: "value"
      }, this.state.counter), _react.default.createElement("div", {
        className: "label"
      }, "Loading", '...'.substr(0, this.state.counter % 3 + 1)));
    }
  }]);

  return Timer;
}(_react.default.Component);

var _default = Timer;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1464:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _Facet = _interopRequireDefault(__webpack_require__(1465));

var _fluxibleRouter = __webpack_require__(34);

var _FacetedBrowserStore = _interopRequireDefault(__webpack_require__(887));

var _fluxibleAddonsReact = __webpack_require__(79);

var _createASampleFacetsConfig = _interopRequireDefault(__webpack_require__(487));

var _createResource = _interopRequireDefault(__webpack_require__(888));

var _loadFacets = _interopRequireDefault(__webpack_require__(462));

var _getEnvState = _interopRequireDefault(__webpack_require__(645));

var _DatasetFB = _interopRequireDefault(__webpack_require__(1682));

var _WaitAMoment = _interopRequireDefault(__webpack_require__(490));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var FacetedBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(FacetedBrowser, _React$Component);

  function FacetedBrowser(props) {
    var _this;

    _classCallCheck(this, FacetedBrowser);

    _this = _possibleConstructorReturn(this, (FacetedBrowser.__proto__ || Object.getPrototypeOf(FacetedBrowser)).call(this, props));
    _this.state = {
      selection: {},
      expandedFacet: 0,
      showAllResources: 0,
      expandedResources: 0,
      hideFirstCol: false,
      invert: {},
      range: {},
      datasetConfig: {},
      analysisProps: {},
      pivotConstraint: '',
      envState: _this.props.FacetedBrowserStore.envState,
      importedEnvState: _this.props.FacetedBrowserStore.importedEnvState
    };
    return _this;
  }

  _createClass(FacetedBrowser, [{
    key: "handleCreateResource",
    value: function handleCreateResource(datasetURI, templateResource, openInNewWindows) {
      this.context.executeAction(_createResource.default, {
        dataset: datasetURI,
        templateResource: templateResource,
        openInNewWindows: openInNewWindows
      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      //check if it is loaded from an address
      //then: set the state and generate the UI
      if (this.state.importedEnvState) {
        //regenerate the UI from a given state
        if (this.state.envState.length) {
          this.selectFacetsAndLoadEmptyFacets(this.state.envState[0]);
        }
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {}
  }, {
    key: "handlePivotChange",
    value: function handlePivotChange(queryConstraints, config) {
      var _this2 = this;

      var datasetURI = config.pivotDataset[0]; //save the previous state for the back button
      //get the total resources of selections form facets
      //do not get all facet items for performace reasons, only the selected ones

      var _loop = function _loop(prop) {
        _this2.state.selection[prop].forEach(function (s) {
          _this2.props.FacetedBrowserStore.facets[prop].forEach(function (facet) {
            if (facet.value === s.value) {
              s.total = facet.total;
            }
          });
        });
      };

      for (var prop in this.state.selection) {
        _loop(prop);
      }

      this.state.envState.push({
        isPivotChange: 1,
        selection: this.state.selection,
        pivotConstraint: this.state.pivotConstraint,
        id: this.props.FacetedBrowserStore.datasetURI,
        invert: this.state.invert,
        range: this.state.range,
        analysisProps: this.state.analysisProps,
        page: 1
      }); //reset the state

      this.setState({
        selection: {},
        expandedFacet: 0,
        showAllResources: 0,
        expandedResources: 0,
        hideFirstCol: false,
        invert: {},
        range: {},
        analysisProps: {},
        pivotConstraint: queryConstraints
      });
      this.context.executeAction(_loadFacets.default, {
        mode: 'init',
        id: datasetURI,
        page: 1,
        selection: {},
        pivotConstraint: queryConstraints
      });
    }
  }, {
    key: "selectFacetsAndLoadEmptyFacets",
    value: function selectFacetsAndLoadEmptyFacets(env) {
      var selection = {};
      var self = this;
      var zeroLengthSelection = [];

      for (var prop in env.selection) {
        if (env.selection[prop].length) {
          selection[prop] = env.selection[prop];
        } else {
          zeroLengthSelection.push(prop);
        }
      }

      var showAllResource = 0;

      if (env.searchTerm && env.searchTerm === 'ldr_showAll') {
        showAllResource = 1;
      }

      this.setState({
        selection: env.selection,
        expandedFacet: 0,
        showAllResources: showAllResource,
        expandedResources: 0,
        hideFirstCol: false,
        invert: env.invert,
        range: env.range,
        datasetConfig: env.datasetConfig,
        analysisProps: env.analysisProps,
        pivotConstraint: env.pivotConstraint
      }); //full load facets with no slected values

      zeroLengthSelection.forEach(function (el) {
        self.context.executeAction(_loadFacets.default, {
          mode: 'sideEffect',
          id: env.id,
          page: env.page,
          selection: {
            status: 0,
            propertyURI: el,
            prevSelection: selection,
            options: {
              invert: env.invert,
              range: env.range,
              analysisProps: env.analysisProps,
              facetConfigs: env.facetConfigs
            }
          }
        });
      });
      return selection;
    }
  }, {
    key: "loadPivotDataset",
    value: function loadPivotDataset(env) {
      var selection = this.selectFacetsAndLoadEmptyFacets(env);
      this.context.executeAction(_loadFacets.default, {
        mode: 'init',
        isPivotChange: env.isPivotChange,
        stateURI: env.stateURI,
        id: env.id,
        searchTerm: env.searchTerm,
        page: env.page,
        pivotConstraint: env.pivotConstraint,
        selection: {
          prevSelection: selection,
          options: {
            invert: env.invert,
            range: env.range,
            analysisProps: env.analysisProps,
            facetConfigs: {}
          }
        }
      });
    }
  }, {
    key: "handleBackToPrevPivotState",
    value: function handleBackToPrevPivotState() {
      //find the env
      var env = this.state.envState[this.state.envState.length - 1];
      this.state.envState.splice(-1, 1);
      this.loadPivotDataset(env);
    }
  }, {
    key: "closeEnvDesc",
    value: function closeEnvDesc() {
      this.setState({
        envState: []
      });
    }
  }, {
    key: "toggleFirstCol",
    value: function toggleFirstCol() {
      this.setState({
        hideFirstCol: !this.state.hideFirstCol
      });
    }
  }, {
    key: "toggleShowAllResources",
    value: function toggleShowAllResources() {
      this.setState({
        showAllResources: !this.state.showAllResources
      });
    }
  }, {
    key: "toggleResourceCol",
    value: function toggleResourceCol() {
      this.setState({
        hideFirstCol: !this.state.hideFirstCol,
        expandedResources: !this.state.expandedResources
      });
    }
  }, {
    key: "toggleExpandFacet",
    value: function toggleExpandFacet(propertyURI) {
      this.toggleFirstCol();

      if (this.state.expandedFacet) {
        this.setState({
          expandedFacet: 0
        });
      } else {
        this.setState({
          expandedFacet: propertyURI
        });
      }
    }
  }, {
    key: "gotoPage",
    value: function gotoPage(page) {
      var facetConfigs = this.getNecessaryFaccetsConfig();
      this.context.executeAction(_loadFacets.default, {
        mode: 'second',
        id: this.props.FacetedBrowserStore.datasetURI,
        page: page,
        pivotConstraint: this.state.pivotConstraint,
        selection: {
          prevSelection: this.state.selection,
          options: {
            invert: this.state.invert,
            range: this.state.range,
            facetConfigs: facetConfigs,
            analysisProps: this.state.analysisProps
          }
        }
      });
    }
  }, {
    key: "createFConfig",
    value: function createFConfig(datasetURI) {
      this.context.executeAction(_createASampleFacetsConfig.default, {
        dataset: datasetURI,
        redirect: 1
      });
    }
  }, {
    key: "addCommas",
    value: function addCommas(n) {
      var rx = /(\d+)(\d{3})/;
      return String(n).replace(/^\d+/, function (w) {
        while (rx.test(w)) {
          w = w.replace(rx, '$1,$2');
        }

        return w;
      });
    }
  }, {
    key: "compareProps",
    value: function compareProps(a, b) {
      if (Number(a.position) < Number(b.position)) return -1;
      if (Number(a.position) > Number(b.position)) return 1; //sort by alphabet

      if (a.label < b.label) {
        return -1;
      }

      if (a.label > b.label) {
        return 1;
      }

      return 0;
    }
  }, {
    key: "getPropertyConfig",
    value: function getPropertyConfig(datasetURI, propertyURI) {
      var cnf = this.props.FacetedBrowserStore.config;
      return cnf.config[propertyURI];
    } //here we can determine the configs which should be considered in the query

  }, {
    key: "getNecessaryFaccetsConfig",
    value: function getNecessaryFaccetsConfig() {
      var facetConfigs = {};
      var cnf = JSON.parse(JSON.stringify(this.props.FacetedBrowserStore.config));

      if (!cnf.config || !Object.keys(cnf.config).length) {
        return facetConfigs;
      } else {
        cnf = cnf.config;
      }

      for (var prop in cnf) {
        if (cnf[prop].objectIViewer && cnf[prop].objectIViewer.length) {
          facetConfigs[prop] = cnf[prop];
        }

        if (cnf[prop].dataType && cnf[prop].dataType.length) {
          if (!facetConfigs[prop]) {
            facetConfigs[prop] = {
              dataType: cnf[prop].dataType[0]
            };
          }
        }

        if (cnf[prop].language && cnf[prop].language.length) {
          if (!facetConfigs[prop]) {
            facetConfigs[prop] = {
              language: cnf[prop].language[0]
            };
          }
        }

        if (cnf[prop].restrictAnalysisToSelected) {
          if (!facetConfigs[prop]) {
            facetConfigs[prop] = {
              restrictAnalysisToSelected: cnf[prop].restrictAnalysisToSelected
            };
          } else {
            facetConfigs[prop].restrictAnalysisToSelected = cnf[prop].restrictAnalysisToSelected;
          }
        }

        if (cnf[prop].pivotDataset) {
          if (!facetConfigs[prop]) {
            facetConfigs[prop] = {
              pivotDataset: cnf[prop].pivotDataset
            };
          } else {
            facetConfigs[prop].pivotDataset = cnf[prop].pivotDataset;
          }
        }
      }

      return facetConfigs;
    }
  }, {
    key: "buildMasterFacet",
    value: function buildMasterFacet(datasetURI) {
      var self = this;
      var properties = [];
      var cnf = this.props.FacetedBrowserStore.config;
      var propConfig;

      if (cnf.list) {
        cnf.list.forEach(function (el) {
          propConfig = self.getPropertyConfig(datasetURI, el);

          if (propConfig) {
            if (!propConfig.isHidden) {
              properties.push({
                label: propConfig ? propConfig.label ? propConfig.label : self.getPropertyLabel(el) : self.getPropertyLabel(el),
                value: el,
                valueType: 'uri',
                position: propConfig && propConfig.position ? propConfig.position : 0,
                category: propConfig && propConfig.category ? propConfig.category : propConfig && propConfig.pivotDataset ? ['Linked Entities'] : ''
              });
            }
          } else {
            properties.push({
              label: propConfig ? propConfig.label ? propConfig.label : self.getPropertyLabel(el) : self.getPropertyLabel(el),
              value: el,
              valueType: 'uri',
              position: propConfig && propConfig.position ? propConfig.position : 0,
              category: propConfig && propConfig.category ? propConfig.category : propConfig && propConfig.pivotDataset ? ['Linked Entities'] : ''
            });
          }
        }); //apply ordering if in config

        properties.sort(self.compareProps);
      }

      return properties;
    }
  }, {
    key: "findIndexInSelection",
    value: function findIndexInSelection(arr, value) {
      var i = -1;
      arr.forEach(function (el, index) {
        if (el.value === value) {
          i = index;
        }
      });
      return i;
    }
  }, {
    key: "handleShowMoreFacet",
    value: function handleShowMoreFacet(propertyURI, fpage) {
      this.exitFromImportMode();
      this.context.executeAction(_loadFacets.default, {
        mode: 'masterMore',
        id: this.props.FacetedBrowserStore.datasetURI,
        page: this.props.FacetedBrowserStore.page,
        pivotConstraint: this.state.pivotConstraint,
        selection: {
          propertyURI: propertyURI,
          value: propertyURI,
          status: 1,
          prevSelection: this.state.selection,
          options: {
            invert: this.state.invert,
            range: this.state.range
          }
        },
        fpage: fpage
      });
    }
  }, {
    key: "handleAnalysisProps",
    value: function handleAnalysisProps(propertyURI) {
      this.exitFromImportMode(); //revert showAll on facet interactions

      this.state.showAllResources = 0;
      var self = this;
      var facetConfigs = self.getNecessaryFaccetsConfig();

      if (!this.state.analysisProps[propertyURI]) {
        this.state.analysisProps[propertyURI] = 1;
      } else {
        delete this.state.analysisProps[propertyURI];
      }

      this.context.executeAction(_loadFacets.default, {
        mode: 'second',
        id: this.props.FacetedBrowserStore.datasetURI,
        page: 1,
        pivotConstraint: this.state.pivotConstraint,
        selection: {
          prevSelection: this.state.selection,
          options: {
            invert: this.state.invert,
            range: this.state.range,
            facetConfigs: facetConfigs,
            analysisProps: this.state.analysisProps
          }
        }
      });
      /*
      //apply side effects
      let sideEffectsArr = [];
      for (let key in this.state.selection) {
          //apply on active but non-selected
          if(!this.state.selection[key].length){
              sideEffectsArr.push(key);
          }
      }
      sideEffectsArr.forEach(function(el){
          self.context.executeAction(loadFacets, {mode: 'sideEffect', id: self.props.FacetedBrowserStore.datasetURI, page: self.props.FacetedBrowserStore.page, selection: {status: 0, propertyURI: el, prevSelection: self.state.selection, options: {invert: self.state.invert, range: self.state.range, facetConfigs: facetConfigs}}});
      });
      */
    }
  }, {
    key: "handleToggleInvert",
    value: function handleToggleInvert(propertyURI) {
      this.exitFromImportMode(); //revert showAll on facet interactions

      this.state.showAllResources = 0; //todo: only if an item is selected inversion works

      var self = this;
      var facetConfigs = self.getNecessaryFaccetsConfig();

      if (!this.state.invert[propertyURI]) {
        this.state.invert[propertyURI] = 1;
      } else {
        delete this.state.invert[propertyURI];
      }

      this.context.executeAction(_loadFacets.default, {
        mode: 'second',
        id: this.props.FacetedBrowserStore.datasetURI,
        page: 1,
        pivotConstraint: this.state.pivotConstraint,
        selection: {
          prevSelection: this.state.selection,
          options: {
            invert: this.state.invert,
            range: this.state.range,
            facetConfigs: facetConfigs,
            analysisProps: this.state.analysisProps
          }
        }
      }); //apply side effects

      var sideEffectsArr = []; //allow refreshing the facet itself

      sideEffectsArr.push(propertyURI);

      for (var key in this.state.selection) {
        //apply on active but non-selected
        if (!this.state.selection[key].length) {
          sideEffectsArr.push(key);
        }
      }

      sideEffectsArr.forEach(function (el) {
        self.context.executeAction(_loadFacets.default, {
          mode: 'sideEffect',
          id: self.props.FacetedBrowserStore.datasetURI,
          page: self.props.FacetedBrowserStore.page,
          pivotConstraint: self.state.pivotConstraint,
          selection: {
            status: 0,
            propertyURI: el,
            prevSelection: self.state.selection,
            options: {
              invert: self.state.invert,
              range: self.state.range,
              facetConfigs: facetConfigs
            }
          }
        });
      });
    }
  }, {
    key: "handleToggleRange",
    value: function handleToggleRange(propertyURI, rangeObj) {
      this.exitFromImportMode(); //revert showAll on facet interactions

      this.state.showAllResources = 0;
      var self = this; //we can inject some config to the queries e.g. to force a certain data types

      var facetConfigs = self.getNecessaryFaccetsConfig();

      if (!this.state.range[propertyURI]) {
        this.state.range[propertyURI] = rangeObj; //sends a fake value to service which is ignored only to refresh the query

        this.state.selection[propertyURI] = [{
          value: 'ldr:range',
          valueType: 'literal',
          dataType: ''
        }];
      } else {
        delete this.state.range[propertyURI];
        this.state.selection[propertyURI] = [];
      }

      this.context.executeAction(_loadFacets.default, {
        mode: 'second',
        id: this.props.FacetedBrowserStore.datasetURI,
        page: 1,
        selection: {
          prevSelection: this.state.selection,
          options: {
            invert: this.state.invert,
            range: this.state.range,
            facetConfigs: facetConfigs,
            analysisProps: this.state.analysisProps
          }
        }
      }); //apply side effects

      var sideEffectsArr = []; //allow refreshing the facet itself

      sideEffectsArr.push(propertyURI);

      for (var key in this.state.selection) {
        //apply on active but non-selected
        if (!this.state.selection[key].length) {
          sideEffectsArr.push(key);
        }
      }

      sideEffectsArr.forEach(function (el) {
        self.context.executeAction(_loadFacets.default, {
          mode: 'sideEffect',
          id: self.props.FacetedBrowserStore.datasetURI,
          page: self.props.FacetedBrowserStore.page,
          pivotConstraint: self.state.pivotConstraint,
          selection: {
            status: 0,
            propertyURI: el,
            prevSelection: self.state.selection,
            options: {
              invert: self.state.invert,
              range: self.state.range,
              facetConfigs: facetConfigs
            }
          }
        });
      });
    }
  }, {
    key: "exitFromImportMode",
    value: function exitFromImportMode() {
      //exit form the imported query mode after first user interactions
      if (this.state.importedEnvState) {
        this.setState({
          envState: []
        });
      }
    }
  }, {
    key: "handleOnCheck",
    value: function handleOnCheck(level, valueType, dataType, status, value, propertyURI) {
      var _this3 = this;

      this.exitFromImportMode(); //revert showAll on facet interactions

      this.state.showAllResources = 0; // console.log(level, valueType, dataType, status, value, propertyURI);

      var self = this; //--add facet configs to queries

      var facetConfigs = self.getNecessaryFaccetsConfig(); //------------------

      var hadAnySelected = 0; //handling cascading facet update

      var sideEffectsArr = [];
      var atLeastOne = 0;

      if (level === 2) {
        //keep history of selection up to date
        if (status) {
          if (!this.state.selection[propertyURI]) {
            this.state.selection[propertyURI] = [];
          }

          if (Array.isArray(value)) {
            value.forEach(function (item) {
              self.state.selection[propertyURI].push({
                value: item,
                valueType: valueType,
                dataType: dataType
              });
            });
          } else {
            this.state.selection[propertyURI].push({
              value: value,
              valueType: valueType,
              dataType: dataType
            });
          }
        } else {
          if (Array.isArray(value)) {
            value.forEach(function (item) {
              _this3.state.selection[propertyURI].splice(_this3.findIndexInSelection(_this3.state.selection[propertyURI], item), 1);
            });
          } else {
            this.state.selection[propertyURI].splice(this.findIndexInSelection(this.state.selection[propertyURI], value), 1);
          }
        } //check if there are active facets to be updated as side effect


        sideEffectsArr = [];
        atLeastOne = 0;

        for (var key in this.state.selection) {
          //apply on active but non-selected
          //only if there are more than one facets available
          if (!this.state.selection[key].length && Object.keys(this.state.selection).length > 1) {
            sideEffectsArr.push(key);
          } else {
            atLeastOne = 1;
          }
        }

        this.context.executeAction(_loadFacets.default, {
          mode: 'second',
          id: this.props.FacetedBrowserStore.datasetURI,
          page: this.props.FacetedBrowserStore.page,
          pivotConstraint: this.state.pivotConstraint,
          selection: {
            propertyURI: propertyURI,
            value: value,
            status: status,
            prevSelection: this.state.selection,
            options: {
              invert: this.state.invert,
              range: this.state.range,
              facetConfigs: facetConfigs,
              analysisProps: this.state.analysisProps
            }
          }
        });
      } else {
        //for master level
        if (this.state.selection[value] && this.state.selection[value].length) {
          hadAnySelected = 1;
        } else {
          hadAnySelected = 0;
        }

        if (!status) {
          //empty the selection
          delete this.state.selection[value]; //empty invert

          delete this.state.invert[value]; //empty range

          delete this.state.range[value]; //empty analysis

          delete this.state.analysisProps[value];
        } else {
          //initiate facet
          this.state.selection[value] = [];
        }

        sideEffectsArr = [];
        atLeastOne = 0;

        for (var _key in this.state.selection) {
          //apply on active but non-selected
          if (!this.state.selection[_key].length) {
            sideEffectsArr.push(_key);
          } else {
            atLeastOne = 1;
          }
        } // there should be at least one second level facet selected for cascading effect


        if (!atLeastOne) {
          sideEffectsArr = [];
        } //should not run if there is a side effect -> prevents duplicate runs


        if (sideEffectsArr.indexOf(value) === -1) {
          this.context.executeAction(_loadFacets.default, {
            mode: 'master',
            id: this.props.FacetedBrowserStore.datasetURI,
            page: this.props.FacetedBrowserStore.page,
            pivotConstraint: this.state.pivotConstraint,
            selection: {
              propertyURI: propertyURI,
              value: value,
              status: status,
              prevSelection: this.state.selection,
              options: {
                invert: this.state.invert,
                range: this.state.range,
                facetConfigs: facetConfigs
              }
            }
          });
        } //on uncheck update list of resources


        if (!status && hadAnySelected) {
          this.context.executeAction(_loadFacets.default, {
            mode: 'second',
            id: this.props.FacetedBrowserStore.datasetURI,
            page: this.props.FacetedBrowserStore.page,
            pivotConstraint: this.state.pivotConstraint,
            selection: {
              propertyURI: value,
              value: value,
              status: status,
              prevSelection: this.state.selection,
              options: {
                invert: this.state.invert,
                range: this.state.range,
                facetConfigs: facetConfigs,
                analysisProps: this.state.analysisProps
              }
            }
          }); //add new type of side effect on uncheck

          for (var _key2 in this.state.selection) {
            sideEffectsArr.push(_key2);
          }
        }
      } // console.log(sideEffectsArr);
      //apply side effects


      sideEffectsArr.forEach(function (el) {
        self.context.executeAction(_loadFacets.default, {
          mode: 'sideEffect',
          id: self.props.FacetedBrowserStore.datasetURI,
          page: self.props.FacetedBrowserStore.page,
          pivotConstraint: self.state.pivotConstraint,
          selection: {
            status: status,
            propertyURI: el,
            prevSelection: self.state.selection,
            options: {
              invert: self.state.invert,
              range: self.state.range,
              facetConfigs: facetConfigs
            }
          }
        });
      });
    } //used to fix the key of component in dynamic cases

  }, {
    key: "findIndexInProperties",
    value: function findIndexInProperties(properties, value) {
      var i = 0;
      properties.forEach(function (el, index) {
        if (el.value === value) {
          i = index;
        }
      });
      return i;
    }
  }, {
    key: "extractNameFromPropertyURI",
    value: function extractNameFromPropertyURI(uri) {
      var property = uri;
      var tmp2 = uri.split('#');

      if (tmp2.length > 1) {
        property = tmp2[1];
      } else {
        tmp2 = uri.split('/');
        property = tmp2[tmp2.length - 1];
      } //make first letter capital case


      property = property.charAt(0).toUpperCase() + property.slice(1);
      return property;
    }
  }, {
    key: "getPropertyLabel",
    value: function getPropertyLabel(uri) {
      var property = '';
      var tmp = uri; //todo: handle multigraph labels

      var tmp001,
          tmp01 = tmp.split('->[');

      if (tmp01.length > 1) {
        tmp001 = tmp.split(']');
        tmp = tmp001[tmp001.length - 1];
      }

      var tmp02 = tmp.split('>>');

      if (tmp02.length > 1) {
        tmp001 = tmp.split(']');
        tmp = tmp001[tmp001.length - 1];
      }

      var tmp03 = tmp.split('->');

      if (tmp03.length > 1) {
        tmp = tmp03[tmp03.length - 1];
      } //---------


      var tmp2 = tmp.split('#');

      if (tmp2.length > 1) {
        property = tmp2[1];
      } else {
        tmp2 = tmp.split('/');
        property = tmp2[tmp2.length - 1];
        tmp2 = property.split(':');
        property = tmp2[tmp2.length - 1];
      } //make first letter capital case


      property = property.charAt(0).toUpperCase() + property.slice(1);
      return property;
    }
  }, {
    key: "getPropertyLabel",
    value: function getPropertyLabel(uri) {
      var property = '';
      var tmp = uri;
      var self = this; //handle the prop path case

      if (uri.indexOf('->') !== -1) {
        var tmp12 = uri.split('->');
        var tmp2 = [];
        tmp12.forEach(function (el) {
          tmp2.push(self.extractNameFromPropertyURI(el.trim()));
        });
        property = tmp2.join('/');
      } else {
        property = self.extractNameFromPropertyURI(uri);
      }

      return property;
    }
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.FacetedBrowserStore.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding",
          ref: "facetedBrowser"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.FacetedBrowserStore.error)))));
      } //continue


      var self = this;
      var showFactes = 0;
      var configDiv = '';
      var properties = this.buildMasterFacet(this.props.FacetedBrowserStore.datasetURI); //console.log(self.props.FacetedBrowserStore.facets);
      //if no default graph is selected, show all the graph names

      if (this.props.FacetedBrowserStore.datasetURI) {
        var list = properties.map(function (node, index) {
          //console.log(self.props.FacetedBrowserStore.facets);
          if (self.props.FacetedBrowserStore.facets[node.value] && self.props.FacetedBrowserStore.facets[node.value].length) {
            showFactes = 1; //console.log(self.findIndexInProperties(properties, node.value));

            if (self.state.expandedFacet) {
              if (self.state.expandedFacet === node.value) {
                return _react.default.createElement(_Facet.default, {
                  selection: self.state.selection,
                  invert: self.state.invert,
                  analysisProps: self.state.analysisProps,
                  range: self.state.range,
                  minHeight: 550,
                  maxHeight: 700,
                  onCheck: self.handleOnCheck.bind(self, 2, self.props.FacetedBrowserStore.facets[node.value][0].valueType, self.props.FacetedBrowserStore.facets[node.value][0].dataType),
                  onInvert: self.handleToggleInvert.bind(self, node.value),
                  onAnalyzeProp: self.handleAnalysisProps.bind(self, node.value),
                  onRange: self.handleToggleRange.bind(self, node.value),
                  onShowMore: self.handleShowMoreFacet.bind(self, node.value),
                  key: self.findIndexInProperties(properties, node.value),
                  spec: {
                    propertyURI: node.value,
                    property: self.getPropertyLabel(node.value),
                    instances: self.props.FacetedBrowserStore.facets[node.value],
                    total: self.props.FacetedBrowserStore.facetsCount[node.value],
                    query: self.props.FacetedBrowserStore.facetQuery[node.value],
                    queryConstraints: self.props.FacetedBrowserStore.facetQueryConstraints[node.value]
                  },
                  config: self.getPropertyConfig(self.props.FacetedBrowserStore.datasetURI, node.value),
                  datasetURI: self.props.FacetedBrowserStore.datasetURI,
                  toggleExpandFacet: self.toggleExpandFacet.bind(self),
                  onPivotChange: self.handlePivotChange.bind(self, self.props.FacetedBrowserStore.facetQueryConstraints[node.value], self.getPropertyConfig(self.props.FacetedBrowserStore.datasetURI, node.value))
                });
              }
            } else {
              return _react.default.createElement(_Facet.default, {
                selection: self.state.selection,
                invert: self.state.invert,
                analysisProps: self.state.analysisProps,
                range: self.state.range,
                onCheck: self.handleOnCheck.bind(self, 2, self.props.FacetedBrowserStore.facets[node.value][0].valueType, self.props.FacetedBrowserStore.facets[node.value][0].dataType),
                onInvert: self.handleToggleInvert.bind(self, node.value),
                onAnalyzeProp: self.handleAnalysisProps.bind(self, node.value),
                onRange: self.handleToggleRange.bind(self, node.value),
                onShowMore: self.handleShowMoreFacet.bind(self, node.value),
                key: self.findIndexInProperties(properties, node.value),
                spec: {
                  propertyURI: node.value,
                  property: self.getPropertyLabel(node.value),
                  instances: self.props.FacetedBrowserStore.facets[node.value],
                  total: self.props.FacetedBrowserStore.facetsCount[node.value],
                  query: self.props.FacetedBrowserStore.facetQuery[node.value],
                  queryConstraints: self.props.FacetedBrowserStore.facetQueryConstraints[node.value]
                },
                config: self.getPropertyConfig(self.props.FacetedBrowserStore.datasetURI, node.value),
                datasetURI: self.props.FacetedBrowserStore.datasetURI,
                toggleExpandFacet: self.toggleExpandFacet.bind(self),
                onPivotChange: self.handlePivotChange.bind(self, self.props.FacetedBrowserStore.facetQueryConstraints[node.value], self.getPropertyConfig(self.props.FacetedBrowserStore.datasetURI, node.value))
              });
            }
          } else {
            return undefined;
          }
        });
        var pagerSize = showFactes ? 4 : 10;
        var resSize = showFactes ? 'seven' : 'eleven';
        resSize = this.state.expandedResources ? 16 : resSize;
        var facetsDIV;

        if (this.state.hideFirstCol) {
          facetsDIV = showFactes ? _react.default.createElement("div", {
            className: "ui stackable nine wide column"
          }, list) : '';
        } else {
          facetsDIV = showFactes ? _react.default.createElement("div", {
            className: "ui stackable five wide column"
          }, list) : '';
        }

        if (this.state.expandedResources) {
          facetsDIV = '';
        }

        var storeObj = this.props.FacetedBrowserStore;
        var dcnf = storeObj.datasetConfig;
        var cnf = storeObj.config;
        var facetConfigs = this.getNecessaryFaccetsConfig();

        if (dcnf.allowInlineConfig) {
          configDiv = _react.default.createElement("a", {
            onClick: this.createFConfig.bind(this, storeObj.datasetURI),
            className: "ui icon mini black circular button"
          }, _react.default.createElement("i", {
            className: "ui settings icon"
          }), ' ');
        }

        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding",
          ref: "facetedBrowser"
        }, this.state.envState.length && this.state.envState[this.state.envState.length - 1].desc ? _react.default.createElement("div", {
          className: "ui info message"
        }, _react.default.createElement("i", {
          className: "close link icon",
          onClick: this.closeEnvDesc.bind(this)
        }), _react.default.createElement(_fluxibleRouter.NavLink, {
          className: "ui mini blue icon button",
          href: "/wysiwyq"
        }, _react.default.createElement("i", {
          className: "chevron circle left icon"
        }), ' ', "Back to Queries"), ' ', _react.default.createElement("b", null, "Query:"), ' ', this.state.envState[this.state.envState.length - 1].desc) : null, _react.default.createElement("div", {
          className: "ui vertically padded stackable grid"
        }, this.state.hideFirstCol ? '' : _react.default.createElement("div", {
          className: "ui stackable four wide column"
        }, _react.default.createElement(_Facet.default, {
          color: "teal",
          selection: this.state.selection,
          invert: self.state.invert,
          analysisProps: self.state.analysisProps,
          range: self.state.range,
          onCheck: this.handleOnCheck.bind(this, 1, 'uri', ''),
          key: "master",
          maxHeight: 700,
          minHeight: 300,
          spec: {
            property: '',
            propertyURI: '',
            instances: properties
          },
          config: {
            label: 'Selected Properties'
          },
          datasetURI: this.props.FacetedBrowserStore.datasetURI
        }), configDiv), facetsDIV, _react.default.createElement("div", {
          className: 'ui stackable ' + resSize + ' wide column'
        }, _react.default.createElement(_DatasetFB.default, {
          onCreateResource: this.handleCreateResource.bind(this),
          importedEnvState: this.state.importedEnvState,
          expanded: this.state.expandedResources,
          showAllResources: this.state.showAllResources,
          resourceQuery: this.props.FacetedBrowserStore.resourceQuery,
          config: dcnf,
          total: this.props.FacetedBrowserStore.total,
          pagerSize: pagerSize,
          currentPage: this.props.FacetedBrowserStore.page,
          resources: this.props.FacetedBrowserStore.resources,
          datasetURI: this.props.FacetedBrowserStore.datasetURI,
          searchMode: this.state.searchMode,
          resourcesLength: this.props.FacetedBrowserStore.resources.length,
          isBig: !showFactes,
          prevEnvState: this.state.envState.length ? this.state.envState[this.state.envState.length - 1] : '',
          pivotConstraint: this.state.pivotConstraint,
          selection: {
            prevSelection: this.state.selection,
            options: {
              invert: this.state.invert,
              range: this.state.range,
              facetConfigs: facetConfigs,
              analysisProps: this.state.analysisProps
            }
          },
          onExpandCollapse: this.toggleResourceCol.bind(this),
          onShowAllResources: this.toggleShowAllResources.bind(this),
          handleClick: this.gotoPage.bind(this),
          handleBackToPrevPivotState: this.handleBackToPrevPivotState.bind(this)
        }))));
      } else {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding",
          ref: "facetedBrowser"
        }, _react.default.createElement("div", {
          className: "ui vertically padded stackable grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, this.state.pivotConstraint ? _react.default.createElement(_WaitAMoment.default, null) : _react.default.createElement("div", {
          className: "ui segment"
        }, _react.default.createElement("h2", null, "List of available datasets to browse"), _react.default.createElement("div", {
          className: "ui big divided animated list"
        }, "No Dataset is selected to browse!")))));
      }
    }
  }]);

  return FacetedBrowser;
}(_react.default.Component);

FacetedBrowser.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
FacetedBrowser = (0, _fluxibleAddonsReact.connectToStores)(FacetedBrowser, [_FacetedBrowserStore.default], function (context, props) {
  return {
    FacetedBrowserStore: context.getStore(_FacetedBrowserStore.default).getState()
  };
});
var _default = FacetedBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1465:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _PropertyHeader = _interopRequireDefault(__webpack_require__(359));

var _ObjectBrowser = _interopRequireDefault(__webpack_require__(1466));

var _reactSearchInput = _interopRequireWildcard(__webpack_require__(518));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _YASQEViewer = _interopRequireDefault(__webpack_require__(295));

var _semanticUiReact = __webpack_require__(69);

var _json2csv = _interopRequireDefault(__webpack_require__(519));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * Shuffles array in place. ES6 version
 * @param {Array} a items The array containing the items.
 */
function shuffle(a) {
  for (var i = a.length; i; i--) {
    var j = Math.floor(Math.random() * i);
    var _ref = [a[j], a[i - 1]];
    a[i - 1] = _ref[0];
    a[j] = _ref[1];
  }
}

var Facet = /*#__PURE__*/function (_React$Component) {
  _inherits(Facet, _React$Component);

  function Facet(props) {
    var _this;

    _classCallCheck(this, Facet);

    _this = _possibleConstructorReturn(this, (Facet.__proto__ || Object.getPrototypeOf(Facet)).call(this, props));
    _this.filteredInstances = [];
    _this.state = {
      searchTerm: '',
      expanded: 0,
      verticalResized: 0,
      shuffled: 0,
      page: 0,
      rangeChanged: 0,
      trange: {
        min: '',
        max: ''
      },
      range: {
        min: '',
        max: ''
      },
      config: _this.props.config ? JSON.parse(JSON.stringify(_this.props.config)) : '',
      addedAsVar: _this.props.analysisProps[_this.props.spec.propertyURI] ? 1 : 0,
      rangeEnabled: _this.props.config && _this.props.config.allowRangeOfValues ? 1 : 0
    };
    return _this;
  }

  _createClass(Facet, [{
    key: "ComponentDidMount",
    value: function ComponentDidMount() {}
  }, {
    key: "handlePivotChange",
    value: function handlePivotChange() {
      //handle by parent
      this.props.onPivotChange();
    }
  }, {
    key: "handleExport",
    value: function handleExport() {
      var values = [];
      this.filteredInstances.forEach(function (instance) {
        values.push({
          item: instance.value,
          resourceNo: instance.total
        });
      });

      var csv = _json2csv.default.parse(values, {
        fields: ['item', 'resourceNo']
      }); //console.log(csv);


      var uriContent = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);
      window.open(uriContent, 'dataF.csv');
    }
  }, {
    key: "checkItem",
    value: function checkItem(status, value) {
      this.props.onCheck(status, value, this.props.spec.propertyURI);
    }
  }, {
    key: "checkGeoFeatures",
    value: function checkGeoFeatures() {
      var check,
          out = 0;

      if (this.props.spec.instances.length) {
        check = this.props.spec.instances[0].value;

        if (check.indexOf('POINT') !== -1 || check.indexOf('MULTIPOLYGON') !== -1 || check.indexOf('POLYGON') !== -1) {
          out = 1;
        }
      }

      return out;
    }
  }, {
    key: "handleShowMore",
    value: function handleShowMore() {
      //add next 500 rows if exist
      this.props.onShowMore(this.state.page + 1);
      this.setState({
        page: this.state.page + 1
      });
    }
  }, {
    key: "handleToggleExpand",
    value: function handleToggleExpand() {
      this.setState({
        expanded: !this.state.expanded
      });
      this.props.toggleExpandFacet(this.props.spec.propertyURI);
    }
  }, {
    key: "handleToggleShowQuery",
    value: function handleToggleShowQuery() {
      var tmp = this.state.config;

      if (!this.state.config) {
        tmp = {};
      }

      if (tmp.displayQueries) {
        tmp.displayQueries = 0;
      } else {
        tmp.displayQueries = 1;
      }

      this.setState({
        config: tmp
      });
    }
  }, {
    key: "handleToggleRangeChange",
    value: function handleToggleRangeChange() {
      if (this.state.rangeChanged) {
        this.setState({
          rangeChanged: 0,
          range: {
            min: '',
            max: ''
          }
        });
        this.props.onRange({});
      } else {
        // check if values of range are valid and then send the request
        if (this.state.range.min || this.state.range.max) {
          this.setState({
            rangeChanged: 1
          });
          this.props.onRange(this.state.range);
        }
      }
    } //data: min or max

  }, {
    key: "handleOnRangeChange",
    value: function handleOnRangeChange(data, e) {
      if (data === 'min') {
        this.setState({
          range: {
            min: e.target.value,
            max: this.state.range.max
          }
        });
      } else {
        this.setState({
          range: {
            max: e.target.value,
            min: this.state.range.min
          }
        });
      }
    }
  }, {
    key: "handleDropDownClick",
    value: function handleDropDownClick(e, data) {
      if (data.value === 'invert') {
        this.props.onInvert();
      } else if (data.value === 'asVariable') {
        this.setState({
          addedAsVar: !this.state.addedAsVar
        });
        this.props.onAnalyzeProp();
      } else if (data.value === 'shuffle') {
        this.setState({
          shuffled: !this.state.shuffled
        });
      } else if (data.value === 'download') {
        this.handleExport();
      } else if (data.value === 'range') {
        this.setState({
          rangeEnabled: !this.state.rangeEnabled
        });
      } else if (data.value === 'selectAll') {
        var values = [];
        this.filteredInstances.forEach(function (item) {
          values.push(item.value);
        });
        this.props.onCheck(1, values, this.props.spec.propertyURI);
      } else if (data.value === 'deselectAll') {
        var _values = [];
        this.filteredInstances.forEach(function (item) {
          _values.push(item.value);
        });
        this.props.onCheck(0, _values, this.props.spec.propertyURI);
      }
    }
  }, {
    key: "handleDropDown2Click",
    value: function handleDropDown2Click(e, data) {
      var tmp = this.state.config;

      if (!this.state.config) {
        tmp = {};
      }

      if (data.value === 'Default') {
        tmp = this.props.config ? JSON.parse(JSON.stringify(this.props.config)) : '';
      } else {
        tmp.objectBrowser = [data.value];
      }

      this.setState({
        config: tmp
      });
    }
  }, {
    key: "handleToggleVerticalResize",
    value: function handleToggleVerticalResize() {
      this.setState({
        verticalResized: !this.state.verticalResized
      });
    } //used for custom sorting

  }, {
    key: "compare",
    value: function compare(a, b) {
      return parseInt(b.total) - parseInt(a.total);
    } //filter content

  }, {
    key: "searchUpdated",
    value: function searchUpdated(term) {
      if (term.indexOf('filter:') !== -1) {
        //handle expressions in searchTerm
        var tmp = term.trim().split('filter:');

        if (tmp.length > 1) {
          //support for > < <> on values and total resources
          if (tmp[1].indexOf('v') !== -1) {
            //values
            if (tmp[1].indexOf('<v<') !== -1) {
              var tmp2 = tmp[1].split('<v<');
              this.setState({
                range: {
                  min: tmp2[0],
                  max: tmp2[1]
                },
                rangeEnabled: 1
              });
            } else if (tmp[1].indexOf('>v>') !== -1) {
              var _tmp = tmp[1].split('>v>');

              this.setState({
                range: {
                  min: _tmp[1],
                  max: _tmp[0]
                },
                rangeEnabled: 1
              });
            } else if (tmp[1].indexOf('v<') !== -1) {
              var _tmp2 = tmp[1].split('<');

              this.setState({
                range: {
                  min: '',
                  max: _tmp2[1]
                },
                rangeEnabled: 1
              });
            } else if (tmp[1].indexOf('<v') !== -1) {
              var _tmp3 = tmp[1].split('<');

              this.setState({
                range: {
                  max: '',
                  min: _tmp3[0]
                },
                rangeEnabled: 1
              });
            } else if (tmp[1].indexOf('>v') !== -1) {
              var _tmp4 = tmp[1].split('>');

              this.setState({
                range: {
                  max: _tmp4[0],
                  min: ''
                },
                rangeEnabled: 1
              });
            } else if (tmp[1].indexOf('v>') !== -1) {
              var _tmp5 = tmp[1].split('>');

              this.setState({
                range: {
                  max: '',
                  min: _tmp5[1]
                },
                rangeEnabled: 1
              });
            }
          } else if (tmp[1].indexOf('t') !== -1) {
            //total e.g. filter:50<t<100
            if (tmp[1].indexOf('<t<') !== -1) {
              var _tmp6 = tmp[1].split('<t<');

              this.setState({
                trange: {
                  min: _tmp6[0],
                  max: _tmp6[1]
                }
              });
            } else if (tmp[1].indexOf('>t>') !== -1) {
              var _tmp7 = tmp[1].split('>t>');

              this.setState({
                trange: {
                  min: _tmp7[1],
                  max: _tmp7[0]
                }
              });
            } else if (tmp[1].indexOf('t<') !== -1) {
              var _tmp8 = tmp[1].split('<');

              this.setState({
                trange: {
                  min: '',
                  max: _tmp8[1]
                }
              });
            } else if (tmp[1].indexOf('<t') !== -1) {
              var _tmp9 = tmp[1].split('<');

              this.setState({
                trange: {
                  max: '',
                  min: _tmp9[0]
                }
              });
            } else if (tmp[1].indexOf('>t') !== -1) {
              var _tmp10 = tmp[1].split('>');

              this.setState({
                trange: {
                  max: _tmp10[0],
                  min: ''
                }
              });
            } else if (tmp[1].indexOf('t>') !== -1) {
              var _tmp11 = tmp[1].split('>');

              this.setState({
                trange: {
                  max: '',
                  min: _tmp11[1]
                }
              });
            }
          }
        }
      } else {
        if (!term.trim()) {
          this.setState({
            searchTerm: term,
            trange: {
              max: '',
              min: ''
            }
          }); // needed to force re-render
        } else {
          this.setState({
            searchTerm: term
          }); // needed to force re-render
        }
      }
    }
  }, {
    key: "createSelecedList",
    value: function createSelecedList() {
      var out = '';
      var selected = [];
      var shortenURI = 1;

      if (this.state.config && this.state.config.shortenURI === 0) {
        shortenURI = 0;
      }

      if (this.props.selection && this.props.selection[this.props.spec.propertyURI] && this.props.selection[this.props.spec.propertyURI].length) {
        this.props.selection[this.props.spec.propertyURI].forEach(function (item) {
          if (shortenURI) {
            selected.push(_URIUtil.default.getURILabel(item.value));
          } else {
            selected.push(item.value);
          }
        });
        out = selected.join(','); //in case of range selected

        if (out === 'range') {
          if (this.state.range.min && this.state.range.max) {
            out = '> ' + this.state.range.min + ' & ' + '< ' + this.state.range.max;
          } else {
            if (this.state.range.min) {
              out = '> ' + this.state.range.min;
            } else {
              //max
              out = '< ' + this.state.range.max;
            }
          }
        } else {
          if (this.props.invert[this.props.spec.propertyURI]) {
            out = '!= ' + out;
          } else {
            out = '= ' + out;
          }
        }

        return out;
      } else {
        return out;
      }
    }
  }, {
    key: "addCommas",
    value: function addCommas(n) {
      var rx = /(\d+)(\d{3})/;
      return String(n).replace(/^\d+/, function (w) {
        while (rx.test(w)) {
          w = w.replace(rx, '$1,$2');
        }

        return w;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var self = this; //order by total count: for performance is done on client-side

      if (self.props.spec.propertyURI) {
        this.props.spec.instances.sort(this.compare);
      }

      var newSpec = {};
      var cloneInstances = this.props.spec.instances.slice(0);

      if (this.state.shuffled) {
        shuffle(cloneInstances);
      }

      var itemsCount = this.props.spec.total;
      newSpec.property = this.props.spec.property;
      newSpec.propertyURI = this.props.spec.propertyURI;
      var KEYS_TO_FILTERS = ['label', 'value'];
      cloneInstances = cloneInstances.filter((0, _reactSearchInput.createFilter)(this.state.searchTerm, KEYS_TO_FILTERS));
      newSpec.instances = cloneInstances; //search and filter cannot occur together:ToDO

      this.filteredInstances = cloneInstances.slice(0);

      if (this.state.range.min && this.state.range.max) {
        cloneInstances = this.props.spec.instances.slice(0);
        cloneInstances.forEach(function (instance) {
          if (Number(instance.value) < Number(_this2.state.range.max) && Number(instance.value) > Number(_this2.state.range.min)) {
            _this2.filteredInstances.push(instance);
          }
        });
        newSpec.instances = this.filteredInstances;
      } else {
        if (this.state.range.max) {
          cloneInstances = this.props.spec.instances.slice(0);
          cloneInstances.forEach(function (instance) {
            if (Number(instance.value) < Number(_this2.state.range.max)) {
              _this2.filteredInstances.push(instance);
            }
          });
          newSpec.instances = this.filteredInstances;
        } else if (this.state.range.min) {
          cloneInstances = this.props.spec.instances.slice(0);
          cloneInstances.forEach(function (instance) {
            if (Number(instance.value) > Number(_this2.state.range.min)) {
              _this2.filteredInstances.push(instance);
            }
          });
          newSpec.instances = this.filteredInstances;
        }
      }

      if (this.state.trange.min && this.state.trange.max) {
        if (this.filteredInstances.length) {
          cloneInstances = this.filteredInstances.slice(0);
          this.filteredInstances = [];
        } else {
          cloneInstances = this.props.spec.instances.slice(0);
        }

        cloneInstances.forEach(function (instance) {
          if (Number(instance.total) < Number(_this2.state.trange.max) && Number(instance.total) > Number(_this2.state.trange.min)) {
            _this2.filteredInstances.push(instance);
          }
        });
        newSpec.instances = this.filteredInstances;
      } else {
        if (this.state.trange.max) {
          if (this.filteredInstances.length) {
            cloneInstances = this.filteredInstances.slice(0);
            this.filteredInstances = [];
          } else {
            cloneInstances = this.props.spec.instances.slice(0);
          }

          cloneInstances.forEach(function (instance) {
            if (Number(instance.total) < Number(_this2.state.trange.max)) {
              _this2.filteredInstances.push(instance);
            }
          });
          newSpec.instances = this.filteredInstances;
        } else if (this.state.trange.min) {
          if (this.filteredInstances.length) {
            cloneInstances = this.filteredInstances.slice(0);
            this.filteredInstances = [];
          } else {
            cloneInstances = this.props.spec.instances.slice(0);
          }

          cloneInstances.forEach(function (instance) {
            if (Number(instance.total) > Number(_this2.state.trange.min)) {
              _this2.filteredInstances.push(instance);
            }
          });
          newSpec.instances = this.filteredInstances;
        }
      }

      cloneInstances = newSpec.instances; //console.log(this.props.spec.query);
      //dropdown setting

      var invertStat = this.props.invert[this.props.spec.propertyURI] ? 'Revert' : 'Invert';
      var shuffleStat = !this.state.shuffled ? 'Shuffle' : 'Reset';
      var rangeStat = !this.state.rangeEnabled ? 'Show' : 'Hide';
      var addedAsVarStat = !this.props.analysisProps[this.props.spec.propertyURI] ? 'Analyze property' : 'Remove from analysis';
      var d_options = [{
        key: 5,
        text: addedAsVarStat,
        value: 'asVariable',
        onClick: this.handleDropDownClick.bind(this)
      }, {
        key: 6,
        text: shuffleStat + ' the list',
        value: 'shuffle',
        onClick: this.handleDropDownClick.bind(this)
      }, {
        key: 7,
        text: rangeStat + ' range options',
        value: 'range',
        onClick: this.handleDropDownClick.bind(this)
      }, {
        key: 8,
        text: 'Download the list',
        value: 'download',
        onClick: this.handleDropDownClick.bind(this)
      }];
      var selectAllFlag = 0;

      if (this.props.selection && this.props.selection[this.props.spec.propertyURI] && this.props.selection[this.props.spec.propertyURI].length) {
        d_options.unshift({
          key: 4,
          text: 'Deselect All',
          value: 'deselectAll',
          onClick: this.handleDropDownClick.bind(this)
        });
        selectAllFlag = 1;
      } //can select maximum 100 items


      if (!selectAllFlag && this.filteredInstances.length && this.filteredInstances.length < 100) {
        d_options.unshift({
          key: 4,
          text: 'Select All',
          value: 'selectAll',
          onClick: this.handleDropDownClick.bind(this)
        });
      }

      if (this.props.selection && this.props.selection[this.props.spec.propertyURI] && this.props.selection[this.props.spec.propertyURI].length) {
        d_options.unshift({
          key: 3,
          text: invertStat + ' the selection',
          value: 'invert',
          onClick: this.handleDropDownClick.bind(this)
        });
      }

      var b_options = [{
        key: 1,
        icon: 'list layout',
        text: 'Check List',
        value: 'CheckListBrowser'
      }, {
        key: 2,
        icon: 'block layout',
        text: 'Tag List',
        value: 'TagListBrowser'
      }, {
        key: 3,
        icon: 'bar chart',
        text: 'Bar Chart',
        value: 'BarChartBrowser'
      }, {
        key: 4,
        icon: 'pie chart',
        text: 'Pie Chart',
        value: 'PieChartBrowser'
      }, {
        key: 5,
        icon: 'grid layout',
        text: 'Tree Map',
        value: 'TreeMapBrowser'
      }, {
        key: 6,
        icon: 'cloud',
        text: 'Tag Cloud',
        value: 'TagCloudBrowser'
      }];
      var check = this.checkGeoFeatures();

      if (check) {
        b_options.push({
          key: 7,
          icon: 'map',
          text: 'Map',
          value: 'GeoListBrowser'
        });
      }

      b_options.push({
        key: 30,
        text: 'Default Browser',
        value: 'Default'
      });

      var d_trigger = _react.default.createElement("span", null, _react.default.createElement(_semanticUiReact.Icon, {
        name: "lab",
        className: "orange"
      }));

      var browserIcons = {
        'CheckListBrowser': 'list layout',
        'TagListBrowser': 'block layout',
        'TagCloudBrowser': 'cloud',
        'BarChartBrowser': 'bar chart',
        'PieChartBrowser': 'pie chart',
        'TreeMapBrowser': 'grid layout',
        'GeoListBrowser': 'map'
      };
      var defaultBrowseIcon = 'list layout';
      var iconC = this.state.config && this.state.config.objectBrowser ? browserIcons[this.state.config.objectBrowser] ? browserIcons[this.state.config.objectBrowser] : defaultBrowseIcon : defaultBrowseIcon;

      var b_trigger = _react.default.createElement("span", null, _react.default.createElement(_semanticUiReact.Icon, {
        name: iconC,
        className: "olive"
      })); //change header color of facet: Violet -> for property chains , Purple -> multigraphs


      var defaultColor = 'blue';
      var defaultEmphasis = '';

      if (this.props.spec.propertyURI.indexOf('->') !== -1) {
        defaultColor = 'violet';
      }

      if (this.props.spec.propertyURI.indexOf('->[') !== -1) {
        defaultColor = 'purple';
      }

      if (this.props.invert[this.props.spec.propertyURI]) {
        defaultColor = 'red';
      }

      if (this.state.addedAsVar) {
        defaultEmphasis = ' tertiary';
      } //-----------------------


      var contentClasses = 'content',
          extraContentClasses = 'extra content',
          cardClasses = 'ui top attached segment ' + (this.props.color ? this.props.color : defaultColor) + defaultEmphasis;
      var queryClasses = 'ui tertiary segment';
      var rangeClasses = 'ui secondary inverted blue segment';

      if (this.state.verticalResized) {
        contentClasses = contentClasses + ' hide-element';
        extraContentClasses = extraContentClasses + ' hide-element';
        queryClasses = queryClasses + ' hide-element';
        rangeClasses = rangeClasses + ' hide-element';
      }

      var descStyle = {
        minHeight: this.props.minHeight ? this.props.minHeight : 80,
        maxHeight: this.props.maxHeight ? this.props.maxHeight : this.props.spec.property ? 200 : 1200,
        position: 'relative',
        overflow: 'auto'
      };
      var animatedClass = '';

      if (this.props.spec.property) {
        animatedClass = 'animated fadeIn';
      }

      if (this.state.config && this.state.config.pivotDataset) {
        animatedClass = 'animated zoomIn';
      }

      return _react.default.createElement("div", {
        ref: "facet",
        className: animatedClass,
        style: {
          'wordBreak': 'break-all',
          'wordWrap': 'break-word'
        }
      }, _react.default.createElement("div", {
        className: cardClasses
      }, this.state.verticalResized ? _react.default.createElement("div", {
        className: "ui horizontal list"
      }, _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement(_PropertyHeader.default, {
        spec: {
          property: this.props.spec.property,
          propertyURI: this.props.spec.propertyURI
        },
        config: this.state.config,
        size: "3"
      })), _react.default.createElement("div", {
        className: "item"
      }, this.createSelecedList(), _react.default.createElement("a", {
        className: "ui icon mini basic button right floated",
        onClick: this.handleToggleVerticalResize.bind(this)
      }, _react.default.createElement("i", {
        className: "ui icon resize vertical"
      })))) : '', _react.default.createElement("div", {
        className: contentClasses
      }, !this.props.spec.propertyURI ? '' : _react.default.createElement("span", {
        className: "ui teal ribbon label",
        title: "number of items listed in this facet",
        onDoubleClick: this.handleToggleShowQuery.bind(this)
      }, this.state.searchTerm || this.state.range.min || this.state.range.max || this.state.trange.min || this.state.trange.max ? cloneInstances.length : this.addCommas(itemsCount), !this.state.searchTerm && !this.state.range.min && !this.state.range.max && !this.state.trange.min && !this.state.trange.max && this.props.spec.propertyURI && parseInt(itemsCount) > cloneInstances.length ? '*' : ''), !this.props.spec.propertyURI ? '' : this.state.config && this.state.config.pivotDataset ? _react.default.createElement("a", {
        className: "ui top right attached blue label",
        onClick: this.handlePivotChange.bind(this)
      }, _react.default.createElement("i", {
        className: "ui icon zoom"
      }), "Zoom in") : null, _react.default.createElement("div", {
        className: "ui horizontal list"
      }, _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement(_PropertyHeader.default, {
        spec: {
          property: this.props.spec.property,
          propertyURI: this.props.spec.propertyURI
        },
        config: this.state.config,
        size: "3"
      })), _react.default.createElement("div", {
        className: "item",
        style: {
          'wordBreak': 'break-all',
          'wordWrap': 'break-word'
        }
      }, this.createSelecedList())), _react.default.createElement("div", {
        className: "meta"
      }), _react.default.createElement("div", {
        className: "description"
      }, _react.default.createElement("div", {
        className: "ui form",
        style: descStyle
      }, _react.default.createElement(_ObjectBrowser.default, {
        expanded: this.state.expanded,
        selection: this.props.selection,
        shortenURI: true,
        spec: newSpec,
        config: this.state.config,
        onSelect: this.checkItem.bind(this),
        datasetURI: this.props.datasetURI
      }), !this.state.searchTerm && !this.state.range.min && !this.state.range.max && !this.state.trange.min && !this.state.trange.max && this.props.spec.propertyURI && parseInt(itemsCount) > cloneInstances.length ? _react.default.createElement("a", {
        onClick: this.handleShowMore.bind(this),
        className: "ui orange fluid label"
      }, itemsCount - cloneInstances.length + ' items left. Show more...') : ''))), this.state.rangeEnabled ? _react.default.createElement("div", {
        className: rangeClasses
      }, _react.default.createElement("div", {
        className: "ui form"
      }, _react.default.createElement("div", {
        className: "three fields"
      }, _react.default.createElement("div", {
        className: "field"
      }, _react.default.createElement("label", null, "Minimum"), _react.default.createElement("input", {
        type: "text",
        placeholder: "Min",
        value: this.state.range.min,
        onChange: this.handleOnRangeChange.bind(this, 'min')
      })), _react.default.createElement("div", {
        className: "field"
      }, _react.default.createElement("label", null, "Maximum"), _react.default.createElement("input", {
        type: "text",
        placeholder: "Max",
        value: this.state.range.max,
        onChange: this.handleOnRangeChange.bind(this, 'max')
      })), _react.default.createElement("div", {
        className: "field"
      }, _react.default.createElement("label", null, " \xA0"), _react.default.createElement("button", {
        className: "ui button",
        onClick: this.handleToggleRangeChange.bind(this)
      }, this.state.rangeChanged ? 'Revert' : 'Apply'))))) : '', this.state.config && this.state.config.displayQueries ? _react.default.createElement("div", {
        className: queryClasses
      }, _react.default.createElement(_YASQEViewer.default, {
        spec: {
          value: this.props.spec.query
        }
      })) : ''), this.state.verticalResized ? '' : _react.default.createElement("div", {
        className: "ui bottom attached compact stackable menu"
      }, _react.default.createElement("div", {
        className: "left menu"
      }, _react.default.createElement("div", {
        className: "ui form fluid left aligned category search item"
      }, _react.default.createElement("div", {
        className: "ui transparent icon input"
      }, _react.default.createElement(_reactSearchInput.default, {
        placeholder: this.props.spec.property ? 'Search in ' + cloneInstances.length + ' items' : 'Search',
        className: "ui mini search icon input",
        onChange: this.searchUpdated.bind(this),
        throttle: 500
      })), _react.default.createElement("div", {
        className: "results"
      }))), _react.default.createElement("div", {
        className: "right stackable menu"
      }, this.props.spec.property ? _react.default.createElement(_semanticUiReact.Dropdown, {
        className: "item",
        title: "actions",
        selectOnBlur: false,
        trigger: d_trigger,
        options: d_options,
        icon: null,
        pointing: "top left",
        floating: true
      }) : '', this.props.spec.property ? this.state.config && this.state.config.freezeBrowser ? '' : _react.default.createElement(_semanticUiReact.Dropdown, {
        className: "item",
        title: "change the browser",
        selectOnBlur: false,
        onChange: this.handleDropDown2Click.bind(this),
        trigger: b_trigger,
        options: b_options,
        icon: null,
        pointing: "top left",
        floating: true
      }) : '', this.props.spec.property ? _react.default.createElement("a", {
        title: "vertical collapse",
        className: "ui icon item",
        onClick: this.handleToggleVerticalResize.bind(this)
      }, _react.default.createElement("i", {
        className: "ui icon resize vertical"
      })) : '', this.props.spec.property ? _react.default.createElement("a", {
        title: "expand facet",
        className: "ui icon item",
        onClick: this.handleToggleExpand.bind(this)
      }, _react.default.createElement("i", {
        className: "ui icon expand"
      })) : '')), _react.default.createElement("br", null));
    }
  }]);

  return Facet;
}(_react.default.Component);

var _default = Facet;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1466:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _MasterBrowser = _interopRequireDefault(__webpack_require__(1467));

var _TagListBrowser = _interopRequireDefault(__webpack_require__(1568));

var _CheckListBrowser = _interopRequireDefault(__webpack_require__(1569));

var _GeoListBrowser = _interopRequireDefault(__webpack_require__(1570));

var _BarChartBrowser = _interopRequireDefault(__webpack_require__(1571));

var _PieChartBrowser = _interopRequireDefault(__webpack_require__(1674));

var _TaxonomyBrowser = _interopRequireDefault(__webpack_require__(1675));

var _TreeMapBrowser = _interopRequireDefault(__webpack_require__(1678));

var _TagCloudBrowser = _interopRequireDefault(__webpack_require__(1679));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ObjectBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(ObjectBrowser, _React$Component);

  function ObjectBrowser() {
    _classCallCheck(this, ObjectBrowser);

    return _possibleConstructorReturn(this, (ObjectBrowser.__proto__ || Object.getPrototypeOf(ObjectBrowser)).apply(this, arguments));
  }

  _createClass(ObjectBrowser, [{
    key: "handleSelect",
    value: function handleSelect(status, value) {
      this.props.onSelect(status, value);
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var browser, browserConfig, output;

      if (this.props.config) {
        if (this.props.config.objectBrowser) {
          browserConfig = this.props.config.objectBrowser[0];
        }
      }

      switch (browserConfig) {
        case 'CheckListBrowser':
          browser = _react.default.createElement(_CheckListBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'TagListBrowser':
          browser = _react.default.createElement(_TagListBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'GeoListBrowser':
          browser = _react.default.createElement(_GeoListBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'BarChartBrowser':
          browser = _react.default.createElement(_BarChartBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'PieChartBrowser':
          browser = _react.default.createElement(_PieChartBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'TreeMapBrowser':
          browser = _react.default.createElement(_TreeMapBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'TagCloudBrowser':
          browser = _react.default.createElement(_TagCloudBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        case 'TaxonomyBrowser':
          browser = _react.default.createElement(_TaxonomyBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
          break;

        default:
          browser = _react.default.createElement(_CheckListBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
      } //treat master facet different than normal ones


      if (!self.props.spec.propertyURI) {
        browser = _react.default.createElement(_MasterBrowser.default, {
          selection: self.props.selection,
          expanded: self.props.expanded,
          datasetURI: self.props.datasetURI,
          propertyURI: self.props.spec.propertyURI,
          shortenURI: self.props.shortenURI,
          config: self.props.config,
          instances: self.props.spec.instances,
          onCheck: self.handleSelect.bind(self)
        });
      } else {
        //in case no total value is defined, charts make no sense: e.g. when regenerating UI
        if (self.props.spec.instances.length && !self.props.spec.instances[0].total) {
          browser = _react.default.createElement(_CheckListBrowser.default, {
            selection: self.props.selection,
            expanded: self.props.expanded,
            datasetURI: self.props.datasetURI,
            propertyURI: self.props.spec.propertyURI,
            shortenURI: self.props.shortenURI,
            config: self.props.config,
            instances: self.props.spec.instances,
            onCheck: self.handleSelect.bind(self)
          });
        }
      }

      output = browser;
      return _react.default.createElement("div", {
        className: "ui",
        ref: "objectBrowser"
      }, output);
    }
  }]);

  return ObjectBrowser;
}(_react.default.Component);

var _default = ObjectBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1467:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _CheckboxItem = _interopRequireDefault(__webpack_require__(708));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var MasterBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(MasterBrowser, _React$Component);

  function MasterBrowser(props) {
    var _this;

    _classCallCheck(this, MasterBrowser);

    _this = _possibleConstructorReturn(this, (MasterBrowser.__proto__ || Object.getPrototypeOf(MasterBrowser)).call(this, props));
    _this.state = {
      selected: []
    };
    return _this;
  }

  _createClass(MasterBrowser, [{
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (!this.props.propertyURI) {
        for (var prop in this.props.selection) {
          selected.push(prop);
        }
      } else {
        if (this.props.selection[this.props.propertyURI]) {
          this.props.selection[this.props.propertyURI].forEach(function (node) {
            selected.push(node.value);
          });
        }
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "handleSelect",
    value: function handleSelect(status, value) {
      if (this.doesExist(value)) {
        this.props.onCheck(0, value);
      } else {
        this.props.onCheck(1, value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var cpanels = [];
      var categoryObj = {};
      var categoryOthers = [];
      self.props.instances.forEach(function (node) {
        if (node.category && node.category.length) {
          if (categoryObj[node.category[0]]) {
            categoryObj[node.category[0]].push(node);
          } else {
            categoryObj[node.category[0]] = [node];
          }
        } else {
          categoryOthers.push(node);
        }
      });
      var checkDIV;
      var checkDIVc;
      var keyI = 0;

      for (var prop in categoryObj) {
        checkDIVc = categoryObj[prop].map(function (node, index) {
          var _React$createElement;

          return _react.default.createElement(_CheckboxItem.default, (_React$createElement = {
            checked: self.doesExist(node.value),
            key: index,
            datasetURI: self.props.datasetURI,
            shortenURI: self.props.shortenURI
          }, _defineProperty(_React$createElement, "key", index), _defineProperty(_React$createElement, "spec", node), _defineProperty(_React$createElement, "config", self.props.config), _defineProperty(_React$createElement, "total", self.props.propertyURI ? node.total : 0), _defineProperty(_React$createElement, "onCheck", self.handleSelect.bind(self)), _React$createElement));
        });
        keyI++; //cpanels.push({title: prop, content: checkDIVc});

        cpanels.push({
          content: {
            content: checkDIVc,
            key: prop + keyI
          },
          title: prop,
          key: prop + 'k' + keyI
        });
      } //add others to the end


      if (cpanels.length) {
        if (categoryOthers.length) {
          checkDIVc = categoryOthers.map(function (node, index) {
            var _React$createElement2;

            return _react.default.createElement(_CheckboxItem.default, (_React$createElement2 = {
              checked: self.doesExist(node.value),
              key: index,
              datasetURI: self.props.datasetURI,
              shortenURI: self.props.shortenURI
            }, _defineProperty(_React$createElement2, "key", index), _defineProperty(_React$createElement2, "spec", node), _defineProperty(_React$createElement2, "config", self.props.config), _defineProperty(_React$createElement2, "total", self.props.propertyURI ? node.total : 0), _defineProperty(_React$createElement2, "onCheck", self.handleSelect.bind(self)), _React$createElement2));
          }); //cpanels.push({title: 'Others', content: checkDIVc});

          cpanels.push({
            content: {
              content: checkDIVc,
              key: 'Others' + keyI
            },
            title: 'Others',
            key: 'OthersK' + keyI
          });
        }

        checkDIV = _react.default.createElement(_semanticUiReact.Accordion, {
          panels: cpanels,
          styled: true,
          exclusive: false,
          fluid: true
        });
      } else {
        checkDIV = self.props.instances.map(function (node, index) {
          var _React$createElement3;

          return _react.default.createElement(_CheckboxItem.default, (_React$createElement3 = {
            checked: self.doesExist(node.value),
            key: index,
            datasetURI: self.props.datasetURI,
            shortenURI: self.props.shortenURI
          }, _defineProperty(_React$createElement3, "key", index), _defineProperty(_React$createElement3, "spec", node), _defineProperty(_React$createElement3, "config", self.props.config), _defineProperty(_React$createElement3, "total", self.props.propertyURI ? node.total : 0), _defineProperty(_React$createElement3, "onCheck", self.handleSelect.bind(self)), _React$createElement3));
        });
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "masterBrowser"
      }, checkDIV);
    }
  }]);

  return MasterBrowser;
}(_react.default.Component);

var _default = MasterBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1468:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Default component to display object values
*/
var PUBLIC_URL = undefined ? undefined : '';

var BasicIndividualView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicIndividualView, _React$Component);

  function BasicIndividualView() {
    _classCallCheck(this, BasicIndividualView);

    return _possibleConstructorReturn(this, (BasicIndividualView.__proto__ || Object.getPrototypeOf(BasicIndividualView)).apply(this, arguments));
  }

  _createClass(BasicIndividualView, [{
    key: "render",
    value: function render() {
      var val, outputDIV;
      var cstyle = {
        direction: 'ltr'
      };
      val = this.props.spec.value;

      if (this.props.spec.valueType === 'uri') {
        if (this.props.config) {
          if (this.props.config.truncateURI || this.props.truncateURI) {
            val = '<' + _URIUtil.default.truncateMiddle(val, 50, '') + '>';
          } else if (this.props.config.shortenURI || this.props.shortenURI) {
            val = '<' + _URIUtil.default.getURILabel(val) + '>';
          }
        }

        outputDIV = _react.default.createElement("a", {
          href: this.props.spec.value,
          target: "_blank",
          itemProp: this.props.property
        }, ' ', val, ' ');
      } else {
        if (this.props.config) {
          if (this.props.config.decodeURIComponent || this.props.decodeURIComponent) {
            val = decodeURIComponent(val);
          } else if (this.props.config.encodeURIComponent || this.props.encodeURIComponent) {
            val = encodeURIComponent(val);
          } //allow view RightToLeft languages


          if (this.props.config.rtl || this.props.rtl) {
            cstyle.direction = 'rtl';
          }
        }

        outputDIV = _react.default.createElement("span", {
          itemProp: this.props.property
        }, " ", val, " ");
      }

      return _react.default.createElement("div", {
        style: cstyle,
        className: "ui",
        ref: "basicIndividualView"
      }, outputDIV);
    }
  }]);

  return BasicIndividualView;
}(_react.default.Component);

BasicIndividualView.propTypes = {
  /**
  truncate URI from the middle
  */
  truncateURI: _propTypes.default.bool,

  /**
  only show the last part of the URI
  */
  shortenURI: _propTypes.default.bool,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicIndividualView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1469:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Default component to display object values
*/
var BasicHTMLContentView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicHTMLContentView, _React$Component);

  function BasicHTMLContentView() {
    _classCallCheck(this, BasicHTMLContentView);

    return _possibleConstructorReturn(this, (BasicHTMLContentView.__proto__ || Object.getPrototypeOf(BasicHTMLContentView)).apply(this, arguments));
  }

  _createClass(BasicHTMLContentView, [{
    key: "render",
    value: function render() {
      var val, outputDIV;
      var cstyle = {
        direction: 'ltr'
      };
      val = this.props.spec.value;

      if (this.props.config) {
        if (this.props.config.decodeURIComponent || this.props.decodeURIComponent) {
          val = decodeURIComponent(val);
        } else if (this.props.config.encodeURIComponent || this.props.encodeURIComponent) {
          val = encodeURIComponent(val);
        } //allow view RightToLeft languages


        if (this.props.config.rtl || this.props.rtl) {
          cstyle.direction = 'rtl';
        }
      }

      outputDIV = _react.default.createElement("div", {
        itemProp: this.props.property,
        dangerouslySetInnerHTML: {
          __html: val
        }
      });
      return _react.default.createElement("div", {
        className: "ui",
        style: cstyle,
        ref: "basicHTMLContentView"
      }, outputDIV);
    }
  }]);

  return BasicHTMLContentView;
}(_react.default.Component);

BasicHTMLContentView.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicHTMLContentView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1470:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display image for image URIs
*/
var PUBLIC_URL = undefined ? undefined : '';

var BasicImageView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicImageView, _React$Component);

  function BasicImageView() {
    _classCallCheck(this, BasicImageView);

    return _possibleConstructorReturn(this, (BasicImageView.__proto__ || Object.getPrototypeOf(BasicImageView)).apply(this, arguments));
  }

  _createClass(BasicImageView, [{
    key: "render",
    value: function render() {
      var val, outputDIV;
      var styleCl = {
        maxWidth: '400px'
      };
      val = this.props.spec.value;

      if (this.props.config) {
        if (this.props.config.imageHeight || this.props.imageHeight) {
          styleCl['height'] = this.props.config.imageHeight;
        }

        if (this.props.config.imageWidth || this.props.imageWidth) {
          styleCl['width'] = this.props.config.imageWidth;
        }
      }

      if (this.props.spec.valueType !== 'uri' && val.indexOf('http:') === -1 && val.indexOf('https:') === -1 && val.indexOf('data:image') === -1) {
        outputDIV = _react.default.createElement("span", {
          itemProp: this.props.property
        }, " ", val, " ");
      } else {
        outputDIV = _react.default.createElement("a", {
          href: val,
          target: "_blank"
        }, ' ', _react.default.createElement("img", {
          itemProp: this.props.property,
          className: "ui centered rounded image",
          style: styleCl,
          src: val,
          alt: val
        }), ' ');
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicImageView"
      }, outputDIV);
    }
  }]);

  return BasicImageView;
}(_react.default.Component);

BasicImageView.propTypes = {
  /**
  Width of the image
  */
  imageWidth: _propTypes.default.number,

  /**
  Height of the image
  */
  imageHeight: _propTypes.default.number,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicImageView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1471:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _PropertyHeader = _interopRequireDefault(__webpack_require__(359));

var _ObjectIViewer = _interopRequireDefault(__webpack_require__(298));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Default component to display object with properties
*/
var BasicIndividualDetailView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicIndividualDetailView, _React$Component);

  function BasicIndividualDetailView() {
    _classCallCheck(this, BasicIndividualDetailView);

    return _possibleConstructorReturn(this, (BasicIndividualDetailView.__proto__ || Object.getPrototypeOf(BasicIndividualDetailView)).apply(this, arguments));
  }

  _createClass(BasicIndividualDetailView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var currentComp = this.refs.detailProperties;
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var list = this.props.spec.extendedViewData.map(function (node, index) {
        var llist = node.spec.instances.map(function (instance, index2) {
          return _react.default.createElement(_ObjectIViewer.default, {
            key: index + '_' + index2,
            spec: instance,
            config: node.config,
            datasetURI: self.props.datasetURI,
            resource: self.props.spec.value,
            property: node.spec.propertyURI
          });
        });
        return _react.default.createElement("div", {
          className: "item",
          key: index
        }, _react.default.createElement("div", {
          className: "ui"
        }, _react.default.createElement("div", {
          className: "ui horizontal list"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement(_PropertyHeader.default, {
          spec: node.spec,
          config: node.config,
          size: "4"
        }))), _react.default.createElement("div", {
          className: "ui dividing header"
        }), _react.default.createElement("div", {
          className: "fourteen wide column field list"
        }, llist), _react.default.createElement("div", {
          className: "one wide column field"
        })));
      });
      return _react.default.createElement("div", {
        ref: "detailProperties",
        itemScope: true,
        itemType: this.props.spec.objectType,
        itemID: this.props.spec.value
      }, _react.default.createElement("div", {
        className: "ui attached primary segment"
      }, _react.default.createElement("div", {
        className: "ui list"
      }, list)));
    }
  }]);

  return BasicIndividualDetailView;
}(_react.default.Component);

BasicIndividualDetailView.propTypes = {
  /**
  Container dataset URI
  */
  datasetURI: _propTypes.default.string,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicIndividualDetailView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1472:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display DBpedia resources
*/
var PUBLIC_URL = undefined ? undefined : '';

var BasicDBpediaView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicDBpediaView, _React$Component);

  function BasicDBpediaView() {
    _classCallCheck(this, BasicDBpediaView);

    return _possibleConstructorReturn(this, (BasicDBpediaView.__proto__ || Object.getPrototypeOf(BasicDBpediaView)).apply(this, arguments));
  }

  _createClass(BasicDBpediaView, [{
    key: "getTitlefromURI",
    value: function getTitlefromURI(uri) {
      if (uri) {
        var tmp = uri.split('/');
        return tmp[tmp.length - 1];
      }
    }
  }, {
    key: "getWikipediaURI",
    value: function getWikipediaURI(uri) {
      return 'http://en.wikipedia.org/wiki/' + this.getTitlefromURI(uri);
    }
  }, {
    key: "isDBpediaURI",
    value: function isDBpediaURI(uri) {
      if (uri.search('dbpedia.org') !== -1) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "isHTTPURI",
    value: function isHTTPURI(uri) {
      if (uri.search('http://') !== -1) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var label, link, outputDIV;
      label = this.props.spec.value;
      outputDIV = _react.default.createElement("span", {
        itemProp: this.props.property
      }, " ", label, " ");

      if (this.props.spec.valueType === 'uri') {
        link = this.props.spec.value;

        if (this.isDBpediaURI(this.props.spec.value)) {
          label = '<' + this.getTitlefromURI(this.props.spec.value) + '>';

          if (this.props.config.asWikipedia || this.props.asWikipedia) {
            link = this.getWikipediaURI(this.props.spec.value);
          }
        }

        if (this.isHTTPURI(this.props.spec.value)) {
          outputDIV = _react.default.createElement("a", {
            href: link,
            target: "_blank",
            itemProp: this.props.property
          }, ' ', label, ' ');
        }
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicDBpediaView"
      }, outputDIV);
    }
  }]);

  return BasicDBpediaView;
}(_react.default.Component);

BasicDBpediaView.propTypes = {
  /**
  display wikipedia page URI instead of DBpedia one
  */
  asWikipedia: _propTypes.default.bool,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicDBpediaView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1473:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleRouter = __webpack_require__(34);

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display object with link to its correspondig resource page on LD-R
*/
var PUBLIC_URL = undefined ? undefined : '';

var BasicLinkedIndividualView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicLinkedIndividualView, _React$Component);

  function BasicLinkedIndividualView() {
    _classCallCheck(this, BasicLinkedIndividualView);

    return _possibleConstructorReturn(this, (BasicLinkedIndividualView.__proto__ || Object.getPrototypeOf(BasicLinkedIndividualView)).apply(this, arguments));
  }

  _createClass(BasicLinkedIndividualView, [{
    key: "render",
    value: function render() {
      var outputDIV,
          val = this.props.spec.value;
      var datasetURI = this.props.datasetURI;

      if (this.props.config) {
        if (this.props.config.containerDatasetURI || this.props.containerDatasetURI) {
          datasetURI = this.props.config.containerDatasetURI[0];
        }

        if (this.props.config.shortenURI || this.props.shortenURI) {
          val = _URIUtil.default.getURILabel(val);

          if (!val) {
            val = this.props.spec.value;
          }
        }
      }

      var title = val;

      if (this.props.spec.valueLabel) {
        title = this.props.spec.valueLabel;
      }

      if (this.props.spec.valueTitle) {
        title = this.props.spec.valueTitle;
      }

      if (this.props.openInNewWindows || this.props.config && this.props.config.openInNewWindows) {
        outputDIV = _react.default.createElement("a", {
          target: "_blank",
          className: "ui label",
          href: '/dataset/' + encodeURIComponent(datasetURI) + '/resource/' + encodeURIComponent(this.props.spec.value) + '/' + this.props.category + '/' + encodeURIComponent(this.props.propertyPath)
        }, _react.default.createElement("i", {
          className: "black cube icon"
        }), " ", title);
      } else {
        outputDIV = _react.default.createElement(_fluxibleRouter.NavLink, {
          routeName: "resource",
          className: "ui label",
          href: '/dataset/' + encodeURIComponent(datasetURI) + '/resource/' + encodeURIComponent(this.props.spec.value) + '/' + this.props.category + '/' + encodeURIComponent(this.props.propertyPath)
        }, _react.default.createElement("i", {
          className: "black cube icon"
        }), " ", title);
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicLinkedIndividualView"
      }, _react.default.createElement("a", {
        itemProp: this.props.property,
        style: {
          display: 'none'
        },
        href: this.props.spec.value
      }), outputDIV);
    }
  }]);

  return BasicLinkedIndividualView;
}(_react.default.Component);

BasicLinkedIndividualView.propTypes = {
  /**
  Opens the link in a new windows
  */
  openInNewWindows: _propTypes.default.bool,

  /**
  Container dataset URI
  */
  containerDatasetURI: _propTypes.default.string,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicLinkedIndividualView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1474:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display values from an option/value list
*/
var PUBLIC_URL = undefined ? undefined : '';

var BasicOptionView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicOptionView, _React$Component);

  function BasicOptionView() {
    _classCallCheck(this, BasicOptionView);

    return _possibleConstructorReturn(this, (BasicOptionView.__proto__ || Object.getPrototypeOf(BasicOptionView)).apply(this, arguments));
  }

  _createClass(BasicOptionView, [{
    key: "prepareOption",
    value: function prepareOption(value) {
      var label = value;

      if (this.props.config && this.props.config.options) {
        this.props.config.options.forEach(function (l) {
          if (l.value === value) {
            label = l.label;
            return label;
          }
        });
      }

      return label;
    }
  }, {
    key: "render",
    value: function render() {
      var outputDIV,
          label = this.prepareOption(this.props.spec.value);

      if (this.props.spec.valueType === 'uri') {
        if (this.props.config) {
          if (this.props.config.shortenURI) {
            label = '<' + _URIUtil.default.getURILabel(label) + '>';
          }
        }

        outputDIV = _react.default.createElement("a", {
          href: this.props.spec.value,
          target: "_blank",
          itemProp: this.props.property
        }, ' ', label, ' ');
      } else {
        outputDIV = _react.default.createElement("span", {
          itemProp: this.props.property
        }, " ", label, " ");
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicOptionView"
      }, outputDIV);
    }
  }]);

  return BasicOptionView;
}(_react.default.Component);

BasicOptionView.propTypes = {
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicOptionView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1475:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
replaces sensitive object values with a given character
*/
var PasswordView = /*#__PURE__*/function (_React$Component) {
  _inherits(PasswordView, _React$Component);

  function PasswordView() {
    _classCallCheck(this, PasswordView);

    return _possibleConstructorReturn(this, (PasswordView.__proto__ || Object.getPrototypeOf(PasswordView)).apply(this, arguments));
  }

  _createClass(PasswordView, [{
    key: "render",
    value: function render() {
      var outputDIV,
          secretChar = '*';

      if (this.props.secretChar) {
        secretChar = this.props.secretChar;
      }

      outputDIV = _react.default.createElement("span", null, " ", Array(30).join(secretChar), " ");
      return _react.default.createElement("div", {
        className: "ui",
        ref: "passwordView"
      }, outputDIV);
    }
  }]);

  return PasswordView;
}(_react.default.Component);

PasswordView.propTypes = {
  /**
  Character used to replace the sensitive value
  */
  secretChar: _propTypes.default.string
};
var _default = PasswordView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1476:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _languages = __webpack_require__(491);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display language values provided by iso639-1
*/
var PUBLIC_URL = undefined ? undefined : '';

var LanguageView = /*#__PURE__*/function (_React$Component) {
  _inherits(LanguageView, _React$Component);

  function LanguageView() {
    _classCallCheck(this, LanguageView);

    return _possibleConstructorReturn(this, (LanguageView.__proto__ || Object.getPrototypeOf(LanguageView)).apply(this, arguments));
  }

  _createClass(LanguageView, [{
    key: "getCodefromURI",
    value: function getCodefromURI(uri) {
      if (uri) {
        var tmp = uri.split('/');
        return tmp[tmp.length - 1];
      }

      return uri;
    }
  }, {
    key: "getLanguage",
    value: function getLanguage(code) {
      var o;

      _languages.list.forEach(function (l) {
        if (l.code === code) {
          //o = l.name +'-'+ l.nativeName;
          o = l.name;
          return o;
        }
      });

      return o;
    }
  }, {
    key: "prepareLanguage",
    value: function prepareLanguage(uri) {
      return this.getLanguage(this.getCodefromURI(uri));
    }
  }, {
    key: "render",
    value: function render() {
      var outputDIV, lang;

      if (this.props.spec.valueType === 'uri') {
        lang = this.prepareLanguage(this.props.spec.value);
        outputDIV = _react.default.createElement("a", {
          href: this.props.spec.value,
          target: "_blank",
          itemProp: this.props.property
        }, ' ', lang, ' ');
      } else {
        outputDIV = _react.default.createElement("span", {
          itemProp: this.props.property
        }, ' ', this.props.spec.value, ' ');
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "languageView"
      }, outputDIV);
    }
  }]);

  return LanguageView;
}(_react.default.Component);

LanguageView.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = LanguageView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1477:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _ISO3166_1_alpha = __webpack_require__(1478);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Display the country codes based on ISO3166_1_alpha2.
*/
var PUBLIC_URL = undefined ? undefined : '';

var TwoLetterCountryView = /*#__PURE__*/function (_React$Component) {
  _inherits(TwoLetterCountryView, _React$Component);

  function TwoLetterCountryView() {
    _classCallCheck(this, TwoLetterCountryView);

    return _possibleConstructorReturn(this, (TwoLetterCountryView.__proto__ || Object.getPrototypeOf(TwoLetterCountryView)).apply(this, arguments));
  }

  _createClass(TwoLetterCountryView, [{
    key: "getCountry",
    value: function getCountry(code) {
      if (_ISO3166_1_alpha.list[code]) {
        return _ISO3166_1_alpha.list[code];
      } else {
        return code;
      }
    }
  }, {
    key: "prepareCountry",
    value: function prepareCountry(code) {
      return this.getCountry(code);
    }
  }, {
    key: "render",
    value: function render() {
      var outputDIV, country;
      country = this.prepareCountry(this.props.spec.value);
      outputDIV = _react.default.createElement("a", {
        href: 'http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#' + this.props.spec.value,
        target: "_blank",
        itemProp: this.props.property
      }, ' ', country, ' ');
      return _react.default.createElement("div", {
        className: "ui",
        ref: "twoLetterCountryView"
      }, outputDIV);
    }
  }]);

  return TwoLetterCountryView;
}(_react.default.Component);

TwoLetterCountryView.propTypes = {
  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = TwoLetterCountryView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1478:
/***/ (function(module, exports) {

module.exports = {
  list: {
    BD: 'Bangladesh',
    BE: 'Belgium',
    BF: 'Burkina Faso',
    BG: 'Bulgaria',
    BA: 'Bosnia and Herzegovina',
    BB: 'Barbados',
    WF: 'Wallis and Futuna',
    BL: 'Saint Barthelemy',
    BM: 'Bermuda',
    BN: 'Brunei',
    BO: 'Bolivia',
    BH: 'Bahrain',
    BI: 'Burundi',
    BJ: 'Benin',
    BT: 'Bhutan',
    JM: 'Jamaica',
    BV: 'Bouvet Island',
    BW: 'Botswana',
    WS: 'Samoa',
    BQ: 'Bonaire, Saint Eustatius and Saba ',
    BR: 'Brazil',
    BS: 'Bahamas',
    JE: 'Jersey',
    BY: 'Belarus',
    BZ: 'Belize',
    RU: 'Russia',
    RW: 'Rwanda',
    RS: 'Serbia',
    TL: 'East Timor',
    RE: 'Reunion',
    TM: 'Turkmenistan',
    TJ: 'Tajikistan',
    RO: 'Romania',
    TK: 'Tokelau',
    GW: 'Guinea-Bissau',
    GU: 'Guam',
    GT: 'Guatemala',
    GS: 'South Georgia and the South Sandwich Islands',
    GR: 'Greece',
    GQ: 'Equatorial Guinea',
    GP: 'Guadeloupe',
    JP: 'Japan',
    GY: 'Guyana',
    GG: 'Guernsey',
    GF: 'French Guiana',
    GE: 'Georgia',
    GD: 'Grenada',
    GB: 'United Kingdom',
    GA: 'Gabon',
    SV: 'El Salvador',
    GN: 'Guinea',
    GM: 'Gambia',
    GL: 'Greenland',
    GI: 'Gibraltar',
    GH: 'Ghana',
    OM: 'Oman',
    TN: 'Tunisia',
    JO: 'Jordan',
    HR: 'Croatia',
    HT: 'Haiti',
    HU: 'Hungary',
    HK: 'Hong Kong',
    HN: 'Honduras',
    HM: 'Heard Island and McDonald Islands',
    VE: 'Venezuela',
    PR: 'Puerto Rico',
    PS: 'Palestinian Territory',
    PW: 'Palau',
    PT: 'Portugal',
    SJ: 'Svalbard and Jan Mayen',
    PY: 'Paraguay',
    IQ: 'Iraq',
    PA: 'Panama',
    PF: 'French Polynesia',
    PG: 'Papua New Guinea',
    PE: 'Peru',
    PK: 'Pakistan',
    PH: 'Philippines',
    PN: 'Pitcairn',
    PL: 'Poland',
    PM: 'Saint Pierre and Miquelon',
    ZM: 'Zambia',
    EH: 'Western Sahara',
    EE: 'Estonia',
    EG: 'Egypt',
    ZA: 'South Africa',
    EC: 'Ecuador',
    IT: 'Italy',
    VN: 'Vietnam',
    SB: 'Solomon Islands',
    ET: 'Ethiopia',
    SO: 'Somalia',
    ZW: 'Zimbabwe',
    SA: 'Saudi Arabia',
    ES: 'Spain',
    ER: 'Eritrea',
    ME: 'Montenegro',
    MD: 'Moldova',
    MG: 'Madagascar',
    MF: 'Saint Martin',
    MA: 'Morocco',
    MC: 'Monaco',
    UZ: 'Uzbekistan',
    MM: 'Myanmar',
    ML: 'Mali',
    MO: 'Macao',
    MN: 'Mongolia',
    MH: 'Marshall Islands',
    MK: 'Macedonia',
    MU: 'Mauritius',
    MT: 'Malta',
    MW: 'Malawi',
    MV: 'Maldives',
    MQ: 'Martinique',
    MP: 'Northern Mariana Islands',
    MS: 'Montserrat',
    MR: 'Mauritania',
    IM: 'Isle of Man',
    UG: 'Uganda',
    TZ: 'Tanzania',
    MY: 'Malaysia',
    MX: 'Mexico',
    IL: 'Israel',
    FR: 'France',
    IO: 'British Indian Ocean Territory',
    SH: 'Saint Helena',
    FI: 'Finland',
    FJ: 'Fiji',
    FK: 'Falkland Islands',
    FM: 'Micronesia',
    FO: 'Faroe Islands',
    NI: 'Nicaragua',
    NL: 'Netherlands',
    NO: 'Norway',
    NA: 'Namibia',
    VU: 'Vanuatu',
    NC: 'New Caledonia',
    NE: 'Niger',
    NF: 'Norfolk Island',
    NG: 'Nigeria',
    NZ: 'New Zealand',
    NP: 'Nepal',
    NR: 'Nauru',
    NU: 'Niue',
    CK: 'Cook Islands',
    XK: 'Kosovo',
    CI: 'Ivory Coast',
    CH: 'Switzerland',
    CO: 'Colombia',
    CN: 'China',
    CM: 'Cameroon',
    CL: 'Chile',
    CC: 'Cocos Islands',
    CA: 'Canada',
    CG: 'Republic of the Congo',
    CF: 'Central African Republic',
    CD: 'Democratic Republic of the Congo',
    CZ: 'Czech Republic',
    CY: 'Cyprus',
    CX: 'Christmas Island',
    CR: 'Costa Rica',
    CW: 'Curacao',
    CV: 'Cape Verde',
    CU: 'Cuba',
    SZ: 'Swaziland',
    SY: 'Syria',
    SX: 'Sint Maarten',
    KG: 'Kyrgyzstan',
    KE: 'Kenya',
    SS: 'South Sudan',
    SR: 'Suriname',
    KI: 'Kiribati',
    KH: 'Cambodia',
    KN: 'Saint Kitts and Nevis',
    KM: 'Comoros',
    ST: 'Sao Tome and Principe',
    SK: 'Slovakia',
    KR: 'South Korea',
    SI: 'Slovenia',
    KP: 'North Korea',
    KW: 'Kuwait',
    SN: 'Senegal',
    SM: 'San Marino',
    SL: 'Sierra Leone',
    SC: 'Seychelles',
    KZ: 'Kazakhstan',
    KY: 'Cayman Islands',
    SG: 'Singapore',
    SE: 'Sweden',
    SD: 'Sudan',
    DO: 'Dominican Republic',
    DM: 'Dominica',
    DJ: 'Djibouti',
    DK: 'Denmark',
    VG: 'British Virgin Islands',
    DE: 'Germany',
    YE: 'Yemen',
    DZ: 'Algeria',
    US: 'United States',
    UY: 'Uruguay',
    YT: 'Mayotte',
    UM: 'United States Minor Outlying Islands',
    LB: 'Lebanon',
    LC: 'Saint Lucia',
    LA: 'Laos',
    TV: 'Tuvalu',
    TW: 'Taiwan',
    TT: 'Trinidad and Tobago',
    TR: 'Turkey',
    LK: 'Sri Lanka',
    LI: 'Liechtenstein',
    LV: 'Latvia',
    TO: 'Tonga',
    LT: 'Lithuania',
    LU: 'Luxembourg',
    LR: 'Liberia',
    LS: 'Lesotho',
    TH: 'Thailand',
    TF: 'French Southern Territories',
    TG: 'Togo',
    TD: 'Chad',
    TC: 'Turks and Caicos Islands',
    LY: 'Libya',
    VA: 'Vatican',
    VC: 'Saint Vincent and the Grenadines',
    AE: 'United Arab Emirates',
    AD: 'Andorra',
    AG: 'Antigua and Barbuda',
    AF: 'Afghanistan',
    AI: 'Anguilla',
    VI: 'U.S. Virgin Islands',
    IS: 'Iceland',
    IR: 'Iran',
    AM: 'Armenia',
    AL: 'Albania',
    AO: 'Angola',
    AQ: 'Antarctica',
    AS: 'American Samoa',
    AR: 'Argentina',
    AU: 'Australia',
    AT: 'Austria',
    AW: 'Aruba',
    IN: 'India',
    AX: 'Aland Islands',
    AZ: 'Azerbaijan',
    IE: 'Ireland',
    ID: 'Indonesia',
    UA: 'Ukraine',
    QA: 'Qatar',
    MZ: 'Mozambique'
  }
};

/***/ }),

/***/ 1479:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _ISO3166_1_alpha = __webpack_require__(1480);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Display the country codes based on ISO3166_1_alpha3.
*/
var PUBLIC_URL = undefined ? undefined : '';

var ThreeLetterCountryView = /*#__PURE__*/function (_React$Component) {
  _inherits(ThreeLetterCountryView, _React$Component);

  function ThreeLetterCountryView() {
    _classCallCheck(this, ThreeLetterCountryView);

    return _possibleConstructorReturn(this, (ThreeLetterCountryView.__proto__ || Object.getPrototypeOf(ThreeLetterCountryView)).apply(this, arguments));
  }

  _createClass(ThreeLetterCountryView, [{
    key: "getCountry",
    value: function getCountry(code) {
      if (_ISO3166_1_alpha.list[code]) {
        return _ISO3166_1_alpha.list[code];
      } else {
        return code;
      }
    }
  }, {
    key: "prepareCountry",
    value: function prepareCountry(code) {
      return this.getCountry(code);
    }
  }, {
    key: "render",
    value: function render() {
      var outputDIV, country;
      country = this.prepareCountry(this.props.spec.value);
      outputDIV = _react.default.createElement("a", {
        href: 'http://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#' + this.props.spec.value,
        target: "_blank",
        itemProp: this.props.property
      }, ' ', country, ' ');
      return _react.default.createElement("div", {
        className: "ui",
        ref: "threeLetterCountryView"
      }, outputDIV);
    }
  }]);

  return ThreeLetterCountryView;
}(_react.default.Component);

ThreeLetterCountryView.propTypes = {
  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = ThreeLetterCountryView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1480:
/***/ (function(module, exports) {

module.exports = {
  list: {
    AFG: 'Afghanistan',
    ALA: 'Åland Islands',
    ALB: 'Albania',
    DZA: 'Algeria',
    ASM: 'American Samoa',
    AND: 'Andorra',
    AGO: 'Angola',
    AIA: 'Anguilla',
    ATA: 'Antarctica',
    ATG: 'Antigua and Barbuda',
    ARG: 'Argentina',
    ARM: 'Armenia',
    ABW: 'Aruba',
    AUS: 'Australia',
    AUT: 'Austria',
    AZE: 'Azerbaijan',
    BHS: 'Bahamas',
    BHR: 'Bahrain',
    BGD: 'Bangladesh',
    BRB: 'Barbados',
    BLR: 'Belarus',
    BEL: 'Belgium',
    BLZ: 'Belize',
    BEN: 'Benin',
    BMU: 'Bermuda',
    BTN: 'Bhutan',
    BOL: 'Bolivia (Plurinational State of)',
    BES: 'Bonaire, Sint Eustatius and Saba',
    BIH: 'Bosnia and Herzegovina',
    BWA: 'Botswana',
    BVT: 'Bouvet Island',
    BRA: 'Brazil',
    IOT: 'British Indian Ocean Territory',
    BRN: 'Brunei Darussalam',
    BGR: 'Bulgaria',
    BFA: 'Burkina Faso',
    BDI: 'Burundi',
    KHM: 'Cambodia',
    CMR: 'Cameroon',
    CAN: 'Canada',
    CPV: 'Cabo Verde',
    CYM: 'Cayman Islands',
    CAF: 'Central African Republic',
    TCD: 'Chad',
    CHL: 'Chile',
    CHN: 'China',
    CXR: 'Christmas Island',
    CCK: 'Cocos (Keeling) Islands',
    COL: 'Colombia',
    COM: 'Comoros',
    COG: 'Congo',
    COD: 'Congo (Democratic Republic of the)',
    COK: 'Cook Islands',
    CRI: 'Costa Rica',
    CIV: 'Côte d\'Ivoire',
    HRV: 'Croatia',
    CUB: 'Cuba',
    CUW: 'Curaçao',
    CYP: 'Cyprus',
    CZE: 'Czech Republic',
    DNK: 'Denmark',
    DJI: 'Djibouti',
    DMA: 'Dominica',
    DOM: 'Dominican Republic',
    ECU: 'Ecuador',
    EGY: 'Egypt',
    SLV: 'El Salvador',
    GNQ: 'Equatorial Guinea',
    ERI: 'Eritrea',
    EST: 'Estonia',
    ETH: 'Ethiopia',
    FLK: 'Falkland Islands (Malvinas)',
    FRO: 'Faroe Islands',
    FJI: 'Fiji',
    FIN: 'Finland',
    FRA: 'France',
    GUF: 'French Guiana',
    PYF: 'French Polynesia',
    ATF: 'French Southern Territories',
    GAB: 'Gabon',
    GMB: 'Gambia',
    GEO: 'Georgia',
    DEU: 'Germany',
    GHA: 'Ghana',
    GIB: 'Gibraltar',
    GRC: 'Greece',
    GRL: 'Greenland',
    GRD: 'Grenada',
    GLP: 'Guadeloupe',
    GUM: 'Guam',
    GTM: 'Guatemala',
    GGY: 'Guernsey',
    GIN: 'Guinea',
    GNB: 'Guinea-Bissau',
    GUY: 'Guyana',
    HTI: 'Haiti',
    HMD: 'Heard Island and McDonald Islands',
    VAT: 'Holy See',
    HND: 'Honduras',
    HKG: 'Hong Kong',
    HUN: 'Hungary',
    ISL: 'Iceland',
    IND: 'India',
    IDN: 'Indonesia',
    IRN: 'Iran (Islamic Republic of)',
    IRQ: 'Iraq',
    IRL: 'Ireland',
    IMN: 'Isle of Man',
    ISR: 'Israel',
    ITA: 'Italy',
    JAM: 'Jamaica',
    JPN: 'Japan',
    JEY: 'Jersey',
    JOR: 'Jordan',
    KAZ: 'Kazakhstan',
    KEN: 'Kenya',
    KIR: 'Kiribati',
    PRK: 'Korea (Democratic People\'s Republic of)',
    KOR: 'Korea (Republic of)',
    KWT: 'Kuwait',
    KGZ: 'Kyrgyzstan',
    LAO: 'Lao People\'s Democratic Republic',
    LVA: 'Latvia',
    LBN: 'Lebanon',
    LSO: 'Lesotho',
    LBR: 'Liberia',
    LBY: 'Libya',
    LIE: 'Liechtenstein',
    LTU: 'Lithuania',
    LUX: 'Luxembourg',
    MAC: 'Macao',
    MKD: 'Macedonia (the former Yugoslav Republic of)',
    MDG: 'Madagascar',
    MWI: 'Malawi',
    MYS: 'Malaysia',
    MDV: 'Maldives',
    MLI: 'Mali',
    MLT: 'Malta',
    MHL: 'Marshall Islands',
    MTQ: 'Martinique',
    MRT: 'Mauritania',
    MUS: 'Mauritius',
    MYT: 'Mayotte',
    MEX: 'Mexico',
    FSM: 'Micronesia (Federated States of)',
    MDA: 'Moldova (Republic of)',
    MCO: 'Monaco',
    MNG: 'Mongolia',
    MNE: 'Montenegro',
    MSR: 'Montserrat',
    MAR: 'Morocco',
    MOZ: 'Mozambique',
    MMR: 'Myanmar',
    NAM: 'Namibia',
    NRU: 'Nauru',
    NPL: 'Nepal',
    NLD: 'Netherlands',
    NCL: 'New Caledonia',
    NZL: 'New Zealand',
    NIC: 'Nicaragua',
    NER: 'Niger',
    NGA: 'Nigeria',
    NIU: 'Niue',
    NFK: 'Norfolk Island',
    MNP: 'Northern Mariana Islands',
    NOR: 'Norway',
    OMN: 'Oman',
    PAK: 'Pakistan',
    PLW: 'Palau',
    PSE: 'Palestine, State of',
    PAN: 'Panama',
    PNG: 'Papua New Guinea',
    PRY: 'Paraguay',
    PER: 'Peru',
    PHL: 'Philippines',
    PCN: 'Pitcairn',
    POL: 'Poland',
    PRT: 'Portugal',
    PRI: 'Puerto Rico',
    QAT: 'Qatar',
    REU: 'Réunion',
    ROU: 'Romania',
    RUS: 'Russian Federation',
    RWA: 'Rwanda',
    BLM: 'Saint Barthélemy',
    SHN: 'Saint Helena, Ascension and Tristan da Cunha',
    KNA: 'Saint Kitts and Nevis',
    LCA: 'Saint Lucia',
    MAF: 'Saint Martin (French part)',
    SPM: 'Saint Pierre and Miquelon',
    VCT: 'Saint Vincent and the Grenadines',
    WSM: 'Samoa',
    SMR: 'San Marino',
    STP: 'Sao Tome and Principe',
    SAU: 'Saudi Arabia',
    SEN: 'Senegal',
    SRB: 'Serbia',
    SYC: 'Seychelles',
    SLE: 'Sierra Leone',
    SGP: 'Singapore',
    SXM: 'Sint Maarten (Dutch part)',
    SVK: 'Slovakia',
    SVN: 'Slovenia',
    SLB: 'Solomon Islands',
    SOM: 'Somalia',
    ZAF: 'South Africa',
    SGS: 'South Georgia and the South Sandwich Islands',
    SSD: 'South Sudan',
    ESP: 'Spain',
    LKA: 'Sri Lanka',
    SDN: 'Sudan',
    SUR: 'Suriname',
    SJM: 'Svalbard and Jan Mayen',
    SWZ: 'Swaziland',
    SWE: 'Sweden',
    CHE: 'Switzerland',
    SYR: 'Syrian Arab Republic',
    TWN: 'Taiwan, Province of China',
    TJK: 'Tajikistan',
    TZA: 'Tanzania, United Republic of',
    THA: 'Thailand',
    TLS: 'Timor-Leste',
    TGO: 'Togo',
    TKL: 'Tokelau',
    TON: 'Tonga',
    TTO: 'Trinidad and Tobago',
    TUN: 'Tunisia',
    TUR: 'Turkey',
    TKM: 'Turkmenistan',
    TCA: 'Turks and Caicos Islands',
    TUV: 'Tuvalu',
    UGA: 'Uganda',
    UKR: 'Ukraine',
    ARE: 'United Arab Emirates',
    GBR: 'United Kingdom of Great Britain and Northern Ireland',
    USA: 'United States of America',
    UMI: 'United States Minor Outlying Islands',
    URY: 'Uruguay',
    UZB: 'Uzbekistan',
    VUT: 'Vanuatu',
    VEN: 'Venezuela (Bolivarian Republic of)',
    VNM: 'Viet Nam',
    VGB: 'Virgin Islands (British)',
    VIR: 'Virgin Islands (U.S.)',
    WLF: 'Wallis and Futuna',
    ESH: 'Western Sahara',
    YEM: 'Yemen',
    ZMB: 'Zambia',
    ZWE: 'Zimbabwe'
  }
};

/***/ }),

/***/ 1481:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _moment = _interopRequireDefault(__webpack_require__(7));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Displays Date/Time values in different formats.
*/
var BasicDateTimeView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicDateTimeView, _React$Component);

  function BasicDateTimeView() {
    _classCallCheck(this, BasicDateTimeView);

    return _possibleConstructorReturn(this, (BasicDateTimeView.__proto__ || Object.getPrototypeOf(BasicDateTimeView)).apply(this, arguments));
  }

  _createClass(BasicDateTimeView, [{
    key: "getFormat",
    value: function getFormat() {
      //default format
      var format = 'YYYY-MM-DD HH:mm:ss Z';

      if (this.props.config && this.props.config.dateTimeFormat) {
        format = this.props.config.dateTimeFormat;
      }

      if (this.props.dateTimeFormat) {
        format = this.props.dateTimeFormat;
      }

      return format;
    }
  }, {
    key: "render",
    value: function render() {
      var val;
      val = this.props.spec.value;
      val = (0, _moment.default)(val).format(this.getFormat());
      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicDateTimeView",
        itemProp: this.props.property
      }, val);
    }
  }]);

  return BasicDateTimeView;
}(_react.default.Component);

BasicDateTimeView.propTypes = {
  /**
  Date/Time format e.g. YYYY-MM-DD HH:mm:ss
  */
  dateTimeFormat: _propTypes.default.string,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicDateTimeView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1482:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 709,
	"./af.js": 709,
	"./ar": 710,
	"./ar-dz": 711,
	"./ar-dz.js": 711,
	"./ar-kw": 712,
	"./ar-kw.js": 712,
	"./ar-ly": 713,
	"./ar-ly.js": 713,
	"./ar-ma": 714,
	"./ar-ma.js": 714,
	"./ar-sa": 715,
	"./ar-sa.js": 715,
	"./ar-tn": 716,
	"./ar-tn.js": 716,
	"./ar.js": 710,
	"./az": 717,
	"./az.js": 717,
	"./be": 718,
	"./be.js": 718,
	"./bg": 719,
	"./bg.js": 719,
	"./bm": 720,
	"./bm.js": 720,
	"./bn": 721,
	"./bn-bd": 722,
	"./bn-bd.js": 722,
	"./bn.js": 721,
	"./bo": 723,
	"./bo.js": 723,
	"./br": 724,
	"./br.js": 724,
	"./bs": 725,
	"./bs.js": 725,
	"./ca": 726,
	"./ca.js": 726,
	"./cs": 727,
	"./cs.js": 727,
	"./cv": 728,
	"./cv.js": 728,
	"./cy": 729,
	"./cy.js": 729,
	"./da": 730,
	"./da.js": 730,
	"./de": 731,
	"./de-at": 732,
	"./de-at.js": 732,
	"./de-ch": 733,
	"./de-ch.js": 733,
	"./de.js": 731,
	"./dv": 734,
	"./dv.js": 734,
	"./el": 735,
	"./el.js": 735,
	"./en-au": 736,
	"./en-au.js": 736,
	"./en-ca": 737,
	"./en-ca.js": 737,
	"./en-gb": 738,
	"./en-gb.js": 738,
	"./en-ie": 739,
	"./en-ie.js": 739,
	"./en-il": 740,
	"./en-il.js": 740,
	"./en-in": 741,
	"./en-in.js": 741,
	"./en-nz": 742,
	"./en-nz.js": 742,
	"./en-sg": 743,
	"./en-sg.js": 743,
	"./eo": 744,
	"./eo.js": 744,
	"./es": 745,
	"./es-do": 746,
	"./es-do.js": 746,
	"./es-mx": 747,
	"./es-mx.js": 747,
	"./es-us": 748,
	"./es-us.js": 748,
	"./es.js": 745,
	"./et": 749,
	"./et.js": 749,
	"./eu": 750,
	"./eu.js": 750,
	"./fa": 751,
	"./fa.js": 751,
	"./fi": 752,
	"./fi.js": 752,
	"./fil": 753,
	"./fil.js": 753,
	"./fo": 754,
	"./fo.js": 754,
	"./fr": 755,
	"./fr-ca": 756,
	"./fr-ca.js": 756,
	"./fr-ch": 757,
	"./fr-ch.js": 757,
	"./fr.js": 755,
	"./fy": 758,
	"./fy.js": 758,
	"./ga": 759,
	"./ga.js": 759,
	"./gd": 760,
	"./gd.js": 760,
	"./gl": 761,
	"./gl.js": 761,
	"./gom-deva": 762,
	"./gom-deva.js": 762,
	"./gom-latn": 763,
	"./gom-latn.js": 763,
	"./gu": 764,
	"./gu.js": 764,
	"./he": 765,
	"./he.js": 765,
	"./hi": 766,
	"./hi.js": 766,
	"./hr": 767,
	"./hr.js": 767,
	"./hu": 768,
	"./hu.js": 768,
	"./hy-am": 769,
	"./hy-am.js": 769,
	"./id": 770,
	"./id.js": 770,
	"./is": 771,
	"./is.js": 771,
	"./it": 772,
	"./it-ch": 773,
	"./it-ch.js": 773,
	"./it.js": 772,
	"./ja": 774,
	"./ja.js": 774,
	"./jv": 775,
	"./jv.js": 775,
	"./ka": 776,
	"./ka.js": 776,
	"./kk": 777,
	"./kk.js": 777,
	"./km": 778,
	"./km.js": 778,
	"./kn": 779,
	"./kn.js": 779,
	"./ko": 780,
	"./ko.js": 780,
	"./ku": 781,
	"./ku.js": 781,
	"./ky": 782,
	"./ky.js": 782,
	"./lb": 783,
	"./lb.js": 783,
	"./lo": 784,
	"./lo.js": 784,
	"./lt": 785,
	"./lt.js": 785,
	"./lv": 786,
	"./lv.js": 786,
	"./me": 787,
	"./me.js": 787,
	"./mi": 788,
	"./mi.js": 788,
	"./mk": 789,
	"./mk.js": 789,
	"./ml": 790,
	"./ml.js": 790,
	"./mn": 791,
	"./mn.js": 791,
	"./mr": 792,
	"./mr.js": 792,
	"./ms": 793,
	"./ms-my": 794,
	"./ms-my.js": 794,
	"./ms.js": 793,
	"./mt": 795,
	"./mt.js": 795,
	"./my": 796,
	"./my.js": 796,
	"./nb": 797,
	"./nb.js": 797,
	"./ne": 798,
	"./ne.js": 798,
	"./nl": 799,
	"./nl-be": 800,
	"./nl-be.js": 800,
	"./nl.js": 799,
	"./nn": 801,
	"./nn.js": 801,
	"./oc-lnc": 802,
	"./oc-lnc.js": 802,
	"./pa-in": 803,
	"./pa-in.js": 803,
	"./pl": 804,
	"./pl.js": 804,
	"./pt": 805,
	"./pt-br": 806,
	"./pt-br.js": 806,
	"./pt.js": 805,
	"./ro": 807,
	"./ro.js": 807,
	"./ru": 808,
	"./ru.js": 808,
	"./sd": 809,
	"./sd.js": 809,
	"./se": 810,
	"./se.js": 810,
	"./si": 811,
	"./si.js": 811,
	"./sk": 812,
	"./sk.js": 812,
	"./sl": 813,
	"./sl.js": 813,
	"./sq": 814,
	"./sq.js": 814,
	"./sr": 815,
	"./sr-cyrl": 816,
	"./sr-cyrl.js": 816,
	"./sr.js": 815,
	"./ss": 817,
	"./ss.js": 817,
	"./sv": 818,
	"./sv.js": 818,
	"./sw": 819,
	"./sw.js": 819,
	"./ta": 820,
	"./ta.js": 820,
	"./te": 821,
	"./te.js": 821,
	"./tet": 822,
	"./tet.js": 822,
	"./tg": 823,
	"./tg.js": 823,
	"./th": 824,
	"./th.js": 824,
	"./tk": 825,
	"./tk.js": 825,
	"./tl-ph": 826,
	"./tl-ph.js": 826,
	"./tlh": 827,
	"./tlh.js": 827,
	"./tr": 828,
	"./tr.js": 828,
	"./tzl": 829,
	"./tzl.js": 829,
	"./tzm": 830,
	"./tzm-latn": 831,
	"./tzm-latn.js": 831,
	"./tzm.js": 830,
	"./ug-cn": 832,
	"./ug-cn.js": 832,
	"./uk": 833,
	"./uk.js": 833,
	"./ur": 834,
	"./ur.js": 834,
	"./uz": 835,
	"./uz-latn": 836,
	"./uz-latn.js": 836,
	"./uz.js": 835,
	"./vi": 837,
	"./vi.js": 837,
	"./x-pseudo": 838,
	"./x-pseudo.js": 838,
	"./yo": 839,
	"./yo.js": 839,
	"./zh-cn": 840,
	"./zh-cn.js": 840,
	"./zh-hk": 841,
	"./zh-hk.js": 841,
	"./zh-mo": 842,
	"./zh-mo.js": 842,
	"./zh-tw": 843,
	"./zh-tw.js": 843
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 1482;

/***/ }),

/***/ 1483:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _semanticUiReact = __webpack_require__(69);

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _moment = _interopRequireDefault(__webpack_require__(7));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Displays Date/Time values in different formats.
*/
var CustomDateTimeView = /*#__PURE__*/function (_React$Component) {
  _inherits(CustomDateTimeView, _React$Component);

  function CustomDateTimeView() {
    _classCallCheck(this, CustomDateTimeView);

    return _possibleConstructorReturn(this, (CustomDateTimeView.__proto__ || Object.getPrototypeOf(CustomDateTimeView)).apply(this, arguments));
  }

  _createClass(CustomDateTimeView, [{
    key: "getFormat",
    value: function getFormat() {
      //default format
      var format = "YYYY";

      if (this.props.config && this.props.config.dateTimeFormat) {
        format = this.props.config.dateTimeFormat;
      }

      if (this.props.dateTimeFormat) {
        format = this.props.dateTimeFormat;
      }

      return format;
    }
  }, {
    key: "render",
    value: function render() {
      var val;
      val = this.props.spec.value;
      val = (0, _moment.default)(val).format(this.getFormat());
      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicDateTimeView",
        itemProp: this.props.property
      }, _react.default.createElement(_semanticUiReact.Icon, {
        name: "time"
      }), val);
    }
  }]);

  return CustomDateTimeView;
}(_react.default.Component);

CustomDateTimeView.propTypes = {
  /**
  Date/Time format e.g. YYYY-MM-DD HH:mm:ss
  */
  dateTimeFormat: _propTypes.default.string,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = CustomDateTimeView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1484:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Display on and off switch for boolean object values
*/
var ToggleView = /*#__PURE__*/function (_React$Component) {
  _inherits(ToggleView, _React$Component);

  function ToggleView() {
    _classCallCheck(this, ToggleView);

    return _possibleConstructorReturn(this, (ToggleView.__proto__ || Object.getPrototypeOf(ToggleView)).apply(this, arguments));
  }

  _createClass(ToggleView, [{
    key: "render",
    value: function render() {
      var val;
      var onValue = '1';
      var offValue = '0';

      if (this.props.config) {
        if (this.props.config.onValue) {
          onValue = this.props.config.onValue;
        }

        if (this.props.onValue) {
          onValue = this.props.onValue;
        }

        if (this.props.config.offValue) {
          offValue = this.props.config.offValue;
        }

        if (this.props.offValue) {
          offValue = this.props.offValue;
        }
      }

      val = this.props.spec.value;
      return _react.default.createElement("div", {
        ref: "toggleView",
        itemProp: this.props.property
      }, String(val) !== String(onValue) ? val : '', _react.default.createElement("div", {
        className: "ui fitted toggle read-only checkbox",
        title: val
      }, _react.default.createElement("input", {
        type: "checkbox",
        defaultChecked: String(val) === String(onValue)
      }), _react.default.createElement("label", null, val)), String(val) === String(onValue) ? val : '');
    }
  }]);

  return ToggleView;
}(_react.default.Component);

ToggleView.propTypes = {
  /**
  Value on on (checked) mode
  */
  onValue: _propTypes.default.string,

  /**
  value on off (unchecked) mode
  */
  offValue: _propTypes.default.string,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = ToggleView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1485:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _wicket = _interopRequireDefault(__webpack_require__(845));

var _LeafletMapView = _interopRequireDefault(__webpack_require__(492));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display geo coordinates (POINT or Polygons) on Map
*/
var BasicMapView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicMapView, _React$Component);

  function BasicMapView() {
    _classCallCheck(this, BasicMapView);

    return _possibleConstructorReturn(this, (BasicMapView.__proto__ || Object.getPrototypeOf(BasicMapView)).apply(this, arguments));
  }

  _createClass(BasicMapView, [{
    key: "getFocusPoint",
    value: function getFocusPoint(val, components) {
      var focusPoint = {
        lat: 52.379189,
        lng: 4.899431
      };

      if (val.indexOf('MULTIPOLYGON') !== -1 || val.indexOf('MultiPolygon') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0][0][0].y),
          lng: parseFloat(components[0][0][0].x)
        };
      } else if (val.indexOf('POLYGON') !== -1 || val.indexOf('Polygon') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0][0].y),
          lng: parseFloat(components[0][0].x)
        };

        if (!focusPoint.lat || isNaN(focusPoint.lat) || !focusPoint.lng || isNaN(focusPoint.lng)) {
          focusPoint = {
            lat: parseFloat(components[0][1].y),
            lng: parseFloat(components[0][1].x)
          };
        }
      } else if (val.indexOf('MULTILINESTRING') !== -1 || val.indexOf('MultiLineString') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0][0].y),
          lng: parseFloat(components[0][0].x)
        };
      } else if (val.indexOf('LINESTRING') !== -1 || val.indexOf('LineString') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0].y),
          lng: parseFloat(components[0].x)
        };
      }

      return focusPoint;
    }
  }, {
    key: "render",
    value: function render() {
      var val,
          outputDIV,
          coordinates,
          long,
          lat,
          shapeColor = '#1a75ff';
      val = this.props.spec.value;
      var zoomLevel = 14;
      var simplifyPolyLines, simplifyTolerance, simplifyHighQuality;

      if (this.props.config && this.props.config.zoomLevel) {
        zoomLevel = this.props.config.zoomLevel;
      }

      if (this.props.config && this.props.config.shapeColor) {
        shapeColor = this.props.config.shapeColor;
      }

      var mapHeight, mapWidth;

      if (this.props.config) {
        if (this.props.config.mapHeight) {
          mapHeight = this.props.config.mapHeight;
        }

        if (this.props.config.mapWidth) {
          mapWidth = this.props.config.mapWidth;
        }
      }

      outputDIV = _react.default.createElement("span", null, " ", val, " "); //identify the type of geo shape

      if (val.indexOf('POLYGON') !== -1 || val.indexOf('Polygon') !== -1 || val.indexOf('MULTIPOLYGON') !== -1 || val.indexOf('MultiPolygon') !== -1 || val.indexOf('LineString') !== -1 || val.indexOf('MultiLineString') !== -1) {
        var wkt = new _wicket.default.Wkt();
        wkt.read(val);

        if (wkt.components && wkt.components.length && wkt.components[0].length) {
          zoomLevel = 7;

          if (this.props.config && this.props.config.zoomLevel) {
            zoomLevel = this.props.config.zoomLevel;
          }

          if (this.props.zoomLevel) {
            zoomLevel = this.props.zoomLevel;
          }

          if (this.props.config) {
            if (this.props.config.simplifyPolyLines) {
              simplifyPolyLines = this.props.config.simplifyPolyLines;
            }

            if (this.props.config.simplifyTolerance) {
              simplifyTolerance = this.props.config.simplifyTolerance;
            }

            if (this.props.config.simplifyHighQuality) {
              simplifyHighQuality = this.props.config.simplifyHighQuality;
            }
          }

          if (this.props.simplifyPolyLines) {
            simplifyPolyLines = this.props.simplifyPolyLines;
          }

          if (this.props.simplifyTolerance) {
            simplifyTolerance = this.props.simplifyTolerance;
          }

          if (this.props.simplifyHighQuality) {
            simplifyHighQuality = this.props.simplifyHighQuality;
          }

          try {
            var focusPoint = this.getFocusPoint(val, wkt.components);
            outputDIV = _react.default.createElement(_LeafletMapView.default, {
              key: 'shape',
              mapWidth: mapWidth,
              mapHeight: mapHeight,
              geometry: [wkt.toJson()],
              zoomLevel: zoomLevel,
              center: focusPoint,
              styles: {
                color: shapeColor,
                fill: true,
                fillOpacity: 0.25,
                opacity: 1,
                weight: 3,
                fillColor: shapeColor
              },
              simplifyPolyLines: simplifyPolyLines,
              simplifyHighQuality: simplifyHighQuality,
              simplifyTolerance: simplifyTolerance
            });
          } catch (err) {
            console.log(err.message);
            outputDIV = _react.default.createElement("span", null, " ", val, " ");
          }
        }
      } else {
        if (this.props.zoomLevel) {
          zoomLevel = this.props.zoomLevel;
        } //default is a POINT


        if (val.indexOf('POINT') === -1) {
          //WKN point
          coordinates = val.split(' ');
          coordinates = [coordinates[1], coordinates[0]];
        } else {
          //non-WKN point
          val = val.replace('POINT(', '').replace(')', '');
          coordinates = val.split(' ');
        }

        try {
          long = parseFloat(coordinates[0]);
          lat = parseFloat(coordinates[1]);

          if (this.props.config && this.props.config.swapLongLat || this.props.swapLongLat) {
            long = parseFloat(coordinates[1]);
            lat = parseFloat(coordinates[0]);
          }

          if (isNaN(long) || isNaN(lat)) {
            outputDIV = _react.default.createElement("span", null, " ", val, " ");
          } else {
            if (coordinates.length) {
              outputDIV = _react.default.createElement(_LeafletMapView.default, {
                key: this.props.spec.value,
                mapWidth: mapWidth,
                mapHeight: mapHeight,
                markers: [{
                  position: {
                    lat: lat,
                    lng: long
                  },
                  key: this.props.spec.value
                }],
                zoomLevel: zoomLevel,
                center: {
                  lat: lat,
                  lng: long
                }
              });
            }
          }
        } catch (err) {
          console.log(err.message);
          outputDIV = _react.default.createElement("span", null, " ", val, " ");
        }
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicMapView",
        itemProp: this.props.property
      }, outputDIV);
    }
  }]);

  return BasicMapView;
}(_react.default.Component);

BasicMapView.propTypes = {
  /**
  Height of the Map
  */
  mapHeight: _propTypes.default.number,

  /**
  Width of the Map
  */
  mapWidth: _propTypes.default.number,

  /**
  Used to customize the color of shape on the map
  */
  shapeColor: _propTypes.default.string,

  /**
  Swap longitude and latitudes: default is POINT(long lat)
  */
  swapLongLat: _propTypes.default.bool,

  /**
  Default level of zoom on the map
  */
  zoomLevel: _propTypes.default.number,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicMapView;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1488:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _reactMarkdown = _interopRequireDefault(__webpack_require__(1489));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
The component to display Markdown values
*/
var MarkdownView = /*#__PURE__*/function (_React$Component) {
  _inherits(MarkdownView, _React$Component);

  function MarkdownView() {
    _classCallCheck(this, MarkdownView);

    return _possibleConstructorReturn(this, (MarkdownView.__proto__ || Object.getPrototypeOf(MarkdownView)).apply(this, arguments));
  }

  _createClass(MarkdownView, [{
    key: "render",
    value: function render() {
      var val, outputDIV;
      val = this.props.spec.value;

      if (this.props.config) {
        if (this.props.config.decodeURIComponent || this.props.decodeURIComponent) {
          val = decodeURIComponent(val);
        }
      }

      outputDIV = _react.default.createElement(_reactMarkdown.default, {
        itemProp: this.props.property,
        source: val
      });
      return _react.default.createElement("div", {
        className: "ui",
        ref: "markdownView"
      }, outputDIV);
    }
  }]);

  return MarkdownView;
}(_react.default.Component);

MarkdownView.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = MarkdownView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1568:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TagListBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(TagListBrowser, _React$Component);

  function TagListBrowser(props) {
    _classCallCheck(this, TagListBrowser);

    return _possibleConstructorReturn(this, (TagListBrowser.__proto__ || Object.getPrototypeOf(TagListBrowser)).call(this, props));
  }

  _createClass(TagListBrowser, [{
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (this.props.selection[this.props.propertyURI]) {
        this.props.selection[this.props.propertyURI].forEach(function (node) {
          selected.push(node.value);
        });
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectTag",
    value: function selectTag(value) {
      if (this.doesExist(value)) {
        this.props.onCheck(0, value);
      } else {
        this.props.onCheck(1, value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var self = this;
      var title,
          cls,
          selected = 0;
      var tagsDIV = self.props.instances.map(function (node, index) {
        if (self.doesExist(node.value)) {
          selected = 1;
          cls = 'ui label blue';
        } else {
          selected = 0;
          cls = 'ui label basic';
        }

        title = node.value;

        if (node.label) {
          title = node.label;
        } else if (_this.props.shortenURI && !(_this.props.config && _this.props.config.shortenURI === 0)) {
          title = _URIUtil.default.getURILabel(title);
        }

        return _react.default.createElement("a", {
          style: {
            marginTop: 1
          },
          key: index,
          className: cls,
          onClick: self.selectTag.bind(_this, node.value)
        }, title, ' ', _react.default.createElement("span", {
          className: "ui small blue circular label"
        }, node.total));
      });
      return _react.default.createElement("div", {
        className: "ui",
        ref: "tagListBrowser"
      }, tagsDIV);
    }
  }]);

  return TagListBrowser;
}(_react.default.Component);

var _default = TagListBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1569:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _CheckboxItem = _interopRequireDefault(__webpack_require__(708));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var CheckListBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(CheckListBrowser, _React$Component);

  function CheckListBrowser(props) {
    var _this;

    _classCallCheck(this, CheckListBrowser);

    _this = _possibleConstructorReturn(this, (CheckListBrowser.__proto__ || Object.getPrototypeOf(CheckListBrowser)).call(this, props));
    _this.state = {
      selected: []
    };
    return _this;
  }

  _createClass(CheckListBrowser, [{
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (!this.props.propertyURI) {
        for (var prop in this.props.selection) {
          selected.push(prop);
        }
      } else {
        if (this.props.selection[this.props.propertyURI]) {
          this.props.selection[this.props.propertyURI].forEach(function (node) {
            selected.push(node.value);
          });
        }
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "handleSelect",
    value: function handleSelect(status, value) {
      if (this.doesExist(value)) {
        this.props.onCheck(0, value);
      } else {
        this.props.onCheck(1, value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var checkDIV = self.props.instances.map(function (node, index) {
        var _React$createElement;

        return _react.default.createElement(_CheckboxItem.default, (_React$createElement = {
          checked: self.doesExist(node.value),
          key: index,
          datasetURI: self.props.datasetURI,
          shortenURI: self.props.shortenURI
        }, _defineProperty(_React$createElement, "key", index), _defineProperty(_React$createElement, "spec", node), _defineProperty(_React$createElement, "config", self.props.config), _defineProperty(_React$createElement, "total", self.props.propertyURI ? node.total : 0), _defineProperty(_React$createElement, "onCheck", self.handleSelect.bind(self)), _React$createElement));
      });
      return _react.default.createElement("div", {
        className: "ui",
        ref: "checkListBrowser"
      }, checkDIV);
    }
  }]);

  return CheckListBrowser;
}(_react.default.Component);

var _default = CheckListBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1570:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _BasicAggregateMapView = _interopRequireDefault(__webpack_require__(498));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var GeoListBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(GeoListBrowser, _React$Component);

  function GeoListBrowser(props) {
    _classCallCheck(this, GeoListBrowser);

    return _possibleConstructorReturn(this, (GeoListBrowser.__proto__ || Object.getPrototypeOf(GeoListBrowser)).call(this, props));
  }

  _createClass(GeoListBrowser, [{
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (!this.props.propertyURI) {
        for (var prop in this.props.selection) {
          selected.push(prop);
        }
      } else {
        if (this.props.selection[this.props.propertyURI]) {
          this.props.selection[this.props.propertyURI].forEach(function (node) {
            selected.push(node.value);
          });
        }
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectItem",
    value: function selectItem(value) {
      if (this.doesExist(value)) {
        this.props.onCheck(0, value);
      } else {
        this.props.onCheck(1, value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var cnf = this.props.config;

      if (!cnf.mapHeight) {
        cnf.mapHeight = 500;
      }

      if (!cnf.mapWidth) {
        cnf.mapWidth = 500;
      }

      if (!cnf.zoomLevel) {
        cnf.zoomLevel = 6;
      }

      var totalVals = 0;
      var instances = this.props.instances;
      this.props.instances.forEach(function (instance) {
        totalVals = totalVals + parseInt(instance.total);
      });
      var tmp = 1;
      this.props.instances.forEach(function (instance, i) {
        tmp = parseInt(instance.total) / totalVals;
        instances[i].weight = tmp;
        instances[i].hint = 'value: ' + instance.total + '</br> percentage: ' + tmp;
      });
      var mapWidth = 180;
      var mapHeight = 180;

      if (this.props.expanded) {
        mapWidth = 470;
        mapHeight = 540;
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "geoListBrowser"
      }, this.props.instances.length > 5500 ? 'Error: Maximum 5500 geo items can be shown!' : _react.default.createElement(_BasicAggregateMapView.default, {
        mapWidth: mapWidth,
        mapHeight: mapHeight,
        spec: {
          instances: instances
        },
        config: cnf
      }));
    }
  }]);

  return GeoListBrowser;
}(_react.default.Component);

var _default = GeoListBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1571:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _recharts = __webpack_require__(207);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BarChartBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(BarChartBrowser, _React$Component);

  function BarChartBrowser(props) {
    _classCallCheck(this, BarChartBrowser);

    return _possibleConstructorReturn(this, (BarChartBrowser.__proto__ || Object.getPrototypeOf(BarChartBrowser)).call(this, props));
  }

  _createClass(BarChartBrowser, [{
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (!this.props.propertyURI) {
        for (var prop in this.props.selection) {
          selected.push(prop);
        }
      } else {
        if (this.props.selection[this.props.propertyURI]) {
          this.props.selection[this.props.propertyURI].forEach(function (node) {
            selected.push(node.value);
          });
        }
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectItem",
    value: function selectItem(data, index) {
      if (this.doesExist(data.ovalue)) {
        this.props.onCheck(0, data.ovalue);
      } else {
        this.props.onCheck(1, data.ovalue);
      }
    }
  }, {
    key: "comparePropsFloat",
    value: function comparePropsFloat(a, b) {
      if (Number(a.title) < Number(b.title)) return -1;
      if (Number(a.title) > Number(b.title)) return 1;
      return 0;
    }
  }, {
    key: "comparePropsString",
    value: function comparePropsString(a, b) {
      if (a.title < b.title) return -1;
      if (a.title > b.title) return 1;
      return 0;
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var data = [];
      var title;
      self.props.instances.forEach(function (node) {
        title = node.value;

        if (self.props.shortenURI && !(self.props.config && self.props.config.shortenURI === 0)) {
          title = _URIUtil.default.getURILabel(title);
        }

        data.push({
          ovalue: node.value,
          title: title,
          total: Number(node.total),
          isSelected: self.doesExist(node.value)
        });
      });

      if (self.props.config && self.props.config.hasNumericValues) {
        data.sort(this.comparePropsFloat);
      } else {
        data.sort(this.comparePropsString);
      } //todo: change width/height on expansion


      var width = 230;
      var height = 180;

      if (this.props.expanded) {
        width = 470;
        height = 540;
      }

      return _react.default.createElement("div", null, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "97%",
        height: height
      }, _react.default.createElement(_recharts.BarChart, {
        data: data,
        margin: {
          top: 0,
          right: 10,
          left: 0,
          bottom: 0
        }
      }, _react.default.createElement(_recharts.XAxis, {
        dataKey: "title"
      }), _react.default.createElement(_recharts.YAxis, null), _react.default.createElement(_recharts.Tooltip, null), _react.default.createElement(_recharts.Bar, {
        dataKey: "total",
        fill: "#1a75ff",
        onClick: this.selectItem.bind(this)
      }, data.map(function (entry, index) {
        return _react.default.createElement(_recharts.Cell, {
          cursor: "pointer",
          fill: entry.isSelected ? '#82ca9d' : '#1a75ff',
          key: "cell-".concat(index)
        });
      })))));
    }
  }]);

  return BarChartBrowser;
}(_react.default.Component);

var _default = BarChartBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1674:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _chromaJs = _interopRequireDefault(__webpack_require__(299));

var _recharts = __webpack_require__(207);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PieChartBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(PieChartBrowser, _React$Component);

  function PieChartBrowser(props) {
    _classCallCheck(this, PieChartBrowser);

    return _possibleConstructorReturn(this, (PieChartBrowser.__proto__ || Object.getPrototypeOf(PieChartBrowser)).call(this, props));
  } //maps values to colors


  _createClass(PieChartBrowser, [{
    key: "colorMapping",
    value: function colorMapping(weights) {
      var arr1 = weights;

      var colors = _chromaJs.default.scale(['#1a75ff', 'grey']).colors(arr1.length);

      var mapping = {};
      arr1.forEach(function (v, i) {
        mapping[v.value] = colors[i];
      });
      return mapping;
    }
  }, {
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (!this.props.propertyURI) {
        for (var prop in this.props.selection) {
          selected.push(prop);
        }
      } else {
        if (this.props.selection[this.props.propertyURI]) {
          this.props.selection[this.props.propertyURI].forEach(function (node) {
            selected.push(node.value);
          });
        }
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectItem",
    value: function selectItem(data, index) {
      if (this.doesExist(data.ovalue)) {
        this.props.onCheck(0, data.ovalue);
      } else {
        this.props.onCheck(1, data.ovalue);
      }
    }
  }, {
    key: "renderCustomizedLabel",
    value: function renderCustomizedLabel(_ref) {
      var cx = _ref.cx,
          cy = _ref.cy,
          midAngle = _ref.midAngle,
          innerRadius = _ref.innerRadius,
          outerRadius = _ref.outerRadius,
          percent = _ref.percent,
          index = _ref.index,
          title = _ref.title;
      return "".concat(title); //return  `${title}: ${(percent * 100).toFixed(0)}%`;
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var colorMap = {};
      colorMap = self.colorMapping(self.props.instances);
      var data = [];
      var title;
      self.props.instances.forEach(function (node) {
        title = node.value;

        if (self.props.shortenURI && !(self.props.config && self.props.config.shortenURI === 0)) {
          title = _URIUtil.default.getURILabel(title);
        }

        data.push({
          ovalue: node.value,
          title: title,
          total: Number(node.total),
          isSelected: self.doesExist(node.value)
        });
      }); //todo: change width/height on expansion

      var width = 230;
      var height = 180;

      if (this.props.expanded) {
        width = 470;
        height = 540;
      }

      return _react.default.createElement("div", null, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "97%",
        height: height
      }, _react.default.createElement(_recharts.PieChart, null, _react.default.createElement(_recharts.Tooltip, null), _react.default.createElement(_recharts.Pie, {
        outerRadius: "90%",
        innerRadius: "0",
        data: data,
        dataKey: "total",
        nameKey: "title",
        labelLine: this.props.expanded ? true : false,
        label: this.props.expanded ? this.renderCustomizedLabel : false,
        margin: {
          top: 0,
          right: 10,
          left: 0,
          bottom: 0
        },
        fill: "#1a75ff",
        onClick: this.selectItem.bind(this)
      }, data.map(function (entry, index) {
        return _react.default.createElement(_recharts.Cell, {
          cursor: "pointer",
          fill: entry.isSelected ? '#82ca9d' : colorMap[entry.ovalue],
          key: "cell-".concat(index)
        });
      })))));
    }
  }]);

  return PieChartBrowser;
}(_react.default.Component);

var _default = PieChartBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1675:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _Tree = _interopRequireDefault(__webpack_require__(1676));

var _dbpedia_en_taxonomy = __webpack_require__(1677);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TaxonomyBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(TaxonomyBrowser, _React$Component);

  function TaxonomyBrowser(props) {
    _classCallCheck(this, TaxonomyBrowser);

    return _possibleConstructorReturn(this, (TaxonomyBrowser.__proto__ || Object.getPrototypeOf(TaxonomyBrowser)).call(this, props));
  }

  _createClass(TaxonomyBrowser, [{
    key: "buildTree",
    value: function buildTree(instances) {
      var self = this;
      var parent,
          label,
          tree = {};
      var found = 0;
      instances.forEach(function (instance) {
        //only considers dbpedia types
        if (instance.value.indexOf('dbpedia') !== -1) {
          label = _URIUtil.default.getURILabel(instance.value);
          tree[label] = {
            selected: self.doesExist(instance.value),
            value: instance.value,
            id: label,
            count: instance.total,
            derived: 0
          };
        }
      });
      var continueFlag = 0;
      var stackDepth = 10;
      var depthCounter = 0;
      var parents = [];

      var _loop = function _loop() {
        parents = [];
        depthCounter++; //prevent deadlock situation

        if (depthCounter > stackDepth) {
          return "break";
        }

        continueFlag = 0; //find immediate parents first

        for (var prop in tree) {
          continueFlag++;
          parent = _dbpedia_en_taxonomy.child_parent[prop];
          parents.push(parent);

          if (!parent) {
            parent = 'Thing';
          }

          if (prop === 'Thing' && parent === 'Thing') {//do nothing when child and parent are the same
          } else {
            if (tree[parent]) {
              if (tree[parent].children) {
                tree[parent].children.push(tree[prop]);
              } else {
                tree[parent].children = [tree[prop]];
              }
            } else {
              tree[parent] = {
                selected: false,
                value: '',
                active: 1,
                derived: 1,
                id: parent,
                count: 0,
                children: [tree[prop]]
              };
            }
          }
        }

        var checkThings = 0; //if there is only Thing as parent left, stop the loop

        parents.forEach(function (p) {
          if (p !== 'Thing') {
            checkThings++;
          }
        });

        if (!checkThings || continueFlag === 1) {
          return "break";
        } //delete inactive ones


        for (var _prop in tree) {
          if (!tree[_prop].active) {
            delete tree[_prop];
          }
        }
      };

      while (continueFlag !== 1) {
        var _ret = _loop();

        if (_ret === "break") break;
      }

      return tree;
    }
  }, {
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (this.props.selection[this.props.propertyURI]) {
        this.props.selection[this.props.propertyURI].forEach(function (node) {
          selected.push(node.value);
        });
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectTag",
    value: function selectTag(value) {
      if (this.doesExist(value)) {
        this.props.onCheck(0, value);
      } else {
        this.props.onCheck(1, value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var tree = this.buildTree(this.props.instances);
      return _react.default.createElement("div", {
        className: "ui list",
        ref: "taxonomyBrowser"
      }, _react.default.createElement(_Tree.default, {
        tree: tree.Thing,
        onNodeClick: this.selectTag.bind(this)
      }));
    }
  }]);

  return TaxonomyBrowser;
}(_react.default.Component);

var _default = TaxonomyBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1676:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Tree = /*#__PURE__*/function (_React$Component) {
  _inherits(Tree, _React$Component);

  function Tree(props) {
    _classCallCheck(this, Tree);

    return _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).call(this, props));
  }

  _createClass(Tree, [{
    key: "handleNodeClick",
    value: function handleNodeClick(value) {
      this.props.onNodeClick(value);
    }
  }, {
    key: "makeNode",
    value: function makeNode(selected, value, label, count, derived) {
      if (label !== 'Thing') {
        var classes = 'ui basic label';

        if (selected) {
          classes = 'ui blue label';
        }

        if (derived) {
          classes = classes + ' disabled';
        }

        return _react.default.createElement("a", {
          onClick: this.handleNodeClick.bind(this, value),
          className: classes
        }, label, " ", _react.default.createElement("span", {
          className: "ui small blue circular label"
        }, count));
      } else {
        return '';
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var childNodes;

      if (this.props.tree && this.props.tree.children) {
        childNodes = this.props.tree.children.map(function (node, index) {
          if (node.children) {
            return _react.default.createElement("div", {
              className: "item",
              key: index
            }, _react.default.createElement(Tree, {
              tree: node,
              onNodeClick: self.props.onNodeClick.bind(self)
            }));
          } else {
            return _react.default.createElement("div", {
              className: "item",
              key: index
            }, self.makeNode(node.selected, node.value, node.id, node.count, node.derived));
          }
        });
        return _react.default.createElement("div", {
          className: "item"
        }, this.makeNode(this.props.tree.selected, this.props.tree.value, this.props.tree.id, this.props.tree.count, this.props.tree.derived), _react.default.createElement("div", {
          className: "content"
        }, _react.default.createElement("div", {
          className: "compact list"
        }, childNodes)));
      } else {
        return _react.default.createElement("div", {
          className: "item"
        });
      }
    }
  }]);

  return Tree;
}(_react.default.Component);

var _default = Tree;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1677:
/***/ (function(module, exports) {

module.exports = {
  child_parent: {
    'Misc': 'Thing',
    'Activity': 'Thing',
    'Game': 'Activity',
    'Sport': 'Activity',
    'AnatomicalStructure': 'Thing',
    'Artery': 'AnatomicalStructure',
    'Bone': 'AnatomicalStructure',
    'Brain': 'AnatomicalStructure',
    'Embryology': 'AnatomicalStructure',
    'Lymph': 'AnatomicalStructure',
    'Muscle': 'AnatomicalStructure',
    'Nerve': 'AnatomicalStructure',
    'Vein': 'AnatomicalStructure',
    'Award': 'Thing',
    'ChemicalSubstance': 'Thing',
    'ChemicalCompound': 'ChemicalSubstance',
    'Colour': 'Thing',
    'Currency': 'Thing',
    'Database': 'Thing',
    'BiologicalDatabase': 'Database',
    'Device': 'Thing',
    'AutomobileEngine': 'Device',
    'Weapon': 'Device',
    'Disease': 'Thing',
    'Drug': 'Thing',
    'EthnicGroup': 'Thing',
    'Event': 'Thing',
    'Convention': 'Event',
    'Election': 'Event',
    'FilmFestival': 'Event',
    'MilitaryConflict': 'Event',
    'MusicFestival': 'Event',
    'SpaceMission': 'Event',
    'SportsEvent': 'Event',
    'FootballMatch': 'SportsEvent',
    'GrandPrix': 'SportsEvent',
    'MixedMartialArtsEvent': 'SportsEvent',
    'Olympics': 'SportsEvent',
    'Race': 'SportsEvent',
    'WomensTennisAssociationTournament': 'SportsEvent',
    'WrestlingEvent': 'SportsEvent',
    'YearInSpaceflight': 'Event',
    'Food': 'Thing',
    'Beverage': 'Food',
    'Holiday': 'Thing',
    'Language': 'Thing',
    'LegalCase': 'Thing',
    'SupremeCourtOfTheUnitedStatesCase': 'LegalCase',
    'MeanOfTransportation': 'Thing',
    'Aircraft': 'MeanOfTransportation',
    'Automobile': 'MeanOfTransportation',
    'Locomotive': 'MeanOfTransportation',
    'Rocket': 'MeanOfTransportation',
    'Ship': 'MeanOfTransportation',
    'SpaceShuttle': 'MeanOfTransportation',
    'SpaceStation': 'MeanOfTransportation',
    'Spacecraft': 'MeanOfTransportation',
    'MusicGenre': 'Thing',
    'Name': 'Thing',
    'GivenName': 'Name',
    'OlympicResult': 'Thing',
    'Organisation': 'Thing',
    'Band': 'Organisation',
    'Broadcaster': 'Organisation',
    'BroadcastNetwork': 'Broadcaster',
    'RadioStation': 'Broadcaster',
    'TelevisionStation': 'Broadcaster',
    'Company': 'Organisation',
    'Airline': 'Company',
    'RecordLabel': 'Company',
    'EducationalInstitution': 'Organisation',
    'College': 'EducationalInstitution',
    'School': 'EducationalInstitution',
    'University': 'EducationalInstitution',
    'GovernmentAgency': 'Organisation',
    'Legislature': 'Organisation',
    'MilitaryUnit': 'Organisation',
    'Non-ProfitOrganisation': 'Organisation',
    'PoliticalParty': 'Organisation',
    'SportsLeague': 'Organisation',
    'AmericanFootballLeague': 'SportsLeague',
    'AustralianFootballLeague': 'SportsLeague',
    'AutoRacingLeague': 'SportsLeague',
    'BaseballLeague': 'SportsLeague',
    'BasketballLeague': 'SportsLeague',
    'CanadianFootballLeague': 'SportsLeague',
    'CricketLeague': 'SportsLeague',
    'FieldHockeyLeague': 'SportsLeague',
    'GolfLeague': 'SportsLeague',
    'HandballLeague': 'SportsLeague',
    'IceHockeyLeague': 'SportsLeague',
    'InlineHockeyLeague': 'SportsLeague',
    'LacrosseLeague': 'SportsLeague',
    'MixedMartialArtsLeague': 'SportsLeague',
    'MotorcycleRacingLeague': 'SportsLeague',
    'PoloLeague': 'SportsLeague',
    'RugbyLeague': 'SportsLeague',
    'SoccerLeague': 'SportsLeague',
    'SoftballLeague': 'SportsLeague',
    'SpeedwayLeague': 'SportsLeague',
    'TennisLeague': 'SportsLeague',
    'VideogamesLeague': 'SportsLeague',
    'VolleyballLeague': 'SportsLeague',
    'SportsTeam': 'Organisation',
    'AmericanFootballTeam': 'SportsTeam',
    'BasketballTeam': 'SportsTeam',
    'CanadianFootballTeam': 'SportsTeam',
    'HockeyTeam': 'SportsTeam',
    'SoccerClub': 'SportsTeam',
    'SpeedwayTeam': 'SportsTeam',
    'TradeUnion': 'Organisation',
    'Person': 'Thing',
    'Ambassador': 'Person',
    'Architect': 'Person',
    'Artist': 'Person',
    'Actor': 'Artist',
    'AdultActor': 'Actor',
    'Comedian': 'Artist',
    'ComicsCreator': 'Artist',
    'MusicalArtist': 'Artist',
    'Writer': 'Artist',
    'Astronaut': 'Person',
    'Athlete': 'Person',
    'AustralianRulesFootballPlayer': 'Athlete',
    'BadmintonPlayer': 'Athlete',
    'BaseballPlayer': 'Athlete',
    'BasketballPlayer': 'Athlete',
    'Boxer': 'Athlete',
    'Cricketer': 'Athlete',
    'Cyclist': 'Athlete',
    'FigureSkater': 'Athlete',
    'FormulaOneRacer': 'Athlete',
    'GaelicGamesPlayer': 'Athlete',
    'GolfPlayer': 'Athlete',
    'GridironFootballPlayer': 'Athlete',
    'AmericanFootballPlayer': 'GridironFootballPlayer',
    'IceHockeyPlayer': 'Athlete',
    'MartialArtist': 'Athlete',
    'NascarDriver': 'Athlete',
    'NationalCollegiateAthleticAssociationAthlete': 'Athlete',
    'RugbyPlayer': 'Athlete',
    'SnookerPlayer': 'Athlete',
    'SnookerChamp': 'SnookerPlayer',
    'SoccerPlayer': 'Athlete',
    'TennisPlayer': 'Athlete',
    'Wrestler': 'Athlete',
    'BritishRoyalty': 'Person',
    'Cleric': 'Person',
    'Cardinal': 'Cleric',
    'ChristianBishop': 'Cleric',
    'Saint': 'Cleric',
    'CollegeCoach': 'Person',
    'Criminal': 'Person',
    'FictionalCharacter': 'Person',
    'ComicsCharacter': 'FictionalCharacter',
    'Journalist': 'Person',
    'Judge': 'Person',
    'MilitaryPerson': 'Person',
    'Model': 'Person',
    'Monarch': 'Person',
    'OfficeHolder': 'Person',
    'Philosopher': 'Person',
    'PlayboyPlaymate': 'Person',
    'PokerPlayer': 'Person',
    'Politician': 'Person',
    'Chancellor': 'Politician',
    'Congressman': 'Politician',
    'Governor': 'Politician',
    'Mayor': 'Politician',
    'MemberOfParliament': 'Politician',
    'President': 'Politician',
    'PrimeMinister': 'Politician',
    'Senator': 'Politician',
    'Scientist': 'Person',
    'SoccerManager': 'Person',
    'Place': 'Thing',
    'ArchitecturalStructure': 'Place',
    'Building': 'ArchitecturalStructure',
    'HistoricBuilding': 'Building',
    'Hospital': 'Building',
    'Hotel': 'Building',
    'Lighthouse': 'Building',
    'Museum': 'Building',
    'Restaurant': 'Building',
    'ShoppingMall': 'Building',
    'Stadium': 'Building',
    'Theatre': 'Building',
    'Infrastructure': 'ArchitecturalStructure',
    'Airport': 'Infrastructure',
    'LaunchPad': 'Infrastructure',
    'PowerStation': 'Infrastructure',
    'RouteOfTransportation': 'Infrastructure',
    'Bridge': 'RouteOfTransportation',
    'PublicTransitSystem': 'RouteOfTransportation',
    'RailwayLine': 'RouteOfTransportation',
    'Road': 'RouteOfTransportation',
    'RoadJunction': 'RouteOfTransportation',
    'Tunnel': 'RouteOfTransportation',
    'RailwayTunnel': 'Tunnel',
    'RoadTunnel': 'Tunnel',
    'WaterwayTunnel': 'Tunnel',
    'Station': 'Infrastructure',
    'Park': 'ArchitecturalStructure',
    'HistoricPlace': 'Place',
    'Monument': 'Place',
    'NaturalPlace': 'Place',
    'BodyOfWater': 'NaturalPlace',
    'Lake': 'BodyOfWater',
    'Stream': 'BodyOfWater',
    'Canal': 'Stream',
    'River': 'Stream',
    'Cave': 'NaturalPlace',
    'LunarCrater': 'NaturalPlace',
    'Mountain': 'NaturalPlace',
    'MountainRange': 'NaturalPlace',
    'Valley': 'NaturalPlace',
    'PopulatedPlace': 'Place',
    'AdministrativeRegion': 'PopulatedPlace',
    'Continent': 'PopulatedPlace',
    'Country': 'PopulatedPlace',
    'Island': 'PopulatedPlace',
    'Settlement': 'PopulatedPlace',
    'City': 'Settlement',
    'Town': 'Settlement',
    'Village': 'Settlement',
    'ProtectedArea': 'Place',
    'SkiArea': 'Place',
    'WineRegion': 'Place',
    'WorldHeritageSite': 'Place',
    'Planet': 'Thing',
    'ProgrammingLanguage': 'Thing',
    'Project': 'Thing',
    'ResearchProject': 'Project',
    'Protein': 'Thing',
    'Single': 'Thing',
    'SnookerWorldRanking': 'Thing',
    'Species': 'Thing',
    'Archaea': 'Species',
    'Bacteria': 'Species',
    'Eukaryote': 'Species',
    'Animal': 'Eukaryote',
    'Amphibian': 'Animal',
    'Arachnid': 'Animal',
    'Bird': 'Animal',
    'Crustacean': 'Animal',
    'Fish': 'Animal',
    'Insect': 'Animal',
    'Mammal': 'Animal',
    'Mollusca': 'Animal',
    'Reptile': 'Animal',
    'Fungus': 'Eukaryote',
    'Plant': 'Eukaryote',
    'ClubMoss': 'Plant',
    'Conifer': 'Plant',
    'Cycad': 'Plant',
    'Fern': 'Plant',
    'FloweringPlant': 'Plant',
    'Grape': 'FloweringPlant',
    'Ginkgo': 'Plant',
    'Gnetophytes': 'Plant',
    'GreenAlga': 'Plant',
    'Moss': 'Plant',
    'Work': 'Thing',
    'Film': 'Work',
    'Musical': 'Work',
    'MusicalWork': 'Work',
    'Album': 'MusicalWork',
    'Song': 'MusicalWork',
    'EurovisionSongContestEntry': 'Song',
    'Software': 'Work',
    'VideoGame': 'Software',
    'TelevisionEpisode': 'Work',
    'TelevisionShow': 'Work',
    'Website': 'Work',
    'WrittenWork': 'Work',
    'Book': 'WrittenWork',
    'PeriodicalLiterature': 'WrittenWork',
    'AcademicJournal': 'PeriodicalLiterature',
    'Magazine': 'PeriodicalLiterature',
    'Newspaper': 'PeriodicalLiterature',
    'Play': 'WrittenWork'
  }
};

/***/ }),

/***/ 1678:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _recharts = __webpack_require__(207);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TreeMapBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(TreeMapBrowser, _React$Component);

  function TreeMapBrowser(props) {
    _classCallCheck(this, TreeMapBrowser);

    return _possibleConstructorReturn(this, (TreeMapBrowser.__proto__ || Object.getPrototypeOf(TreeMapBrowser)).call(this, props));
  }

  _createClass(TreeMapBrowser, [{
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (!this.props.propertyURI) {
        for (var prop in this.props.selection) {
          selected.push(prop);
        }
      } else {
        if (this.props.selection[this.props.propertyURI]) {
          this.props.selection[this.props.propertyURI].forEach(function (node) {
            selected.push(node.value);
          });
        }
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectItem",
    value: function selectItem(data, index) {
      if (this.doesExist(data.ovalue)) {
        this.props.onCheck(0, data.ovalue);
      } else {
        this.props.onCheck(1, data.ovalue);
      }
    }
  }, {
    key: "renderCustomizedLabel",
    value: function renderCustomizedLabel(_ref) {
      var root = _ref.root,
          depth = _ref.depth,
          x = _ref.x,
          y = _ref.y,
          width = _ref.width,
          height = _ref.height,
          index = _ref.index,
          payload = _ref.payload,
          colors = _ref.colors,
          rank = _ref.rank,
          title = _ref.title;
      return _react.default.createElement("g", null, _react.default.createElement("rect", {
        x: x,
        y: y,
        width: width,
        height: height
      }), _react.default.createElement("text", {
        x: x + width / 2,
        y: y + height / 2 + 7,
        textAnchor: "middle",
        fill: "#fff"
      }, title));
    }
  }, {
    key: "renderCustomizedLabel",
    value: function renderCustomizedLabel(_ref2) {
      var root = _ref2.root,
          depth = _ref2.depth,
          x = _ref2.x,
          y = _ref2.y,
          width = _ref2.width,
          height = _ref2.height,
          index = _ref2.index,
          payload = _ref2.payload,
          colors = _ref2.colors,
          rank = _ref2.rank,
          title = _ref2.title,
          isSelected = _ref2.isSelected;
      var expanded = this.props.expanded ? 1 : 0;
      return _react.default.createElement("g", null, _react.default.createElement("rect", {
        x: x,
        y: y,
        width: width,
        height: height,
        style: {
          opacity: depth < 2 ? 1 : 0.85,
          fill: isSelected ? '#82ca9d' : '#1a75ff',
          stroke: '#fff',
          strokeWidth: 2 / (1 + 1e-10),
          strokeOpacity: 1 / (1 + 1e-10)
        }
      }), expanded === 1 ? _react.default.createElement("text", {
        x: x + width / 2,
        y: y + height / 2 + 7,
        textAnchor: "middle",
        fill: "#fff",
        fontSize: 14
      }, title) : null);
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var data = [];
      var title;
      self.props.instances.forEach(function (node) {
        title = node.value;

        if (self.props.shortenURI && !(self.props.config && self.props.config.shortenURI === 0)) {
          title = _URIUtil.default.getURILabel(title);
        }

        data.push({
          ovalue: node.value,
          title: title,
          total: Number(node.total),
          isSelected: self.doesExist(node.value)
        });
      }); //todo: change width/height on expansion

      var width = 230;
      var height = 180;

      if (this.props.expanded) {
        width = 470;
        height = 540;
      }

      return _react.default.createElement("div", null, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "97%",
        height: height
      }, _react.default.createElement(_recharts.Treemap, {
        data: data,
        dataKey: "total",
        nameKey: "title",
        ratio: 4 / 3,
        stroke: "#fff",
        fill: "#1a75ff",
        content: this.renderCustomizedLabel.bind(this),
        onClick: this.selectItem.bind(this)
      }, _react.default.createElement(_recharts.Tooltip, null))));
    }
  }]);

  return TreeMapBrowser;
}(_react.default.Component);

var _default = TreeMapBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1679:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TagCloudBrowser = /*#__PURE__*/function (_React$Component) {
  _inherits(TagCloudBrowser, _React$Component);

  function TagCloudBrowser(props) {
    var _this;

    _classCallCheck(this, TagCloudBrowser);

    _this = _possibleConstructorReturn(this, (TagCloudBrowser.__proto__ || Object.getPrototypeOf(TagCloudBrowser)).call(this, props));
    _this.tags = [];
    return _this;
  }

  _createClass(TagCloudBrowser, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.tags.length) {
        //$('.tagCloud').jQCloud(this.prepareTagsForCloud(this.props.DatasetAnnotationStore.tags));
        $(_reactDom.default.findDOMNode(this.refs.tagCloud)).jQCloud(this.tags, {
          autoResize: true
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.tags.length) {
        //$('.tagCloud').jQCloud(this.prepareTagsForCloud(this.props.DatasetAnnotationStore.tags));
        $(_reactDom.default.findDOMNode(this.refs.tagCloud)).css('width', '100%');
        $(_reactDom.default.findDOMNode(this.refs.tagCloud)).css('height', '100%');
        $(_reactDom.default.findDOMNode(this.refs.tagCloud)).empty();
        $(_reactDom.default.findDOMNode(this.refs.tagCloud)).jQCloud('update', this.tags, {
          autoResize: true
        });
      }
    }
  }, {
    key: "doesExist",
    value: function doesExist(value) {
      var selected = [];

      if (this.props.selection[this.props.propertyURI]) {
        this.props.selection[this.props.propertyURI].forEach(function (node) {
          selected.push(node.value);
        });
      }

      var pos = selected.indexOf(value);

      if (pos === -1) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "selectTag",
    value: function selectTag(value) {
      if (this.doesExist(value)) {
        this.props.onCheck(0, value);
      } else {
        this.props.onCheck(1, value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var self = this;
      this.tags = [];
      var title,
          cls,
          selected = 0,
          style = '';
      var tagsDIV = self.props.instances.map(function (node, index) {
        if (self.doesExist(node.value)) {
          selected = 1;
          cls = 'ui label basic mini';
          style = 'color:red;';
        } else {
          selected = 0;
          cls = '';
          style = '';
        }

        title = node.value;

        if (node.label) {
          title = node.label;
        } else if (_this2.props.shortenURI && !(_this2.props.config && _this2.props.config.shortenURI === 0)) {
          title = _URIUtil.default.getURILabel(title);
        }

        _this2.tags.push({
          weight: parseInt(node.total),
          text: title,
          html: {
            style: style,
            title: node.value + ' (' + node.total + ')'
          },
          handlers: {
            click: self.selectTag.bind(_this2, node.value)
          }
        });
      });
      return _react.default.createElement("div", {
        className: "ui segment",
        ref: "tagCloudBrowser"
      }, _react.default.createElement("div", {
        ref: "tagCloud",
        className: "tagCloud",
        style: {
          minHeight: self.props.expanded ? 500 : 100,
          minWidth: self.props.expanded ? 500 : 100
        }
      }));
    }
  }]);

  return TagCloudBrowser;
}(_react.default.Component);

var _default = TagCloudBrowser;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1682:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _DatasetHeader = _interopRequireDefault(__webpack_require__(889));

var _DatasetViewer = _interopRequireDefault(__webpack_require__(890));

var _DatasetPager = _interopRequireDefault(__webpack_require__(892));

var _YASQEViewer = _interopRequireDefault(__webpack_require__(295));

var _general = __webpack_require__(59);

var _json2csv = _interopRequireDefault(__webpack_require__(519));

var _reactSearchInput = _interopRequireWildcard(__webpack_require__(518));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatasetFB = /*#__PURE__*/function (_React$Component) {
  _inherits(DatasetFB, _React$Component);

  function DatasetFB(props) {
    var _this;

    _classCallCheck(this, DatasetFB);

    _this = _possibleConstructorReturn(this, (DatasetFB.__proto__ || Object.getPrototypeOf(DatasetFB)).call(this, props));
    _this.state = {
      filterTerm: '',
      searchMode: 0,
      config: _this.props.config ? JSON.parse(JSON.stringify(_this.props.config)) : ''
    };
    return _this;
  }

  _createClass(DatasetFB, [{
    key: "handleSearchMode",
    value: function handleSearchMode(searchMode) {
      this.setState({
        searchMode: searchMode
      });
    }
  }, {
    key: "handleViewerChange",
    value: function handleViewerChange(viewer) {
      var tmp = this.state.config;
      tmp.datasetViewer = [viewer];
      this.setState({
        config: tmp
      });
    }
  }, {
    key: "handleToggleShowQuery",
    value: function handleToggleShowQuery() {
      var tmp = this.state.config;

      if (!this.state.config) {
        tmp = {};
      }

      if (tmp.displayQueries) {
        tmp.displayQueries = 0;
      } else {
        tmp.displayQueries = 1;
      }

      this.setState({
        config: tmp
      });
    }
  }, {
    key: "handleExport",
    value: function handleExport() {
      var fields = this.getPropsForAnalysis();

      var csv = _json2csv.default.parse(this.props.resources, {
        fields: fields
      }); //console.log(csv);


      var uriContent = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);
      window.open(uriContent, 'data.csv');
    } //it is required for providing different types of visualizations

  }, {
    key: "getNoOfPropsForAnalysis",
    value: function getNoOfPropsForAnalysis() {
      var out = 0;
      var r = this.props.resources;

      if (r.length) {
        if (r[0].propsForAnalysis) {
          for (var prop in r[0].propsForAnalysis) {
            out = out + 1;
          }

          return out;
        }
      }

      return out;
    }
  }, {
    key: "getPropsForAnalysis",
    value: function getPropsForAnalysis() {
      var out = [];
      var r = this.props.resources;

      if (r.length) {
        out.push('v'); //uri

        if (r[0].title) {
          out.push('title');
        } else if (r[0].label) {
          out.push('label');
        }

        if (r[0].propsForAnalysis) {
          for (var prop in r[0].propsForAnalysis) {
            out.push('propsForAnalysis.' + prop);
          }

          return out;
        }
      }

      return out;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {} //filter content

  }, {
    key: "filterUpdated",
    value: function filterUpdated(term) {
      if (!term.trim()) {
        this.setState({
          filterTerm: term
        }); // needed to force re-render
      } else {
        this.setState({
          filterTerm: term
        }); // needed to force re-render
      }
    }
  }, {
    key: "render",
    value: function render() {
      var facetConfigs;

      if (this.props.selection && this.props.selection.options && this.props.selection.options.facetConfigs) {
        facetConfigs = this.props.selection.options.facetConfigs;
      } //filtering


      var instances = this.props.resources; //console.log(instances);

      if (instances.length) {
        var KEYS_TO_FILTERS = [];

        for (var prop in instances[0]) {
          if (prop !== 'propsForAnalysis' && prop !== 'v' && prop !== 'geo' && prop !== 'd' && prop !== 'image' && prop !== 'accessLevel') {
            KEYS_TO_FILTERS.push(prop);
          }
        }

        for (var _prop in instances[0].propsForAnalysis) {
          if (instances[0].propsForAnalysis[_prop]) {
            KEYS_TO_FILTERS.push('propsForAnalysis.' + _prop);
          }
        } //console.log(KEYS_TO_FILTERS);


        instances = instances.filter((0, _reactSearchInput.createFilter)(this.state.filterTerm, KEYS_TO_FILTERS));
      } //check erros first


      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "dataset"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      } //continue


      var self = this;
      var createResourceDIV = '';
      var dcnf = this.state.config;
      var templateResource = '';

      if (dcnf && !this.props.readOnly && dcnf.allowResourceNew) {
        if (dcnf.templateResource) {
          templateResource = dcnf.templateResource[0];
        }

        createResourceDIV = _react.default.createElement("div", {
          className: "ui list"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "medium ui basic icon labeled button",
          onClick: this.props.onCreateResource.bind(this, this.props.datasetURI, templateResource, true)
        }, _react.default.createElement("i", {
          className: "cube large blue icon "
        }), " ", _react.default.createElement("i", {
          className: "add black icon"
        }), " Add a New Resource")), _react.default.createElement("br", null));
      }

      if (Object.keys(this.state.config).length === 0) {
        dcnf = this.props.config;
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "datasetFB"
      }, _react.default.createElement(_DatasetHeader.default, {
        importedEnvState: this.props.importedEnvState,
        resourceQuery: this.props.resourceQuery,
        config: dcnf,
        total: this.props.total,
        datasetURI: this.props.datasetURI,
        searchMode: this.state.searchMode,
        resourcesLength: this.props.resourcesLength,
        hasResources: this.props.resources.length,
        pivotConstraint: this.props.pivotConstraint,
        prevEnvState: this.props.prevEnvState,
        handleBackToPrevPivotState: this.props.handleBackToPrevPivotState
      }), _react.default.createElement("div", {
        className: "ui segments"
      }, _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement(_DatasetViewer.default, {
        expanded: this.props.expanded,
        enableAuthentication: _general.enableAuthentication,
        cloneable: 0,
        resources: instances,
        datasetURI: this.props.datasetURI,
        OpenInNewTab: true,
        isBig: this.props.isBig,
        config: dcnf,
        facetConfigs: facetConfigs,
        pivotConstraint: this.props.pivotConstraint
      })), _react.default.createElement(_reactSearchInput.default, {
        placeholder: "filter results by a keyword",
        className: "ui fluid search icon input",
        onChange: this.filterUpdated.bind(this),
        throttle: 500
      }), _react.default.createElement(_DatasetPager.default, {
        hasResources: instances.length,
        config: dcnf,
        enableQuerySaveImport: _general.enableQuerySaveImport,
        resourceQuery: this.props.resourceQuery,
        showAllResources: this.props.showAllResources,
        onShowAllResources: this.props.onShowAllResources,
        onSearchMode: this.handleSearchMode.bind(this),
        selection: this.props.selection,
        pivotConstraint: this.props.pivotConstraint,
        onExpandCollapse: this.props.onExpandCollapse,
        handleClick: this.props.handleClick,
        datasetURI: this.props.datasetURI,
        total: this.props.total,
        threshold: this.props.pagerSize,
        currentPage: this.props.currentPage,
        noOfAnalysisProps: this.getNoOfPropsForAnalysis(),
        handleViewerChange: this.handleViewerChange.bind(this),
        handleToggleShowQuery: this.handleToggleShowQuery.bind(this),
        handleExport: this.handleExport.bind(this)
      }), dcnf.displayQueries ? _react.default.createElement("div", {
        className: "ui tertiary segment"
      }, _react.default.createElement(_YASQEViewer.default, {
        spec: {
          value: this.props.resourceQuery
        }
      })) : ''), _react.default.createElement("div", {
        className: "ui bottom attached"
      }, createResourceDIV));
    }
  }]);

  return DatasetFB;
}(_react.default.Component);

var _default = DatasetFB;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1683:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleRouter = __webpack_require__(34);

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _semanticUiReact = __webpack_require__(69);

var _BasicAggregateMapView = _interopRequireDefault(__webpack_require__(498));

var _bind = _interopRequireDefault(__webpack_require__(360));

var _ObjectIViewer = _interopRequireDefault(__webpack_require__(298));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var BasicResourceList = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicResourceList, _React$Component);

  function BasicResourceList() {
    _classCallCheck(this, BasicResourceList);

    return _possibleConstructorReturn(this, (BasicResourceList.__proto__ || Object.getPrototypeOf(BasicResourceList)).apply(this, arguments));
  }

  _createClass(BasicResourceList, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "buildLink",
    value: function buildLink(useA, v, g, title, image, icon, cloneable) {
      var self = this;
      var cloneDIV = '';

      if (cloneable) {
        cloneDIV = _react.default.createElement("span", {
          className: "mini ui circular basic icon button",
          onClick: self.handleCloneResource.bind(self, decodeURIComponent(g), decodeURIComponent(v)),
          title: "clone this resource"
        }, _react.default.createElement("i", {
          className: "icon teal superscript"
        }));
      } //on the map: todo:handle it with React DOM


      if (useA) {
        var titleHTML = "\n                <div class=\"content\">\n                    <a href=\"".concat(PUBLIC_URL, "/dataset/").concat(g, "/resource/").concat(v, "\" target=\"_blank\" class=\"ui\"> <i class=\"").concat(icon, "\"></i>").concat(title, "</a>\n                </div>\n            ");

        if (this.props.config && this.props.config.resourceImageProperty) {
          return "\n                <div>\n                    <div class=\"content\">\n                        <div class=\"ui fluid card\" style=\"max-width: 150px; max-height: 235px; min-height: 235px;\">\n                            <div class=\"image\">\n                                <a href=\"".concat(PUBLIC_URL, "/dataset/").concat(g, "/resource/").concat(v, "\" target=\"_blank\" class=\"ui\"> <img class=\"ui small image\" src=\"").concat(image ? image : "".concat(PUBLIC_URL, "/assets/img/image.png"), "\"  style=\"max-height: 150px; min-height: 150px;\" /></a>\n                            </div>\n                            ").concat(titleHTML, "\n                        </div>\n                    </div>\n                </div>\n                ");
        } else {
          return titleHTML;
        }
      } //in the faceted browser


      if (this.props.OpenInNewTab) {
        var titleDIV = _react.default.createElement("div", {
          className: "content"
        }, _react.default.createElement("a", {
          href: '/dataset/' + g + '/resource/' + v,
          target: "_blank",
          className: "ui"
        }, ' ', _react.default.createElement("i", {
          className: icon
        }), title, ' '));

        if (this.props.config && this.props.config.resourceImageProperty) {
          return _react.default.createElement("div", null, _react.default.createElement("div", {
            className: "content"
          }, _react.default.createElement("div", {
            className: "ui fluid card",
            style: {
              maxWidth: 150,
              maxHeight: 235,
              minHeight: 235
            }
          }, _react.default.createElement("div", {
            className: "image"
          }, _react.default.createElement("a", {
            href: '/dataset/' + g + '/resource/' + v,
            target: "_blank",
            className: "ui"
          }, ' ', _react.default.createElement("img", {
            className: "ui small image",
            src: image ? image : "".concat(PUBLIC_URL, "/assets/img/image.png"),
            style: {
              maxHeight: 150,
              minHeight: 150
            }
          }))), titleDIV)));
        } else {
          return _react.default.createElement("div", null, titleDIV);
        }
      } else {
        var _titleDIV = _react.default.createElement("div", {
          className: "content"
        }, _react.default.createElement(_fluxibleRouter.NavLink, {
          routeName: "resource",
          className: "ui",
          href: '/dataset/' + g + '/resource/' + v
        }, ' ', _react.default.createElement("i", {
          className: icon
        }), title), "\xA0", cloneDIV);

        if (this.props.config && this.props.config.resourceImageProperty) {
          return _react.default.createElement("div", null, _react.default.createElement("div", {
            className: "content"
          }, _react.default.createElement("div", {
            className: "ui fluid card",
            style: {
              maxWidth: 150,
              maxHeight: 235,
              minHeight: 235
            }
          }, _react.default.createElement("div", {
            className: "image"
          }, _react.default.createElement(_fluxibleRouter.NavLink, {
            routeName: "resource",
            className: "ui",
            href: '/dataset/' + g + '/resource/' + v
          }, ' ', _react.default.createElement("img", {
            className: "ui small image",
            src: image ? image : "".concat(PUBLIC_URL, "/assets/img/image.png"),
            style: {
              maxHeight: 150,
              minHeight: 150
            }
          }))), _titleDIV)));
        } else {
          return _react.default.createElement("div", null, _titleDIV);
        }
      }
    }
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI, e) {
      this.props.onCloneResource(datasetURI, resourceURI);
      e.stopPropagation();
    }
  }, {
    key: "checkAnalysisProps",
    value: function checkAnalysisProps() {
      var out = 0;

      if (this.props.resources.length) {
        if (this.props.resources[0].propsForAnalysis && Object.keys(this.props.resources[0].propsForAnalysis).length) {
          out = 1;
          return out;
        } else {
          return 0;
        }
      } else {
        return 0;
      }

      return out;
    }
  }, {
    key: "getAnalysisPropsConfgis",
    value: function getAnalysisPropsConfgis(facetConfigs) {
      var out = {};
      var index,
          tmp = [];

      if (!facetConfigs || !Object.keys(facetConfigs).length) {
        return out;
      }

      if (this.props.resources.length) {
        if (this.props.resources[0].propsForAnalysis) {
          for (var prop in this.props.resources[0].propsForAnalysis) {
            tmp = prop.split('_');

            if (tmp.length > 1) {
              index = tmp[1]; //hanlde multiple _

              if (tmp.length > 2) {
                tmp.shift();
                index = tmp.join('_');
              }

              if (facetConfigs) {
                for (var prop2 in facetConfigs) {
                  if (prop2.indexOf(index) !== -1) {
                    out[prop] = facetConfigs[prop2];
                  }
                }
              }
            }

            return out;
          }
        }
      }

      return out;
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      //to apply the same config in result list
      var analysisPropsConfgis = this.getAnalysisPropsConfgis(this.props.facetConfigs); //console.log(analysisPropsConfgis);

      var self = this;
      var user = this.context.getUser();
      var datasetURI = this.props.datasetURI;
      var userAccess,
          itemClass,
          title,
          image,
          resourceDIV,
          geo,
          instances = [],
          list,
          dbClass = 'black cube icon';
      var theaderDIV,
          dtableHeaders = [],
          dtableCells = [];
      var cloneable = 0;

      if (self.props.config && typeof self.props.config.allowResourceClone !== 'undefined' && parseInt(self.props.config.allowResourceClone)) {
        cloneable = 1;
      }

      if (!self.props.cloneable) {
        cloneable = 0;
      }

      if (!this.props.resources.length) {
        list = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
      } else {
        var sortedProps = [];

        if (this.checkAnalysisProps()) {
          //first sort the analysis property
          for (var prop in this.props.resources[0].propsForAnalysis) {
            sortedProps.push(prop);
            sortedProps.sort();
          }

          dtableHeaders = sortedProps.map(function (item) {
            return _react.default.createElement(_semanticUiReact.Table.HeaderCell, {
              key: item
            }, item);
          });
          theaderDIV = _react.default.createElement(_semanticUiReact.Table.Header, null, _react.default.createElement(_semanticUiReact.Table.Row, null, _react.default.createElement(_semanticUiReact.Table.HeaderCell, {
            singleLine: true
          }, "Title"), dtableHeaders));
        }

        list = this.props.resources.map(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          image = node.image ? node.image : '';
          geo = node.geo ? node.geo : '';
          itemClass = (0, _bind.default)({
            ui: true,
            'item fadeIn': true,
            animated: !cloneable
          });

          if (!self.props.enableAuthentication) {
            dbClass = 'black cube icon';

            if (self.props.config && typeof self.props.config.readOnly !== 'undefined' && !self.props.config.readOnly) {
              dbClass = 'green cube icon';
            }
          } else {
            userAccess = node.accessLevel;

            if (userAccess.access) {
              if (userAccess.type === 'full') {
                dbClass = 'green cube icon';
              } else {
                dbClass = 'yellow cube icon';
              }
            } else {
              dbClass = 'black cube icon';
            }
          }

          dtableCells = [];

          if (self.checkAnalysisProps()) {
            //get the values in order
            dtableCells = sortedProps.map(function (prop) {
              return _react.default.createElement(_semanticUiReact.Table.Cell, {
                key: 'c' + prop,
                title: node.propsForAnalysis[prop]
              }, Object.keys(analysisPropsConfgis).length && analysisPropsConfgis[prop] ? _react.default.createElement(_ObjectIViewer.default, {
                datasetURI: _this.props.datasetURI,
                property: prop,
                spec: {
                  value: node.propsForAnalysis[prop]
                },
                config: analysisPropsConfgis[prop]
              }) : _URIUtil.default.getURILabel(node.propsForAnalysis[prop]));
            });
            resourceDIV = _react.default.createElement(_semanticUiReact.Table.Row, {
              key: index
            }, _react.default.createElement(_semanticUiReact.Table.Cell, null, self.buildLink(0, encodeURIComponent(node.v), encodeURIComponent(node.d), title, image, dbClass, cloneable)), dtableCells);
          } else {
            resourceDIV = _react.default.createElement("div", {
              className: itemClass,
              key: index
            }, self.buildLink(0, encodeURIComponent(node.v), encodeURIComponent(node.d), title, image, dbClass, cloneable));
          }

          if (self.props.config && self.props.config.resourceGeoProperty && geo) {
            instances.push({
              value: geo,
              hint: self.buildLink(1, encodeURIComponent(node.v), encodeURIComponent(node.d), title, image, dbClass, cloneable)
            });
          }

          return resourceDIV;
        });
      }

      var listClasses = (0, _bind.default)({
        ui: true,
        big: this.props.isBig,
        animated: !cloneable,
        'divided list': this.props.config && !this.props.config.resourceImageProperty,
        cards: this.props.config && this.props.config.resourceImageProperty
      });
      var finalOutDIV = list;

      if (self.checkAnalysisProps()) {
        finalOutDIV = _react.default.createElement(_semanticUiReact.Table, {
          celled: true,
          padded: true,
          striped: true,
          selectable: true,
          compact: true
        }, theaderDIV, _react.default.createElement(_semanticUiReact.Table.Body, null, list));
      }

      return _react.default.createElement("div", {
        className: listClasses,
        ref: "resourceList",
        style: {
          overflow: 'auto'
        }
      }, this.props.config && this.props.config.resourceGeoProperty ? _react.default.createElement(_BasicAggregateMapView.default, {
        mapWidth: 950,
        mapHeight: 620,
        zoomLevel: 2,
        spec: {
          instances: instances
        },
        config: this.props.config
      }) : finalOutDIV);
    }
  }]);

  return BasicResourceList;
}(_react.default.Component);

BasicResourceList.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
var _default = BasicResourceList;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1684:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _chromaJs = _interopRequireDefault(__webpack_require__(299));

var _recharts = __webpack_require__(207);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ScatterChartView = /*#__PURE__*/function (_React$Component) {
  _inherits(ScatterChartView, _React$Component);

  function ScatterChartView() {
    _classCallCheck(this, ScatterChartView);

    return _possibleConstructorReturn(this, (ScatterChartView.__proto__ || Object.getPrototypeOf(ScatterChartView)).apply(this, arguments));
  }

  _createClass(ScatterChartView, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "getXYZ",
    value: function getXYZ(propsForAnalysis) {
      var c = 0,
          x,
          y,
          z,
          xLabel,
          yLabel,
          zLabel;
      var others = {};

      for (var prop in propsForAnalysis) {
        c++;

        if (c == 1) {
          x = propsForAnalysis[prop];
          xLabel = prop;
        }

        if (c == 2) {
          y = propsForAnalysis[prop];
          yLabel = prop;
        }

        if (c == 3) {
          z = propsForAnalysis[prop];
          zLabel = prop;
        }

        if (c > 3) {
          others[prop] = propsForAnalysis[prop];
        }
      }

      return {
        x: x,
        y: y,
        z: z,
        xLabel: xLabel,
        yLabel: yLabel,
        zLabel: zLabel,
        others: others
      };
    }
  }, {
    key: "handleNodeClick",
    value: function handleNodeClick(params) {
      console.log(params);
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip(params) {
      var tmp,
          othersDIV = [];

      if (params.payload.length) {
        tmp = params.payload[0].payload.others;

        if (tmp) {
          for (var prop in tmp) {
            othersDIV.push(_react.default.createElement("div", {
              key: prop
            }, prop, ": ", _URIUtil.default.getURILabel(tmp[prop])));
          }
        }

        return _react.default.createElement("div", {
          className: "ui compact info message"
        }, _react.default.createElement("b", null, params.payload[0].payload.title), params.payload[0].payload.z ? _react.default.createElement("span", null, " (", _react.default.createElement("i", null, params.payload[0].payload.z), ")") : null, _react.default.createElement("br", null), params.payload[0].name, ": ", params.payload[0].value, _react.default.createElement("br", null), params.payload[1].name, ": ", params.payload[1].value, othersDIV);
      } else {
        return '';
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var colorGroup = {};
      var title,
          instances = [],
          out,
          xyz;
      var xType, yType, zType;
      var xLabel, yLabel, zLabel;

      if (!this.props.resources.length) {
        out = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
        return _react.default.createElement("div", null, out);
      } else {
        this.props.resources.forEach(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          xyz = self.getXYZ(node.propsForAnalysis);

          if (!xType) {
            if (isNaN(xyz.x)) {
              xType = 'category';
            } else {
              xType = 'number';
            }

            xLabel = xyz.xLabel;
          }

          if (!yType) {
            if (isNaN(xyz.y)) {
              yType = 'category';
            } else {
              yType = 'number';
            }

            yLabel = xyz.yLabel;
          }

          if (xyz.z && !zType) {
            if (isNaN(xyz.z)) {
              zType = 'category';
            } else {
              zType = 'number';
            }

            zLabel = xyz.zLabel;
          } //collect all other attributes


          if (Object.keys(xyz.others).length) {
            instances.push({
              uri: node.v,
              title: title,
              x: Number(xyz.x),
              y: Number(xyz.y),
              z: xyz.z,
              others: xyz.others
            }); //define

            if (!colorGroup[xyz.z]) {
              colorGroup[xyz.z] = _chromaJs.default.random().hex();
            }
          } else {
            if (zLabel) {
              //3D
              instances.push({
                uri: node.v,
                title: title,
                x: Number(xyz.x),
                y: Number(xyz.y),
                z: xyz.z
              }); //define

              if (!colorGroup[xyz.z]) {
                colorGroup[xyz.z] = _chromaJs.default.random().hex();
              }
            } else {
              //2D
              instances.push({
                uri: node.v,
                title: title,
                x: Number(xyz.x),
                y: Number(xyz.y)
              });
            }
          }
        }); //console.log(instances);
      } //console.log(xType, yType);


      var minHeight = this.props.expanded ? 700 : 500;
      return _react.default.createElement("div", {
        ref: "scatterChartView",
        style: {
          overflow: 'auto'
        }
      }, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "100%",
        height: minHeight
      }, _react.default.createElement(_recharts.ScatterChart, {
        margin: {
          top: 0,
          right: 10,
          left: 0,
          bottom: 0
        }
      }, _react.default.createElement(_recharts.XAxis, {
        dataKey: 'x',
        name: xLabel,
        type: xType
      }), _react.default.createElement(_recharts.YAxis, {
        dataKey: 'y',
        name: yLabel,
        type: yType
      }), _react.default.createElement(_recharts.Scatter, {
        name: "Chart",
        data: instances,
        onClick: this.handleNodeClick.bind(this)
      }, instances.map(function (entry, index) {
        return _react.default.createElement(_recharts.Cell, {
          key: "cell-".concat(index),
          fill: zLabel ? colorGroup[entry.z] : '#1a75ff'
        });
      })), _react.default.createElement(_recharts.CartesianGrid, {
        trokeDasharray: "3 3"
      }), _react.default.createElement(_recharts.Tooltip, {
        cursor: {
          strokeDasharray: '3 3'
        },
        content: this.renderTooltip.bind(this)
      }))));
    }
  }]);

  return ScatterChartView;
}(_react.default.Component);

var _default = ScatterChartView;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1685:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _recharts = __webpack_require__(207);

var _chromaJs = _interopRequireDefault(__webpack_require__(299));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

//----handling colors
var treemap_xCat = [];
var treemap_yCat = [];
var treemap_all_colors = []; //------

var TreeMapView = /*#__PURE__*/function (_React$Component) {
  _inherits(TreeMapView, _React$Component);

  function TreeMapView() {
    _classCallCheck(this, TreeMapView);

    return _possibleConstructorReturn(this, (TreeMapView.__proto__ || Object.getPrototypeOf(TreeMapView)).apply(this, arguments));
  }

  _createClass(TreeMapView, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "getXYZ",
    value: function getXYZ(propsForAnalysis) {
      var c = 0,
          x,
          y,
          xLabel,
          yLabel;

      for (var prop in propsForAnalysis) {
        c++;

        if (c == 1) {
          x = propsForAnalysis[prop];
          xLabel = prop;
        }

        if (c == 2) {
          y = propsForAnalysis[prop];
          yLabel = prop;
        }
      }

      return {
        x: x,
        y: y,
        xLabel: xLabel,
        yLabel: yLabel
      };
    }
  }, {
    key: "prepareColors",
    value: function prepareColors(l1, l2) {
      //const colors = chroma.scale(['#fafa6e','#2A4858']).mode('lch').colors(l1);
      var colors = _chromaJs.default.cubehelix().start(200).rotations(-0.35).gamma(0.7).lightness([0.7, 1]).scale().correctLightness().colors(l1); //const sub_colors = chroma.scale(['#1a75ff', 'grey']).mode('lch').colors(l2);
      //const sub_colors = chroma.scale('OrRd').colors(l2);
      //const sub_colors = chroma.cubehelix().start(200).rotations(-0.35).gamma(0.7).lightness([0.4, 0.85]).scale().correctLightness().colors(l2);
      //const sub_colors = chroma.scale(['green', 'yellow', 'teal', 'blue']).mode('lch').colors(l2)


      var rc,
          sub_colors = [];

      for (var i = 1; i <= l2; i++) {
        rc = _chromaJs.default.random();
        sub_colors.push(rc);
      }

      return [colors, sub_colors];
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip(xLabel, yLabel, params) {
      if (params.payload.length) {
        return _react.default.createElement("div", {
          className: "ui compact info message"
        }, xLabel, ": ", _react.default.createElement("b", null, _URIUtil.default.getURILabel(params.payload[0].payload.root.name)), _react.default.createElement("br", null), yLabel, ": ", _react.default.createElement("b", null, _URIUtil.default.getURILabel(params.payload[0].name), " (", params.payload[0].payload.size, ")"));
      } else {
        return '';
      }
    }
  }, {
    key: "renderCustomizedLabel",
    value: function renderCustomizedLabel(_ref) {
      var root = _ref.root,
          depth = _ref.depth,
          x = _ref.x,
          y = _ref.y,
          width = _ref.width,
          height = _ref.height,
          index = _ref.index,
          payload = _ref.payload,
          colors = _ref.colors,
          rank = _ref.rank,
          name = _ref.name;
      return _react.default.createElement("g", null, _react.default.createElement("rect", {
        x: x,
        y: y,
        width: width,
        height: height,
        style: {
          opacity: depth < 2 ? 1 : 0.85,
          fill: depth < 2 ? '#000' : treemap_all_colors[1][treemap_yCat.indexOf(name)],
          stroke: '#000',
          strokeWidth: depth < 2 ? 8 : 3 / (depth + 1e-10),
          strokeOpacity: 1 / (depth + 1e-10)
        }
      }), depth === 1 ? _react.default.createElement("text", {
        x: x + width / 2,
        y: y + height / 2 + 7,
        textAnchor: "middle",
        fill: "#fff",
        fontSize: 14
      }, _URIUtil.default.getURILabel(name)) : null, depth === 1 ? _react.default.createElement("text", {
        x: x + 4,
        y: y + 18,
        fill: "#fff",
        fontSize: 12,
        fillOpacity: 0.7
      }, index + 1) : null);
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var data = [];
      var title,
          instances = [],
          out,
          xyz;
      var xType, yType;
      var xLabel, yLabel;

      if (!this.props.resources.length) {
        out = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
        return _react.default.createElement("div", null, out);
      } else {
        this.props.resources.forEach(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          xyz = self.getXYZ(node.propsForAnalysis);

          if (!xLabel) {
            xLabel = xyz.xLabel;
          }

          if (!yLabel) {
            yLabel = xyz.yLabel;
          } //2D


          instances.push({
            uri: node.v,
            title: title,
            x: xyz.x,
            y: xyz.y
          });
        }); //group by variable x

        var tmp = {};
        treemap_xCat = [];
        treemap_yCat = [];
        instances.forEach(function (node, index) {
          if (!tmp[node.x]) {
            treemap_xCat.push(node.x);
            tmp[node.x] = {};
            tmp[node.x][node.y] = 1;
          } else {
            if (tmp[node.x][node.y]) {
              tmp[node.x][node.y] = tmp[node.x][node.y] + 1;
            } else {
              tmp[node.x][node.y] = 1;
            }
          }

          if (treemap_yCat.indexOf(node.y) === -1) {
            treemap_yCat.push(node.y);
          }
        }); //generate unique colors for each main and sub categories

        treemap_all_colors = this.prepareColors(treemap_xCat.length, treemap_yCat.length); //console.log(treemap_xCat, treemap_yCat);

        var children = [];

        for (var prop in tmp) {
          children = [];

          for (var prop2 in tmp[prop]) {
            children.push({
              name: prop2,
              size: parseInt(tmp[prop][prop2])
            });
          }

          data.push({
            name: prop,
            children: children
          });
        }
      } //console.log(xType, yType);


      var minHeight = this.props.expanded ? 700 : 500;
      return _react.default.createElement("div", {
        ref: "treeMapView",
        style: {
          overflow: 'auto'
        }
      }, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "100%",
        height: minHeight
      }, _react.default.createElement(_recharts.Treemap, {
        data: data,
        dataKey: "size",
        nameKey: "name",
        ratio: 4 / 3,
        stroke: "#fff",
        content: this.renderCustomizedLabel
      }, _react.default.createElement(_recharts.Tooltip, {
        content: this.renderTooltip.bind(this, xLabel, yLabel)
      }))));
    }
  }]);

  return TreeMapView;
}(_react.default.Component);

var _default = TreeMapView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1686:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _recharts = __webpack_require__(207);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var RadarChartView = /*#__PURE__*/function (_React$Component) {
  _inherits(RadarChartView, _React$Component);

  function RadarChartView() {
    _classCallCheck(this, RadarChartView);

    return _possibleConstructorReturn(this, (RadarChartView.__proto__ || Object.getPrototypeOf(RadarChartView)).apply(this, arguments));
  }

  _createClass(RadarChartView, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "getXYZ",
    value: function getXYZ(propsForAnalysis) {
      var c = 0,
          x,
          y,
          z,
          xLabel,
          yLabel,
          zLabel;

      for (var prop in propsForAnalysis) {
        c++;

        if (c == 1) {
          x = propsForAnalysis[prop];
          xLabel = prop;
        }

        if (c == 2) {
          y = propsForAnalysis[prop];
          yLabel = prop;
        }

        if (c == 3) {
          z = propsForAnalysis[prop];
          zLabel = prop;
        }
      }

      return {
        x: x,
        y: y,
        z: z,
        xLabel: xLabel,
        yLabel: yLabel,
        zLabel: zLabel
      };
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var data = [];
      var title,
          instances = [],
          out,
          xyz;
      var xLabel, yLabel, zLabel;

      if (!this.props.resources.length) {
        out = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
        return _react.default.createElement("div", null, out);
      } else {
        this.props.resources.forEach(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          xyz = self.getXYZ(node.propsForAnalysis);

          if (!xLabel) {
            xLabel = xyz.xLabel;
          }

          if (!yLabel) {
            yLabel = xyz.yLabel;
          }

          if (xyz.z) {
            //3D
            if (!zLabel) {
              zLabel = xyz.zLabel;
            }

            instances.push({
              uri: node.v,
              title: title,
              x: xyz.x,
              y: Number(xyz.y),
              z: Number(xyz.z)
            });
          } else {
            //2D
            instances.push({
              uri: node.v,
              title: title,
              x: xyz.x,
              y: Number(xyz.y)
            });
          }
        }); //group by variable x

        var tmp = {};
        instances.forEach(function (node, index) {
          if (!tmp[node.x]) {
            tmp[node.x] = {};
            tmp[node.x][yLabel] = node.y;

            if (zLabel) {
              tmp[node.x][zLabel] = node.z;
            }
          } else {
            //aggregate the numbers in terms of multiple instance
            tmp[node.x][yLabel] = tmp[node.x][yLabel] + node.y;

            if (zLabel) {
              tmp[node.x][zLabel] = tmp[node.x][zLabel] + node.z;
            }
          }
        });
        var data2 = [];

        for (var prop in tmp) {
          if (zLabel) {
            data2.push({
              x: prop,
              y: tmp[prop][yLabel],
              z: tmp[prop][zLabel]
            });
          } else {
            data2.push({
              x: prop,
              y: tmp[prop][yLabel]
            });
          }
        }

        instances = data2;
      } //console.log(xType, yType);


      var minHeight = this.props.expanded ? 700 : 500;
      return _react.default.createElement("div", {
        ref: "radarChartView",
        style: {
          overflow: 'auto'
        }
      }, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "100%",
        height: minHeight
      }, _react.default.createElement(_recharts.RadarChart, {
        cx: 300,
        cy: 250,
        outerRadius: 200,
        data: instances
      }, _react.default.createElement(_recharts.Radar, {
        name: yLabel,
        dataKey: "y",
        stroke: "#8884d8",
        fill: "#8884d8",
        fillOpacity: 0.6
      }), zLabel ? _react.default.createElement(_recharts.Radar, {
        name: zLabel,
        dataKey: "z",
        stroke: "#82ca9d",
        fill: "#82ca9d",
        fillOpacity: 0.6
      }) : null, _react.default.createElement(_recharts.PolarGrid, null), _react.default.createElement(_recharts.PolarAngleAxis, {
        dataKey: "x"
      }), _react.default.createElement(_recharts.PolarRadiusAxis, null), _react.default.createElement(_recharts.PolarGrid, null), _react.default.createElement(_recharts.PolarRadiusAxis, {
        angle: 30
      }), _react.default.createElement(_recharts.Tooltip, null))));
    }
  }]);

  return RadarChartView;
}(_react.default.Component);

var _default = RadarChartView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1687:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _recharts = __webpack_require__(207);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BarChartView = /*#__PURE__*/function (_React$Component) {
  _inherits(BarChartView, _React$Component);

  function BarChartView() {
    _classCallCheck(this, BarChartView);

    return _possibleConstructorReturn(this, (BarChartView.__proto__ || Object.getPrototypeOf(BarChartView)).apply(this, arguments));
  }

  _createClass(BarChartView, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "getXYZ",
    value: function getXYZ(propsForAnalysis) {
      var c = 0,
          x,
          y,
          z,
          xLabel,
          yLabel,
          zLabel;

      for (var prop in propsForAnalysis) {
        c++;

        if (c == 1) {
          x = propsForAnalysis[prop];
          xLabel = prop;
        }

        if (c == 2) {
          y = propsForAnalysis[prop];
          yLabel = prop;
        }

        if (c == 3) {
          z = propsForAnalysis[prop];
          zLabel = prop;
        }
      }

      return {
        x: x,
        y: y,
        z: z,
        xLabel: xLabel,
        yLabel: yLabel,
        zLabel: zLabel
      };
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var data = [];
      var title,
          instances = [],
          out,
          xyz;
      var xLabel, yLabel, zLabel;

      if (!this.props.resources.length) {
        out = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
        return _react.default.createElement("div", null, out);
      } else {
        this.props.resources.forEach(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          xyz = self.getXYZ(node.propsForAnalysis);

          if (!xLabel) {
            xLabel = xyz.xLabel;
          }

          if (!yLabel) {
            yLabel = xyz.yLabel;
          }

          if (xyz.z) {
            //3D
            if (!zLabel) {
              zLabel = xyz.zLabel;
            }

            instances.push({
              uri: node.v,
              title: title,
              x: xyz.x,
              y: Number(xyz.y),
              z: Number(xyz.z)
            });
          } else {
            //2D
            instances.push({
              uri: node.v,
              title: title,
              x: xyz.x,
              y: Number(xyz.y)
            });
          }
        }); //group by variable x

        var tmp = {};
        instances.forEach(function (node, index) {
          if (!tmp[node.x]) {
            tmp[node.x] = {};
            tmp[node.x][yLabel] = node.y;

            if (zLabel) {
              tmp[node.x][zLabel] = node.z;
            }
          } else {
            //aggregate the numbers in terms of multiple instance
            tmp[node.x][yLabel] = tmp[node.x][yLabel] + node.y;

            if (zLabel) {
              tmp[node.x][zLabel] = tmp[node.x][zLabel] + node.z;
            }
          }
        });
        var data2 = [];

        for (var prop in tmp) {
          if (zLabel) {
            data2.push({
              x: prop,
              y: tmp[prop][yLabel],
              z: tmp[prop][zLabel]
            });
          } else {
            data2.push({
              x: prop,
              y: tmp[prop][yLabel]
            });
          }
        }

        instances = data2;
      } //console.log(xType, yType);


      var minHeight = this.props.expanded ? 700 : 500;
      return _react.default.createElement("div", {
        ref: "barChartView",
        style: {
          overflow: 'auto'
        }
      }, _react.default.createElement(_recharts.ResponsiveContainer, {
        width: "97%",
        height: minHeight
      }, _react.default.createElement(_recharts.BarChart, {
        data: instances,
        margin: {
          top: 0,
          right: 10,
          left: 0,
          bottom: 0
        }
      }, _react.default.createElement(_recharts.XAxis, {
        dataKey: "x"
      }), _react.default.createElement(_recharts.YAxis, null), _react.default.createElement(_recharts.Tooltip, null), _react.default.createElement(_recharts.Bar, {
        dataKey: "y",
        fill: "#8884d8"
      }), zLabel ? _react.default.createElement(_recharts.Bar, {
        dataKey: "z",
        fill: "#82ca9d"
      }) : null)));
    }
  }]);

  return BarChartView;
}(_react.default.Component);

var _default = BarChartView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1688:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _chromaJs = _interopRequireDefault(__webpack_require__(299));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NetworkView = /*#__PURE__*/function (_React$Component) {
  _inherits(NetworkView, _React$Component);

  function NetworkView() {
    _classCallCheck(this, NetworkView);

    return _possibleConstructorReturn(this, (NetworkView.__proto__ || Object.getPrototypeOf(NetworkView)).apply(this, arguments));
  }

  _createClass(NetworkView, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "getXYZ",
    value: function getXYZ(propsForAnalysis) {
      var c = 0,
          x,
          y,
          z,
          xLabel,
          yLabel,
          zLabel;
      var others = {};

      for (var prop in propsForAnalysis) {
        c++;

        if (c == 1) {
          x = propsForAnalysis[prop];
          xLabel = prop;
        }

        if (c == 2) {
          y = propsForAnalysis[prop];
          yLabel = prop;
        }

        if (c == 3) {
          z = propsForAnalysis[prop];
          zLabel = prop;
        }

        if (c > 3) {
          others[prop] = propsForAnalysis[prop];
        }
      }

      return {
        x: x,
        y: y,
        z: z,
        xLabel: xLabel,
        yLabel: yLabel,
        zLabel: zLabel,
        others: others
      };
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var colorGroup = {};
      var Sigma, RandomizeNodePositions, RelativeSize, ForceAtlas2, SigmaEnableWebGL;

      if (true) {
        Sigma = __webpack_require__(328).Sigma;
        RandomizeNodePositions = __webpack_require__(328).RandomizeNodePositions;
        RelativeSize = __webpack_require__(328).RelativeSize;
        ForceAtlas2 = __webpack_require__(328).ForceAtlas2;
        SigmaEnableWebGL = __webpack_require__(328).SigmaEnableWebGL;
      }

      var network = {
        nodes: [],
        edges: []
      };
      var data = [];
      var title,
          instances = [],
          out,
          xyz;
      var xLabel, yLabel, zLabel;

      if (!this.props.resources.length) {
        out = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
        return _react.default.createElement("div", null, out);
      } else {
        this.props.resources.forEach(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          xyz = self.getXYZ(node.propsForAnalysis);

          if (!xLabel) {
            xLabel = xyz.xLabel;
          }

          if (!yLabel) {
            yLabel = xyz.yLabel;
          }

          if (xyz.z && !zLabel) {
            zLabel = xyz.zLabel;
          } //collect all other attributes


          if (Object.keys(xyz.others).length) {
            instances.push({
              uri: node.v,
              title: title,
              x: xyz.x,
              y: xyz.y,
              z: xyz.z,
              others: xyz.others
            }); //define

            for (var prop in xyz.others) {
              if (!colorGroup[prop]) {
                colorGroup[prop] = _chromaJs.default.random().hex();
              }
            }
          } else {
            if (zLabel) {
              //3D
              instances.push({
                uri: node.v,
                title: title,
                x: xyz.x,
                y: xyz.y,
                z: xyz.z
              });
            } else {
              //2D
              instances.push({
                uri: node.v,
                title: title,
                x: xyz.x,
                y: xyz.y
              });
            }
          }
        });
        var nodesObj = {},
            edgesObj = {};
        var nodes = [],
            edges = [];
        instances.forEach(function (node, index) {
          if (!nodesObj[node.uri]) {
            nodesObj[node.uri] = 1;
            nodes.push({
              id: node.uri,
              label: node.title,
              color: '#1a75ff'
            });
          }

          if (!nodesObj[node.x]) {
            nodesObj[node.x] = 1;
            nodes.push({
              id: node.x,
              label: _URIUtil.default.getURILabel(node.x),
              color: '#329F5B'
            });
          }

          if (!edgesObj[node.uri + '_' + node.x]) {
            edgesObj[node.uri + '_' + node.x] = 1;
            edges.push({
              id: node.uri + '_' + node.x,
              source: node.uri,
              target: node.x,
              label: xLabel,
              color: '#329F5B'
            });
          } //for y and z dimensions


          if (yLabel) {
            if (!nodesObj[node.y]) {
              nodesObj[node.y] = 1;
              nodes.push({
                id: node.y,
                label: _URIUtil.default.getURILabel(node.y),
                color: '#D9E228'
              });
            }

            if (!edgesObj[node.uri + '_' + node.y]) {
              edgesObj[node.uri + '_' + node.y] = 1;
              edges.push({
                id: node.uri + '_' + node.y,
                source: node.uri,
                target: node.y,
                label: yLabel,
                color: '#D9E228'
              });
            }
          }

          if (zLabel) {
            if (!nodesObj[node.z]) {
              nodesObj[node.z] = 1;
              nodes.push({
                id: node.z,
                label: _URIUtil.default.getURILabel(node.z),
                color: '#E9488C'
              });
            }

            if (!edgesObj[node.uri + '_' + node.z]) {
              edgesObj[node.uri + '_' + node.z] = 1;
              edges.push({
                id: node.uri + '_' + node.z,
                source: node.uri,
                target: node.z,
                label: zLabel,
                color: '#E9488C'
              });
            }
          }

          if (node.others) {
            for (var prop in node.others) {
              if (!nodesObj[node.others[prop]]) {
                nodesObj[node.others[prop]] = 1;
                nodes.push({
                  id: node.others[prop],
                  label: _URIUtil.default.getURILabel(node.others[prop]),
                  color: colorGroup[prop]
                });
              }

              if (!edgesObj[node.uri + '_' + node.others[prop]]) {
                edgesObj[node.uri + '_' + node.others[prop]] = 1;
                edges.push({
                  id: node.uri + '_' + node.others[prop],
                  source: node.uri,
                  target: node.others[prop],
                  label: prop,
                  color: colorGroup[prop]
                });
              }
            }
          }
        });
        network = {
          nodes: nodes,
          edges: edges
        };
      }

      var minHeight = this.props.expanded ? 700 : 500;

      if (true) {
        return _react.default.createElement("div", {
          ref: "networkView",
          style: {
            overflow: 'auto',
            minHeight: minHeight + 'px'
          },
          key: Math.round(+new Date() / 1000)
        }, _react.default.createElement(Sigma, {
          graph: network,
          settings: {
            drawEdges: true,
            clone: true
          },
          key: Math.round(+new Date() / 1000),
          style: {
            overflow: 'auto',
            minHeight: minHeight + 'px'
          }
        }, _react.default.createElement(ForceAtlas2, {
          barnesHutOptimize: true,
          barnesHutTheta: 0.8,
          iterationsPerRender: 2
        }), _react.default.createElement(RelativeSize, {
          initialSize: 50
        }), _react.default.createElement(RandomizeNodePositions, null)));
      } else {}
    }
  }]);

  return NetworkView;
}(_react.default.Component);

var _default = NetworkView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 1701:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TimelineView = /*#__PURE__*/function (_React$Component) {
  _inherits(TimelineView, _React$Component);

  function TimelineView() {
    _classCallCheck(this, TimelineView);

    return _possibleConstructorReturn(this, (TimelineView.__proto__ || Object.getPrototypeOf(TimelineView)).apply(this, arguments));
  }

  _createClass(TimelineView, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "getXYZ",
    value: function getXYZ(propsForAnalysis) {
      var c = 0,
          x,
          y,
          z,
          xLabel,
          yLabel,
          zLabel;
      var others = {};

      for (var prop in propsForAnalysis) {
        c++;

        if (c == 1) {
          x = propsForAnalysis[prop];
          xLabel = prop;
        }

        if (c == 2) {
          y = propsForAnalysis[prop];
          yLabel = prop;
        }

        if (c == 3) {
          z = propsForAnalysis[prop];
          zLabel = prop;
        }

        if (c > 3) {
          others[prop] = propsForAnalysis[prop];
        }
      }

      return {
        x: x,
        y: y,
        z: z,
        xLabel: xLabel,
        yLabel: yLabel,
        zLabel: zLabel,
        others: others
      };
    }
  }, {
    key: "handleNodeClick",
    value: function handleNodeClick(params) {
      console.log(params);
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var colorGroup = {};
      var title,
          instances = [],
          out,
          xyz;
      var xLabel, yLabel, zLabel;

      if (!this.props.resources.length) {
        out = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "There was no resource in the selected dataset! This might be due to the connection problems or because the estimated query execution time exceeds the configured limit. Please check the connection parameters of your dataset's Sparql endpoint or add resources to your dataset..."));
        return _react.default.createElement("div", null, out);
      } else {
        this.props.resources.forEach(function (node, index) {
          title = node.title ? node.title : node.label ? node.label : _URIUtil.default.getURILabel(node.v);
          xyz = self.getXYZ(node.propsForAnalysis);
          xLabel = xyz.xLabel;
          yLabel = xyz.yLabel;
          zLabel = xyz.zLabel;
          instances.push({
            id: node.v,
            title: title,
            start_time: Number(xyz.x),
            end_time: Number(xyz.y)
          });

          if (zLabel) {//3D
          } else {//2D
          }
        }); //console.log(instances);
      }

      var minHeight = this.props.expanded ? 700 : 500;
      return _react.default.createElement("div", {
        ref: "timelineView",
        style: {
          overflow: 'auto'
        }
      }, _react.default.createElement("div", {
        className: "ui segment"
      }, "Sorry! The timeline component is not yet implemented!"));
    }
  }]);

  return TimelineView;
}(_react.default.Component);

var _default = TimelineView;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1702:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = searchInDataset;

function searchInDataset(context, payload, done) {
  context.dispatch('LOADING_DATA', {});

  if (payload.selection) {
    context.service.read('facet.facetsSecondLevel', payload, {
      timeout: 50 * 1000
    }, function (err, res) {
      //end = new Date().getTime();
      //timeElapsed = end - start;
      if (err) {
        context.dispatch('LOAD_FACETS_FAILURE', err);
      } else {
        context.dispatch('LOAD_FACETS_RESOURCES_SUCCESS', res);
      }

      context.dispatch('LOADED_DATA', {});
      done();
    });
  } else {
    context.service.read('dataset.resourcesByType', payload, {
      timeout: 50 * 1000
    }, function (err, res) {
      if (err) {
        context.dispatch('LOAD_DATASET_FAILURE', err);
      } else {
        context.dispatch('LOAD_DATASET_SUCCESS', res);
      }

      context.dispatch('LOADED_DATA', {});
      done();
    });
  }
}

module.exports = exports.default;

/***/ }),

/***/ 1703:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = saveFacetsEnvState;

function saveFacetsEnvState(context, payload, done) {
  //console.log(payload);
  context.dispatch('LOADING_DATA', {});
  context.service.create('resource.newEnvState', payload, {
    timeout: 30 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('NEW_ENV_STATE_FAILURE', err);
    } else {
      context.dispatch('NEW_ENV_STATE_SUCCESS', res);
    }

    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 1704:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _fluxibleRouter = __webpack_require__(34);

var _fluxibleAddonsReact = __webpack_require__(79);

var _reactSearchInput = _interopRequireWildcard(__webpack_require__(518));

var _general = __webpack_require__(59);

var _accessManagement = __webpack_require__(489);

var _DatasetsStore = _interopRequireDefault(__webpack_require__(488));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _ServerConfigRepository = __webpack_require__(520);

var _DbClient = _interopRequireDefault(__webpack_require__(521));

var _routeToGraph = __webpack_require__(2069);

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';
var configEndpoint = "https://arco.istc.cnr.it/odpr/sparql";
var serverConfigRepo = new _ServerConfigRepository.ServerConfigRepository(new _DbClient.default(configEndpoint));

var Datasets = /*#__PURE__*/function (_React$Component) {
  _inherits(Datasets, _React$Component);

  function Datasets(props) {
    var _this;

    _classCallCheck(this, Datasets);

    _this = _possibleConstructorReturn(this, (Datasets.__proto__ || Object.getPrototypeOf(Datasets)).call(this, props));
    _this.state = {
      searchTerm: ''
    };
    _this.searchUpdated = _this.searchUpdated.bind(_this);
    return _this;
  }

  _createClass(Datasets, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "searchUpdated",
    value: function searchUpdated(term) {
      this.setState({
        searchTerm: term
      });
    }
  }, {
    key: "prepareFocusList",
    value: function prepareFocusList(list) {
      var out = [];
      list.forEach(function (f, i) {
        out.push(_react.default.createElement("a", {
          key: i,
          href: f,
          target: "_blank"
        }, _URIUtil.default.getURILabel(f), ' '));
      });
      return out;
    }
  }, {
    key: "handleCreateDataset",
    value: function handleCreateDataset() {
      this.context.executeAction(_fluxibleRouter.navigateAction, {
        url: "".concat(PUBLIC_URL, "/newDataset")
      });
    }
  }, {
    key: "displayResource",
    value: function displayResource() {
      var resourceURI = _reactDom.default.findDOMNode(this.refs.resourceURI).value;

      var datasetURI = _reactDom.default.findDOMNode(this.refs.datasetURI).value.trim();

      var output = "".concat(PUBLIC_URL, "/dataset/") + encodeURIComponent(datasetURI) + "".concat(PUBLIC_URL, "/resource/") + encodeURIComponent(resourceURI);

      if (resourceURI) {
        this.context.executeAction(_fluxibleRouter.navigateAction, {
          url: output
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var optionsList,
          output = '',
          outputDSS;
      var color = 'black';
      var user = this.context.getUser();
      var createDatasetDIV = '';
      var annotateDatasetDIV = '';
      var datasetActionsDIV = '';
      var queryImportDIV = '';

      var info = _react.default.createElement("div", {
        className: "ui blue message"
      }, "The list contains only the datasets for which at least one", ' ', _react.default.createElement("b", null, "config scope"), " is found!");

      var dss = this.props.DatasetsStore.datasetsList;

      if (_general.enableAuthentication && !user) {
        output = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, ' ', "Please ", _react.default.createElement("a", {
          href: "".concat(PUBLIC_URL, "/register")
        }, "Register"), ' ', "or ", _react.default.createElement("a", {
          href: "".concat(PUBLIC_URL, "/login")
        }, "Login"), " to see the datasets."));
      } else {
        if (_general.enableAddingNewDatasets) {
          createDatasetDIV = _react.default.createElement("div", {
            className: "item"
          }, _react.default.createElement("div", {
            className: "medium ui basic icon labeled button",
            onClick: this.handleCreateDataset.bind(this)
          }, _react.default.createElement("i", {
            className: "cubes large blue icon "
          }), ' ', _react.default.createElement("i", {
            className: "add black icon"
          }), "Add a New Dataset"));
        }

        if (_general.enableDatasetAnnotation) {
          annotateDatasetDIV = _react.default.createElement("div", {
            className: "item"
          }, _react.default.createElement("a", {
            className: "medium ui basic icon labeled button",
            href: "".concat(PUBLIC_URL, "/annotateDataset")
          }, _react.default.createElement("i", {
            className: "cubes large blue icon "
          }), ' ', _react.default.createElement("i", {
            className: "hashtag black icon"
          }), "Annotate a Dataset"));
        }

        if (_general.enableQuerySaveImport) {
          queryImportDIV = _react.default.createElement("div", {
            className: "item"
          }, _react.default.createElement(_fluxibleRouter.NavLink, {
            className: "medium ui basic icon labeled button",
            href: "".concat(PUBLIC_URL, "/wysiwyq")
          }, _react.default.createElement("i", {
            className: "large blue level down icon"
          }), "Import a Query"));
        }

        datasetActionsDIV = _react.default.createElement("div", {
          className: "ui horizontal divided list"
        }, createDatasetDIV, " ", annotateDatasetDIV, " ", queryImportDIV, _react.default.createElement("br", null));

        if (!dss.length) {
          if (_general.defaultDatasetURI[0]) {
            output = _react.default.createElement("div", {
              className: "ui item",
              key: _general.defaultDatasetURI[0]
            }, ' ', _react.default.createElement("div", {
              className: "content"
            }, ' ', _react.default.createElement("i", {
              className: "ui blue icon cubes"
            }), ' ', _react.default.createElement("div", {
              // href={
              //     `${PUBLIC_URL}/dataset/1/` +
              //     encodeURIComponent(defaultDatasetURI[0])
              // }
              onClick: function onClick() {
                console.log('Clicked:', _general.defaultDatasetURI);
              },
              title: "go to resource list",
              routeName: "dataset"
            }, _general.defaultDatasetURI[0]), _react.default.createElement("i", {
              className: "ui green flag icon",
              title: "default dataset"
            }), ' '), ' ');
          } else {
            //no graph name is specified
            output = _react.default.createElement("div", {
              className: "ui big item",
              key: "empty"
            }, ' ', _react.default.createElement("div", {
              className: "content"
            }, ' ', "Your config is empty!", _react.default.createElement("a", {
              href: "".concat(PUBLIC_URL, "/dataset/")
            }, ' ', _react.default.createElement("span", {
              className: "ui big blue label"
            }, "See all resources in all local datasets"))), ' ');
          }
        } else {
          var tmpOption = '';
          optionsList = dss.filter(function (option, index) {
            //filter out datasets if no access is provided
            tmpOption = '1';

            if (_general.enableAuthentication && option.features.hasLimitedAccess && parseInt(option.features.hasLimitedAccess)) {
              //need to handle access to the dataset
              //if user is the editor by default he already has view access
              var editAccess = (0, _accessManagement.checkEditAccess)(user, option.d, 0, 0, 0);

              if (!editAccess.access || editAccess.type === 'partial') {
                var viewAccess = (0, _accessManagement.checkViewAccess)(user, option.d, 0, 0, 0);

                if (!viewAccess.access) {
                  tmpOption = '';
                }
              }
            }

            if (tmpOption) {
              return true;
            } else {
              return false;
            }
          }).map(function (option, index) {
            return _react.default.createElement("option", {
              key: index,
              value: option.d
            }, ' ', option.d && option.features.datasetLabel ? option.features.datasetLabel : option.d, ' ');
          }); //allow search in datasets list

          var KEYS_TO_FILTERS = ['features.datasetLabel', 'features.resourceFocusType', 'd'];
          dss = dss.filter((0, _reactSearchInput.createFilter)(this.state.searchTerm, KEYS_TO_FILTERS));
          var dsLink = '';
          var dsIcon = '';
          outputDSS = dss.map(function (ds, index) {
            dsLink = _react.default.createElement("a", {
              onClick: _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var _yield$serverConfigRe, sparqlEndpoint, graph;

                return regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return serverConfigRepo.getSparqlEndpointAndGraphByDatasetId(ds.d);

                      case 3:
                        _yield$serverConfigRe = _context.sent;
                        sparqlEndpoint = _yield$serverConfigRe.sparqlEndpoint;
                        graph = _yield$serverConfigRe.graph;
                        (0, _routeToGraph.routeToGraph)(sparqlEndpoint, graph);
                        _context.next = 12;
                        break;

                      case 9:
                        _context.prev = 9;
                        _context.t0 = _context["catch"](0);
                        console.log('[!] Error while getting dataset config: ', _context.t0);

                      case 12:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, this, [[0, 9]]);
              })),
              title: "go to resource list"
            }, ds.features && ds.features.datasetLabel ? ds.features.datasetLabel : ds.d);

            if (ds.features && ds.features.isBrowsable && _general.enableFacetedBrowser) {
              dsLink = _react.default.createElement("a", {
                href: "".concat(PUBLIC_URL, "/browse/") + encodeURIComponent(ds.d),
                title: "browse data"
              }, ds.features && ds.features.datasetLabel ? ds.features.datasetLabel : ds.d);
            }

            dsIcon = ' cubes '; //remove links if no access is provided

            if (_general.enableAuthentication && ds.features.hasLimitedAccess && parseInt(ds.features.hasLimitedAccess)) {
              dsIcon = ' unlock '; //need to handle access to the dataset
              //if user is the editor by default he already has view access

              var editAccess = (0, _accessManagement.checkEditAccess)(user, ds.d, 0, 0, 0);

              if (!editAccess.access || editAccess.type === 'partial') {
                var viewAccess = (0, _accessManagement.checkViewAccess)(user, ds.d, 0, 0, 0);

                if (!viewAccess.access) {
                  dsLink = _react.default.createElement("span", null, ds.features && ds.features.datasetLabel ? ds.features.datasetLabel : ds.d);
                  dsIcon = ' lock ';
                }
              }
            }

            if (ds.features) {
              if (typeof ds.features.readOnly === 'undefined') {
                color = 'black';
              } else {
                if (ds.features.readOnly) {
                  color = 'black';
                } else {
                  color = 'blue';
                }
              }
            }

            return _react.default.createElement("div", {
              className: "ui item",
              key: ds.d
            }, ' ', _react.default.createElement("div", {
              className: "content"
            }, ' ', _react.default.createElement("i", {
              className: 'ui icon ' + dsIcon + color
            }), ' ', dsLink, ' ', ds.features && ds.features.resourceFocusType ? _react.default.createElement("span", {
              className: "ui small circular label"
            }, ' ', self.prepareFocusList(ds.features.resourceFocusType), ' ') : '', ds.features && ds.features.metadata ? _react.default.createElement("a", {
              className: "ui label rounded",
              href: ds.features.metadata,
              title: "metadata",
              target: "_blank"
            }, _react.default.createElement("i", {
              className: "info icon"
            }), "metadata") : '', ds.features && ds.features.isDefaultDataset ? _react.default.createElement("i", {
              className: "ui teal flag icon",
              title: "default dataset"
            }) : ''), ' ');
          });
        }
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "datasets"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, dss.length ? _react.default.createElement("div", null, info) : null, _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement("h2", null, _react.default.createElement("span", {
        className: "ui big black circular label"
      }, dss.length), ' ', "Knowledge Graphs"), this.props.DatasetsStore.datasetsList.length > 7 ? _react.default.createElement("div", {
        className: "ui"
      }, _react.default.createElement("div", {
        className: "ui form fluid category search"
      }, _react.default.createElement("div", {
        className: "ui large icon input"
      }, _react.default.createElement(_reactSearchInput.default, {
        className: "prompt circular ui fluid category search",
        onChange: this.searchUpdated,
        placeholder: "Search in datasets...",
        style: {
          width: 400
        }
      }), _react.default.createElement("i", {
        className: "search icon"
      })))) : null, _react.default.createElement("div", {
        className: "ui big divided list"
      }, output, outputDSS)), _react.default.createElement("div", {
        className: "ui bottom attached"
      }, datasetActionsDIV), dss.length ? _react.default.createElement("div", {
        className: "ui grey message form"
      }, _react.default.createElement("select", {
        ref: "datasetURI",
        className: "ui search dropdown"
      }, optionsList), _react.default.createElement("input", {
        ref: "resourceURI",
        type: "text",
        className: "input",
        placeholder: "Enter the URI of the resource e.g. http://dbpedia.org/resource/VU_University_Amsterdam"
      }), _react.default.createElement("button", {
        className: "fluid ui primary button",
        onClick: this.displayResource.bind(this)
      }, "Display resource in the selected dataset")) : '')));
    }
  }]);

  return Datasets;
}(_react.default.Component);

Datasets.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
Datasets = (0, _fluxibleAddonsReact.connectToStores)(Datasets, [_DatasetsStore.default], function (context, props) {
  return {
    DatasetsStore: context.getStore(_DatasetsStore.default).getState()
  };
});
var _default = Datasets;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 1705:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lodash = __webpack_require__(894);

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ResourceDataMapper = /*#__PURE__*/function () {
  function ResourceDataMapper() {
    _classCallCheck(this, ResourceDataMapper);
  }

  _createClass(ResourceDataMapper, [{
    key: "parseResults",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(comunicaBindings) {
        var bindings, resources;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return comunicaBindings;

              case 2:
                bindings = _context.sent;
                resources = (0, _lodash.map)(bindings, function (binding) {
                  var jsonResource = {};
                  var variables = Array.from(binding.keys());
                  (0, _lodash.forEach)(variables, function (v) {
                    var result = binding.get(v);
                    jsonResource[stripeQuestionMark(v)] = result.value; // value convert from rdf object NamedNode, Literal giving just the value
                  });
                  return jsonResource;
                });
                return _context.abrupt("return", resources);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function parseResults(_x) {
        return _ref.apply(this, arguments);
      }

      return parseResults;
    }()
  }]);

  return ResourceDataMapper;
}();

exports.default = ResourceDataMapper;

var stripeQuestionMark = function stripeQuestionMark(sparqlVariable) {
  return sparqlVariable.replace('?', '');
};

module.exports = exports.default;

/***/ }),

/***/ 1706:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServerConfigQueryBuilder = void 0;

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var configGraph = "http://odpreactor.arco.istc.cnr.it/configuration";

var ServerConfigQueryBuilder = /*#__PURE__*/function () {
  function ServerConfigQueryBuilder() {
    _classCallCheck(this, ServerConfigQueryBuilder);
  }

  _createClass(ServerConfigQueryBuilder, [{
    key: "getConfigByDatasetId",
    value: function getConfigByDatasetId(datasetId) {
      return "\n                PREFIX ldr: <https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#>\n\n                SELECT ?protocol ?host ?port ?path ?endpointType ?graph WHERE {\n\n                    GRAPH <".concat(configGraph, "> {\n              \n                      ?serverConfig a ldr:ServerConfig ;\n                      ldr:dataset <").concat(datasetId, "> ;\n                      ldr:host ?host ;\n                      ldr:port ?port ;\n                      ldr:path ?path ;\n                      ldr:protocol ?protocol ;\n                      ldr:endpointType ?endpointType ;\n                      ldr:graphName ?graph .              \n                   } \n              }\n                ");
    }
  }, {
    key: "getConfigBySparqlEndpointHostAndPathAndGraph",
    value: function getConfigBySparqlEndpointHostAndPathAndGraph(_ref) {
      var host = _ref.host,
          sparqlPath = _ref.sparqlPath,
          graph = _ref.graph;
      return "\n      PREFIX ldr: <https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#>\n\n      SELECT ?datasetId WHERE {\n\n          GRAPH <".concat(configGraph, "> {\n    \n            ?serverConfig a ldr:ServerConfig ;\n            ldr:dataset ?datasetId ;\n            ldr:host \"").concat(host, "\" ;\n            ldr:path \"").concat(sparqlPath, "\" ;\n            ldr:graphName \"").concat(graph, "\" .\n         } \n    }\n      ");
    }
  }]);

  return ServerConfigQueryBuilder;
}();

exports.ServerConfigQueryBuilder = ServerConfigQueryBuilder;

/***/ }),

/***/ 1707:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UrlParser = void 0;

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var UrlParser = /*#__PURE__*/function () {
  function UrlParser() {
    _classCallCheck(this, UrlParser);
  }

  _createClass(UrlParser, [{
    key: "getHost",
    value: function getHost(string) {
      var hostRegex = new RegExp(/((?<=:\/\/)((\w|\.)+)(?=(\/|:|\b)(\w|\b))|^(\w|\.)+(?!\w*:\/\/))/gm);
      var matches = string.match(hostRegex);
      return matches ? matches[0] : undefined;
    }
  }, {
    key: "getPath",
    value: function getPath(string) {
      var pathRegex = new RegExp(/(?<=((\w|\.)+))\/(\w|\/|\.)+/gm);
      var matches = string.match(pathRegex);
      return matches ? matches[0] : undefined;
    }
  }]);

  return UrlParser;
}();

exports.UrlParser = UrlParser;

/***/ }),

/***/ 1708:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DbContext = void 0;

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DbContext = function DbContext(datasetId, sparqlEndpoint, graph) {
  _classCallCheck(this, DbContext);

  this.datasetId = datasetId;
  this.sparqlEndpoint = sparqlEndpoint;
  this.graph = graph;
};

exports.DbContext = DbContext;

/***/ }),

/***/ 1724:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1725:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1743:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1745:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1788:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1790:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2069:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.routeToGraph = routeToGraph;

var _LDRRouter = __webpack_require__(1058);

/**
 * Route to odp-reactor-graph microservice
 */
function routeToGraph(sparqlEndpoint, graph) {
  var router = new _LDRRouter.LDRRouter();
  var route = "".concat("https://odp-reactor-browser.vercel.app", ":").concat("443", "/endpoints/").concat(encodeURIComponent(sparqlEndpoint), "/graphs/").concat(encodeURIComponent(graph));
  router.navigateTo(route);
}

/***/ }),

/***/ 2070:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _DatasetStore = _interopRequireDefault(__webpack_require__(1059));

var _fluxibleAddonsReact = __webpack_require__(79);

var _general = __webpack_require__(59);

var _Dataset = _interopRequireDefault(__webpack_require__(2071));

var _cloneResource = _interopRequireDefault(__webpack_require__(312));

var _createResource = _interopRequireDefault(__webpack_require__(888));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatasetReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(DatasetReactor, _React$Component);

  function DatasetReactor() {
    _classCallCheck(this, DatasetReactor);

    return _possibleConstructorReturn(this, (DatasetReactor.__proto__ || Object.getPrototypeOf(DatasetReactor)).apply(this, arguments));
  }

  _createClass(DatasetReactor, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI) {
      this.context.executeAction(_cloneResource.default, {
        dataset: datasetURI,
        resourceURI: resourceURI
      });
    }
  }, {
    key: "handleCreateResource",
    value: function handleCreateResource(datasetURI, templateResource) {
      this.context.executeAction(_createResource.default, {
        dataset: datasetURI,
        templateResource: templateResource
      });
    } //removes properties from an object

  }, {
    key: "configMinus",
    value: function configMinus(config, props) {
      var o = {};

      for (var p in config) {
        if (props.indexOf(p) === -1) {
          o[p] = config[p];
        }
      }

      return o;
    }
  }, {
    key: "render",
    value: function render() {
      var datasetURI = this.props.DatasetStore.dataset.datasetURI;
      var resources = this.props.DatasetStore.dataset.resources;
      var page = this.props.DatasetStore.dataset.page;
      var total = this.props.DatasetStore.dataset.total;
      var isComplete = this.props.DatasetStore.isComplete;
      var config = this.props.DatasetStore.dataset.config;
      var resourceQuery = this.props.DatasetStore.dataset.resourceQuery;
      var error = this.props.DatasetStore.dataset.error;
      var datasetReactor;

      if (config && config.datasetReactor) {
        switch (config.datasetReactor[0]) {
          case 'Dataset':
            datasetReactor = _react.default.createElement(_Dataset.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              resources: resources,
              page: page,
              total: total,
              error: error,
              config: this.configMinus(config, ['datasetReactor']),
              resourceQuery: resourceQuery,
              onCloneResource: this.handleCloneResource.bind(this),
              onCreateResource: this.handleCreateResource.bind(this)
            });
            break;

          default:
            datasetReactor = _react.default.createElement(_Dataset.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              resources: resources,
              page: page,
              total: total,
              error: error,
              config: this.configMinus(config, ['datasetReactor']),
              resourceQuery: resourceQuery,
              onCloneResource: this.handleCloneResource.bind(this),
              onCreateResource: this.handleCreateResource.bind(this)
            });
        }
      }

      return _react.default.createElement("div", {
        ref: "datasetReactor"
      }, datasetReactor);
    }
  }]);

  return DatasetReactor;
}(_react.default.Component);

DatasetReactor.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
DatasetReactor = (0, _fluxibleAddonsReact.connectToStores)(DatasetReactor, [_DatasetStore.default], function (context, props) {
  return {
    DatasetStore: context.getStore(_DatasetStore.default).getState()
  };
});
var _default = DatasetReactor;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2071:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _DatasetHeader = _interopRequireDefault(__webpack_require__(889));

var _DatasetViewer = _interopRequireDefault(__webpack_require__(890));

var _DatasetPager = _interopRequireDefault(__webpack_require__(892));

var _YASQEViewer = _interopRequireDefault(__webpack_require__(295));

var _general = __webpack_require__(59);

var _json2csv = _interopRequireDefault(__webpack_require__(519));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Dataset = /*#__PURE__*/function (_React$Component) {
  _inherits(Dataset, _React$Component);

  function Dataset(props) {
    var _this;

    _classCallCheck(this, Dataset);

    _this = _possibleConstructorReturn(this, (Dataset.__proto__ || Object.getPrototypeOf(Dataset)).call(this, props));
    _this.state = {
      searchMode: 0,
      showAllResources: 0,
      config: _this.props.config ? JSON.parse(JSON.stringify(_this.props.config)) : ''
    };
    return _this;
  }

  _createClass(Dataset, [{
    key: "handleSearchMode",
    value: function handleSearchMode(searchMode) {
      this.setState({
        searchMode: searchMode
      });
    }
  }, {
    key: "toggleShowAllResources",
    value: function toggleShowAllResources() {
      this.setState({
        showAllResources: !this.state.showAllResources
      });
    }
  }, {
    key: "handleExport",
    value: function handleExport() {
      var fields = this.getPropsForAnalysis();

      var csv = _json2csv.default.parse(this.props.resources, {
        fields: fields
      }); //console.log(csv);


      var uriContent = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);
      window.open(uriContent, 'data.csv');
    }
  }, {
    key: "handleToggleShowQuery",
    value: function handleToggleShowQuery() {
      var tmp = this.state.config;

      if (!this.state.config) {
        tmp = {};
      }

      if (tmp.displayQueries) {
        tmp.displayQueries = 0;
      } else {
        tmp.displayQueries = 1;
      }

      this.setState({
        config: tmp
      });
    }
  }, {
    key: "getPropsForAnalysis",
    value: function getPropsForAnalysis() {
      var out = [];
      var r = this.props.resources;

      if (r.length) {
        out.push('v'); //uri

        if (r[0].title) {
          out.push('title');
        } else if (r[0].label) {
          out.push('label');
        }

        if (r[0].propsForAnalysis) {
          for (var prop in r[0].propsForAnalysis) {
            out.push('propsForAnalysis.' + prop);
          }

          return out;
        }
      }

      return out;
    }
  }, {
    key: "handleViewerChange",
    value: function handleViewerChange(viewer) {
      var tmp = this.state.config;
      tmp.datasetViewer = [viewer];
      this.setState({
        config: tmp
      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "dataset"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      } //continue


      var self = this;
      var createResourceDIV = '';
      var dcnf = this.state.config;
      var templateResource = '';

      if (dcnf && !this.props.readOnly && dcnf.allowResourceNew) {
        if (dcnf.templateResource) {
          templateResource = dcnf.templateResource[0];
        }

        createResourceDIV = _react.default.createElement("div", {
          className: "ui list"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "medium ui basic icon labeled button",
          onClick: this.props.onCreateResource.bind(this, this.props.datasetURI, templateResource, false)
        }, _react.default.createElement("i", {
          className: "cube large blue icon "
        }), " ", _react.default.createElement("i", {
          className: "add black icon"
        }), " Add a New Resource")), _react.default.createElement("br", null));
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "dataset"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement(_DatasetHeader.default, {
        config: dcnf,
        total: this.props.total,
        resourceQuery: this.props.resourceQuery,
        datasetURI: this.props.datasetURI,
        searchMode: this.state.searchMode,
        resourcesLength: this.props.resources.length
      }), _react.default.createElement("div", {
        className: "ui segments"
      }, _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement(_DatasetViewer.default, {
        enableAuthentication: _general.enableAuthentication,
        resources: this.props.resources,
        datasetURI: this.props.datasetURI,
        isBig: true,
        config: dcnf,
        cloneable: 1,
        onCloneResource: this.props.onCloneResource
      })), _react.default.createElement(_DatasetPager.default, {
        config: dcnf,
        resourceQuery: this.props.resourceQuery,
        enableQuerySaveImport: _general.enableQuerySaveImport,
        showAllResources: this.state.showAllResources,
        handleToggleShowQuery: this.handleToggleShowQuery.bind(this),
        onShowAllResources: this.toggleShowAllResources.bind(this),
        onSearchMode: this.handleSearchMode.bind(this),
        datasetURI: this.props.datasetURI,
        visibleResourcesTotal: this.props.resources.length,
        total: this.props.total,
        threshold: 10,
        currentPage: this.props.page,
        handleViewerChange: this.handleViewerChange.bind(this),
        handleExport: this.handleExport.bind(this)
      }), dcnf && dcnf.displayQueries ? _react.default.createElement("div", {
        className: "ui tertiary segment"
      }, _react.default.createElement(_YASQEViewer.default, {
        spec: {
          value: this.props.resourceQuery
        }
      })) : ''), _react.default.createElement("div", {
        className: "ui bottom attached"
      }, createResourceDIV))));
    }
  }]);

  return Dataset;
}(_react.default.Component);

var _default = Dataset;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2072:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ResourceStoreUtil = /*#__PURE__*/function () {
  function ResourceStoreUtil() {
    _classCallCheck(this, ResourceStoreUtil);
  } //main public method to be called in store


  _createClass(ResourceStoreUtil, [{
    key: "preservePropertiesOrder",
    value: function preservePropertiesOrder(oldProps, newProps) {
      //assuming we are not inserting new rdf properties and just add multiple instances of existing properties
      var self = this;

      if (oldProps.length && oldProps.length === newProps.length) {
        newProps.forEach(function (v, i) {
          newProps[i].instances = self.preserveValueOrder(oldProps[i].instances, newProps[i].instances);
        });
      }

      return newProps;
    }
  }, {
    key: "preserveValueOrder",
    value: function preserveValueOrder(oldArr, newArr) {
      var output = oldArr.slice();
      var self = this;
      var tmp;

      if (self.calculateArrLength(oldArr) < newArr.length) {
        //insertion case
        newArr.forEach(function (v, i) {
          if (self.checkInArray(newArr[i], oldArr).found) {// preserve the order
          } else {
            output.push({
              value: newArr[i].value,
              valueType: newArr[i].valueType
            });
          }
        });
      } else {
        if (self.calculateArrLength(oldArr) > newArr.length) {
          //delete case
          oldArr.forEach(function (v, i) {
            if (self.checkInArray(oldArr[i], newArr).found) {// preserve the order
            } else {
              output[i] = 0;
            }
          });
        } else {
          //in edit mode we should still preserve empty indices
          //we should update the value of our old array with 0 indices
          //only works for single changes
          tmp = self.detectChangeInArray(oldArr, newArr);
          output[tmp.oldIndex] = newArr[tmp.newIndex];
        }
      }

      return output;
    } //to detect a single update
    //caveat: does not work for batch update
    //works based on the nodes which are unchanged

  }, {
    key: "detectChangeInArray",
    value: function detectChangeInArray(oldArr, newArr) {
      var self = this;
      var tmp,
          out = 0,
          oldIndex,
          newIndex,
          foundIndices = [];
      oldArr.forEach(function (v, i) {
        //if it was not found and was not 0 it means it is the change point
        tmp = self.checkInArray(oldArr[i], newArr);

        if (tmp.found) {
          foundIndices.push(tmp.index);
        } else {
          if (oldArr[i]) {
            //the index in orld array when the change occured
            oldIndex = i;
          }
        }
      }); //check found indices to detect non-found indices

      newArr.forEach(function (v, i) {
        if (foundIndices.indexOf(i) !== -1) {//it is unchanged
        } else {
          //it is changed
          newIndex = i;
          out = {
            oldIndex: oldIndex,
            newIndex: newIndex
          };
          return out;
        }
      });
      return {
        oldIndex: oldIndex,
        newIndex: newIndex
      };
    } //this is required to ignore 0 values when getting array length

  }, {
    key: "calculateArrLength",
    value: function calculateArrLength(arr) {
      var count = 0;
      arr.forEach(function (v, i) {
        if (arr[i]) {
          count++;
        }
      });
      return count;
    }
  }, {
    key: "areEqualInstance",
    value: function areEqualInstance(firstI, secondI) {
      if (firstI && secondI && firstI.value === secondI.value && firstI.valueType === secondI.valueType) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "checkInArray",
    value: function checkInArray(instance, arr) {
      var found = {
        found: false,
        index: 0
      };
      var self = this;
      arr.forEach(function (v, i) {
        if (self.areEqualInstance(arr[i], instance)) {
          //returns the index of matched element
          found = {
            found: true,
            index: i
          };
          return found;
        }
      });
      return found;
    }
  }]);

  return ResourceStoreUtil;
}();

var _default = ResourceStoreUtil;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2073:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _PropertyReactor = _interopRequireDefault(__webpack_require__(313));

var _fluxibleRouter = __webpack_require__(34);

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _cloneResource = _interopRequireDefault(__webpack_require__(312));

var _deleteResource = _interopRequireDefault(__webpack_require__(2382));

var _scrollToTop = __webpack_require__(326);

var _fluxibleAddonsReact = __webpack_require__(79);

var _PatternResourceReactor = __webpack_require__(2383);

var _GoToButton = _interopRequireDefault(__webpack_require__(2385));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var Resource = /*#__PURE__*/function (_React$Component) {
  _inherits(Resource, _React$Component);

  function Resource(props) {
    _classCallCheck(this, Resource);

    return _possibleConstructorReturn(this, (Resource.__proto__ || Object.getPrototypeOf(Resource)).call(this, props));
  }

  _createClass(Resource, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      //scroll to top of the page
      if (this.props.config && this.props.config.readOnly) {
        (0, _scrollToTop.scrollToTop)();
      }
    }
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI, e) {
      this.context.executeAction(_cloneResource.default, {
        dataset: datasetURI,
        resourceURI: resourceURI
      });
      e.stopPropagation();
    }
  }, {
    key: "handleDeleteResource",
    value: function handleDeleteResource(datasetURI, resourceURI, e) {
      var result = confirm('Are you sure you want to delete this resource?');

      if (result) {
        this.context.executeAction(_deleteResource.default, {
          dataset: datasetURI,
          resourceURI: resourceURI
        });
      }

      e.stopPropagation();
    }
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "resource"
        }, ' ', _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      } //continue


      var readOnly = 1;
      var createdByDIV, createdOnDIV;
      var isUserTheCreator = 0;
      var user = this.context.getUser();
      var self = this;
      var accessLevel, isWriteable, configReadOnly, creatorDIV, dateDIV, annotationMetaDIV, annotationDIV;

      if (typeof self.props.readOnly !== 'undefined') {
        readOnly = self.props.readOnly;
      } else {
        //check the config for resource
        if (self.props.config && typeof self.props.config.readOnly !== 'undefined') {
          readOnly = self.props.config.readOnly;
        }
      } //create a list of properties


      var list = this.props.properties.map(function (node, index) {
        //if there was no config at all or it is hidden, do not render the property
        if (!node.config || !node.config.isHidden) {
          //for readOnly, we first check the defautl value then we check readOnly value of each property if exists
          //this is what comes from the config
          if (readOnly) {
            configReadOnly = true;
          } else {
            if (node.config) {
              if (node.config.readOnly) {
                configReadOnly = true;
              } else {
                configReadOnly = false;
              }
            }
          }

          if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdOn') {
            dateDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdBy') {
            creatorDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#annotatedBy') {
            annotationMetaDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#annotations') {
            annotationDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else {
            return _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          }
        }
      });
      var currentCategory, mainDIV, tabsDIV, tabsContentDIV; //categorize properties in different tabs

      if (this.props.config.usePropertyCategories) {
        currentCategory = this.props.currentCategory;
        var sortedCategories = this.props.config.propertyCategories;
        sortedCategories.sort();

        if (!currentCategory) {
          currentCategory = sortedCategories[0];
        }

        tabsDIV = sortedCategories.map(function (node, index) {
          return _react.default.createElement(_fluxibleRouter.NavLink, {
            className: node === currentCategory ? 'item link active' : 'item link',
            key: index,
            routeName: "resource",
            href: "".concat(PUBLIC_URL, "/dataset/") + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.resource) + '/' + node + '/' + encodeURIComponent(self.props.propertyPath)
          }, node);
        });
        tabsContentDIV = sortedCategories.map(function (node, index) {
          return _react.default.createElement("div", {
            key: index,
            className: node === currentCategory ? 'ui bottom attached tab segment active' : 'ui bottom attached tab segment'
          }, _react.default.createElement("div", {
            className: "ui grid"
          }, _react.default.createElement("div", {
            className: "column ui list"
          }, node === currentCategory ? list : '')));
        });
        mainDIV = _react.default.createElement("div", null, _react.default.createElement(_PatternResourceReactor.PatternResourceReactor, {
          datasetURI: this.props.datasetURI,
          resourceURI: this.props.resource
        }), _react.default.createElement("div", {
          className: "ui top attached tabular menu"
        }, tabsDIV), tabsContentDIV);
      } else {
        mainDIV = _react.default.createElement("div", {
          className: "ui segment"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "column ui list"
        }, _react.default.createElement(_PatternResourceReactor.PatternResourceReactor, {
          datasetURI: this.props.datasetURI,
          resourceURI: this.props.resource
        }), list, annotationDIV, annotationMetaDIV, dateDIV, creatorDIV)));
      }

      var datasetTitle = this.props.datasetURI;

      if (this.props.config && this.props.config.datasetLabel) {
        datasetTitle = this.props.config.datasetLabel;
      }

      var breadcrumb;

      if (self.props.propertyPath.length > 1) {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: "".concat(PUBLIC_URL, "/dataset/1/") + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }), _react.default.createElement("a", {
          className: "section",
          href: "".concat(PUBLIC_URL, "/dataset/") + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.propertyPath[0])
        }, _react.default.createElement("i", {
          className: "cube icon"
        }), _URIUtil.default.getURILabel(self.props.propertyPath[0])), _react.default.createElement("i", {
          className: "big right arrow icon divider"
        }), _react.default.createElement("div", {
          className: "active section"
        }, _URIUtil.default.getURILabel(self.props.propertyPath[1])));
      } else {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: "".concat(PUBLIC_URL, "/dataset/1/") + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }));
      }

      var cloneable = 0;

      if (self.props.config && !this.props.readOnly && typeof self.props.config.allowResourceClone !== 'undefined' && parseInt(self.props.config.allowResourceClone)) {
        cloneable = 1;
      } //do not allow to delete the template resource


      var disableDelete = 0;

      if (self.props.config && typeof self.props.config.templateResource !== 'undefined' && self.props.config.templateResource[0] === self.props.resource) {
        disableDelete = 1;
      }

      var deleteable = 0;

      if (self.props.config && !this.props.readOnly && typeof self.props.config.allowResourceDelete !== 'undefined' && parseInt(self.props.config.allowResourceDelete)) {
        deleteable = 1;
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "resource"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement(_GoToButton.default, {
        style: {}
      }), _react.default.createElement("h2", null, _react.default.createElement("a", {
        target: "_blank",
        href: "".concat(PUBLIC_URL, "/export/NTriples/") + encodeURIComponent(this.props.datasetURI) + '/' + encodeURIComponent(this.props.resource)
      }, _react.default.createElement("i", {
        className: "blue icon cube"
      })), ' ', _react.default.createElement("a", {
        href: this.props.resource,
        target: "_blank"
      }, this.props.title), "\xA0\xA0", cloneable ? _react.default.createElement("a", {
        className: "medium ui circular basic icon button",
        onClick: this.handleCloneResource.bind(this, this.props.datasetURI, decodeURIComponent(this.props.resource)),
        title: "clone this resource"
      }, _react.default.createElement("i", {
        className: "icon teal superscript"
      })) : '', deleteable ? _react.default.createElement("a", {
        className: 'medium ui circular basic icon button' + (disableDelete ? ' disabled' : ''),
        onClick: this.handleDeleteResource.bind(this, this.props.datasetURI, decodeURIComponent(this.props.resource)),
        title: disableDelete ? 'can not delete this resource because it is set as a template resource.' : 'delete this resource'
      }, _react.default.createElement("i", {
        className: "icon red trash"
      })) : ''), mainDIV)));
    }
  }]);

  return Resource;
}(_react.default.Component);

Resource.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
Resource = (0, _fluxibleAddonsReact.connectToStores)(Resource, [], function (context, props) {
  return {
    RouteStore: context.getStore('RouteStore')
  };
});
var _default = Resource;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2074:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deleteIndividualObject;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deleteIndividualObject(context, payload, done) {
  context.service.delete('resource.individualObject', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('DELETE_OBJECT_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('DELETE_INDIVIDUAL_OBJECT_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2075:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deleteProperty;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deleteProperty(context, payload, done) {
  context.service.delete('resource.property', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('DELETE_PROPERTY_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('DELETE_PROPERTY_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2076:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createIndividualObject;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createIndividualObject(context, payload, done) {
  context.service.create('resource.individualObject', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('CREATE_OBJECT_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('CREATE_INDIVIDUAL_OBJECT_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2077:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createIndividualObjectDetail;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createIndividualObjectDetail(context, payload, done) {
  context.service.create('resource.individualObjectDetail', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_OBJECT_DETAIL_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('UPDATE_INDIVIDUAL_OBJECT_DETAIL_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2078:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = updateIndividualObject;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function updateIndividualObject(context, payload, done) {
  context.service.update('resource.individualObject', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_OBJECT_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('UPDATE_INDIVIDUAL_OBJECT_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2079:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = updateIndividualObjectDetail;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function updateIndividualObjectDetail(context, payload, done) {
  context.service.update('resource.individualObjectDetail', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_OBJECT_DETAIL_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('UPDATE_INDIVIDUAL_OBJECT_DETAIL_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2080:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = updateAggObject;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function updateAggObject(context, payload, done) {
  context.service.update('resource.aggObject', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_AGG_OBJECT_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('UPDATE_AGG_OBJECT_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2081:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deleteAggObject;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deleteAggObject(context, payload, done) {
  context.service.delete('resource.aggObject', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('DELETE_AGG_OBJECT_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: payload.dataset,
        resource: payload.resourceURI,
        category: res.category,
        propertyPath: payload.propertyPath
      }, function (err2, res2) {
        context.dispatch('DELETE_AGG_OBJECT_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2082:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _PropertyHeader = _interopRequireDefault(__webpack_require__(359));

var _ObjectReactor = _interopRequireDefault(__webpack_require__(2083));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var IndividualProperty = /*#__PURE__*/function (_React$Component) {
  _inherits(IndividualProperty, _React$Component);

  function IndividualProperty(props) {
    var _this;

    _classCallCheck(this, IndividualProperty);

    _this = _possibleConstructorReturn(this, (IndividualProperty.__proto__ || Object.getPrototypeOf(IndividualProperty)).call(this, props));
    _this.state = {
      inNewValueMode: false,
      showNewInsert: true
    };
    return _this;
  }

  _createClass(IndividualProperty, [{
    key: "handleNewIndividualObject",
    value: function handleNewIndividualObject() {
      this.setState({
        inNewValueMode: 1
      });
    }
  }, {
    key: "handleCancelNewIndividualObject",
    value: function handleCancelNewIndividualObject() {
      this.setState({
        inNewValueMode: 0
      });
    } //considers 0 elements

  }, {
    key: "simulateDefaultValue",
    value: function simulateDefaultValue() {
      var value,
          instances = this.props.spec.instances;

      if (this.props.config && this.props.config.defaultValue) {
        value = this.props.config.defaultValue;
      } else {
        value = 'defaultValue';
      }

      var t;
      instances.forEach(function (v, i) {
        if (instances[i]) {
          t = {
            isDefault: 1,
            value: value,
            valueType: instances[i].valueType,
            dataType: instances[i].dataType
          };
          return t;
        }
      });
      return t;
    } //it is used by AggregateObjectReactor to disable new mode on edit mode

  }, {
    key: "controlNewInsert",
    value: function controlNewInsert(control) {
      this.setState({
        showNewInsert: control
      });
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var newValueDIV, defaultValueDIV, propLabel;

      if (this.props.config && this.props.config.allowNewValue && !this.props.readOnly) {
        propLabel = this.props.config.label ? this.props.config.label : this.props.spec.property;

        if (this.state.inNewValueMode) {
          defaultValueDIV = _react.default.createElement(_ObjectReactor.default, {
            isNewValue: true,
            inEditMode: true,
            key: "defaultValue",
            spec: this.simulateDefaultValue(),
            config: this.props.config,
            datasetURI: this.props.datasetURI,
            resource: this.props.resource,
            property: this.props.property,
            readOnly: false,
            onCreateIndividualObject: this.props.onCreateIndividualObject.bind(this)
          });
          newValueDIV = _react.default.createElement("div", {
            className: "ui list"
          }, _react.default.createElement("div", {
            className: "item"
          }, _react.default.createElement("div", {
            onClick: this.handleCancelNewIndividualObject.bind(this),
            className: "medium ui basic icon labeled button"
          }, _react.default.createElement("i", {
            className: "cancel square large red icon "
          }), ' ', "\xA0 Cancel adding new", ' ', _react.default.createElement("strong", null, " ", propLabel, " "))));
        } else {
          defaultValueDIV = '';
          newValueDIV = _react.default.createElement("div", {
            className: "ui list"
          }, _react.default.createElement("div", {
            className: "item"
          }, _react.default.createElement("div", {
            onClick: this.handleNewIndividualObject.bind(this),
            className: "medium ui basic icon labeled button"
          }, _react.default.createElement("i", {
            className: "plus square large blue icon "
          }), ' ', "\xA0 New ", _react.default.createElement("strong", null, " ", propLabel, " "))), _react.default.createElement("br", null));
        }
      }

      return _react.default.createElement("div", {
        ref: "individualProperty"
      }, this.props.hidePropertyName || this.props.config && this.props.config.hidePropertyName ? '' : _react.default.createElement("div", {
        className: "property-title"
      }, _react.default.createElement("div", {
        className: "ui horizontal list"
      }, _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement(_PropertyHeader.default, {
        spec: this.props.spec,
        config: this.props.config,
        size: "3",
        datasetURI: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyURI: this.props.property
      }))), _react.default.createElement("div", {
        className: "ui dividing header"
      })), _react.default.createElement("div", {
        className: "property-objects"
      }, _react.default.createElement(_ObjectReactor.default, {
        enableAuthentication: this.props.enableAuthentication,
        readOnly: this.props.readOnly,
        inEditMode: this.props.inEditMode,
        datasetURI: this.props.datasetURI,
        resource: this.props.resource,
        property: this.props.property,
        propertyPath: this.props.propertyPath,
        spec: this.props.spec,
        config: this.props.config,
        onCreateIndividualObject: this.props.onCreateIndividualObject.bind(this),
        onDeleteIndividualObject: this.props.onDeleteIndividualObject.bind(this),
        onUpdateIndividualObject: this.props.onUpdateIndividualObject.bind(this),
        onDetailCreateIndividualObject: this.props.onDetailCreateIndividualObject.bind(this),
        onDetailUpdateIndividualObject: this.props.onDetailUpdateIndividualObject.bind(this),
        onUpdateAggObject: this.props.onUpdateAggObject.bind(this),
        onDeleteAggObject: this.props.onDeleteAggObject.bind(this),
        onControlNewInsert: this.controlNewInsert.bind(this)
      })), defaultValueDIV, this.state.showNewInsert ? newValueDIV : '');
    }
  }]);

  return IndividualProperty;
}(_react.default.Component);

var _default = IndividualProperty;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2083:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleAddonsReact = __webpack_require__(79);

var _loadObjectProperties = _interopRequireDefault(__webpack_require__(2084));

var _IndividualObjectStore = _interopRequireDefault(__webpack_require__(1061));

var _fluxibleRouter = __webpack_require__(34);

var _IndividualObject = _interopRequireDefault(__webpack_require__(1062));

var _AggregateObject = _interopRequireDefault(__webpack_require__(2199));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ObjectReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(ObjectReactor, _React$Component);

  function ObjectReactor(props) {
    _classCallCheck(this, ObjectReactor);

    return _possibleConstructorReturn(this, (ObjectReactor.__proto__ || Object.getPrototypeOf(ObjectReactor)).call(this, props));
  }

  _createClass(ObjectReactor, [{
    key: "handleShowDetails",
    value: function handleShowDetails(objectURI) {
      this.context.executeAction(_loadObjectProperties.default, {
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyURI: this.props.property,
        objectURI: objectURI
      });
    }
  }, {
    key: "includesProperty",
    value: function includesProperty(list, resource, property) {
      var out = false;
      list.forEach(function (el) {
        if (el.r === resource && el.p === property) {
          out = true;
          return out;
        }
      });
      return out;
    } //considers 0 elements

  }, {
    key: "calculateValueCount",
    value: function calculateValueCount(instances) {
      var count = 0;
      instances.forEach(function (v, i) {
        if (instances[i]) {
          count++;
        }
      });
      return count;
    } //removes properties from an object

  }, {
    key: "configMinus",
    value: function configMinus(config, props) {
      var o = {};

      for (var p in config) {
        if (props.indexOf(p) === -1) {
          o[p] = config[p];
        }
      }

      return o;
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var list,
          user = this.context.getUser();

      if (this.props.isNewValue) {
        list = _react.default.createElement(_IndividualObject.default, {
          key: "newValueInput",
          isNewValue: true,
          inEditMode: true,
          spec: self.props.spec,
          datasetURI: self.props.datasetURI,
          resource: self.props.resource,
          property: self.props.property,
          onCreate: self.props.onCreateIndividualObject.bind(self),
          config: self.configMinus(self.props.config, ['objectReactor'])
        });
      } else {
        //check if it is the only value of a property -> used to hide delete button
        var isOnlyChild = this.calculateValueCount(this.props.spec.instances) === 1;
        var objectReactorType, accessLevel, readOnly;

        if (this.props.config) {
          if (!this.props.config.objectReactor) {
            objectReactorType = 'IndividualObject';
          } else {
            objectReactorType = this.props.config.objectReactor[0];
          }
        }

        if (objectReactorType) {
          switch (objectReactorType) {
            case 'IndividualObject':
              list = this.props.spec.instances.map(function (node, index) {
                if (!node) {
                  return undefined; // stop processing this iteration
                } //check access level for details


                readOnly = self.props.readOnly;
                return _react.default.createElement(_IndividualObject.default, {
                  key: index,
                  inEditMode: self.props.inEditMode,
                  isNewValue: false,
                  readOnly: readOnly,
                  spec: node,
                  datasetURI: self.props.datasetURI,
                  resource: self.props.resource,
                  property: self.props.spec.propertyURI,
                  isOnlyChild: isOnlyChild,
                  onCreate: self.props.onCreateIndividualObject.bind(self),
                  onDelete: self.props.onDeleteIndividualObject.bind(self),
                  onUpdate: self.props.onUpdateIndividualObject.bind(self),
                  onDetailCreate: self.props.onDetailCreateIndividualObject.bind(self),
                  onDetailUpdate: self.props.onDetailUpdateIndividualObject.bind(self),
                  onShowDetail: self.handleShowDetails.bind(self),
                  config: self.configMinus(self.props.config, ['objectReactor']),
                  objectTypes: self.props.ObjectReactor ? self.props.ObjectReactor.objectTypes : {},
                  objectProperties: self.props.ObjectReactor ? self.props.ObjectReactor.objectProperties : {}
                });
              });
              break;

            case 'AggregateObject':
              list = _react.default.createElement(_AggregateObject.default, {
                inEditMode: self.props.inEditMode,
                readOnly: self.props.readOnly,
                isNewValue: false,
                spec: self.props.spec,
                datasetURI: self.props.datasetURI,
                resource: self.props.resource,
                property: self.props.spec.propertyURI,
                onIndividualDelete: self.props.onDeleteIndividualObject.bind(self),
                onIndividualUpdate: self.props.onUpdateIndividualObject.bind(self),
                onDelete: self.props.onDeleteAggObject.bind(self),
                onUpdate: self.props.onUpdateAggObject.bind(self),
                onDetailCreate: self.props.onDetailCreateIndividualObject.bind(self),
                onDetailUpdate: self.props.onDetailUpdateIndividualObject.bind(self),
                controlNewInsert: self.props.onControlNewInsert.bind(self),
                config: self.configMinus(self.props.config, ['objectReactor'])
              });
              break;

            default:
              list = this.props.spec.instances.map(function (node, index) {
                if (!node) {
                  return undefined; // stop processing this iteration
                } //check access level for details


                readOnly = self.props.readOnly;
                return _react.default.createElement(_IndividualObject.default, {
                  key: index,
                  inEditMode: self.props.inEditMode,
                  readOnly: readOnly,
                  isNewValue: false,
                  spec: node,
                  datasetURI: self.props.datasetURI,
                  resource: self.props.resource,
                  property: self.props.spec.propertyURI,
                  isOnlyChild: isOnlyChild,
                  onCreate: self.props.onCreateIndividualObject.bind(self),
                  onDelete: self.props.onDeleteIndividualObject.bind(self),
                  onUpdate: self.props.onUpdateIndividualObject.bind(self),
                  onDetailCreate: self.props.onDetailCreateIndividualObject.bind(self),
                  onDetailUpdate: self.props.onDetailUpdateIndividualObject.bind(self),
                  onShowDetail: self.handleShowDetails.bind(self),
                  config: self.configMinus(self.props.config, ['objectReactor']),
                  objectTypes: self.props.ObjectReactor ? self.props.ObjectReactor.objectTypes : {},
                  objectProperties: self.props.ObjectReactor ? self.props.ObjectReactor.objectProperties : {}
                });
              });
          }
        }
      }

      return _react.default.createElement("div", {
        ref: "objectReactor"
      }, list);
    }
  }]);

  return ObjectReactor;
}(_react.default.Component);

ObjectReactor.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
ObjectReactor = (0, _fluxibleAddonsReact.connectToStores)(ObjectReactor, [_IndividualObjectStore.default], function (context, props) {
  return {
    ObjectReactor: context.getStore(_IndividualObjectStore.default).getState()
  };
});
var _default = ObjectReactor;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2084:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadObjectProperties;

function loadObjectProperties(context, payload, done) {
  context.dispatch('LOADING_DATA', {});
  context.service.read('resource.objectProperties', payload, {
    timeout: 20 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('LOAD_OBJECT_PROPERTIES_FAILURE', err);
    } else {
      context.dispatch('LOAD_OBJECT_PROPERTIES_SUCCESS', res);
    }

    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2085:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A simple textarea component to edit large text
*/
var BasicTextareaInput = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicTextareaInput, _React$Component);

  function BasicTextareaInput(props) {
    var _this;

    _classCallCheck(this, BasicTextareaInput);

    _this = _possibleConstructorReturn(this, (BasicTextareaInput.__proto__ || Object.getPrototypeOf(BasicTextareaInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue(_this.props.spec.valueType, _this.props.spec.dataType);
    }

    _this.state = {
      value: v
    };
    return _this;
  }

  _createClass(BasicTextareaInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.basicTextareaInput).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "getRandomNumber",
    value: function getRandomNumber() {
      return Math.round(+new Date() / 1000);
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue(valueType, dataType) {
      if (this.props.config && this.props.config.defaultValue) {
        return this.props.config.defaultValue[0];
      } else {
        if (valueType === 'uri') {
          return 'http://example.com/' + this.getRandomNumber();
        } else {
          return 'exampleValue' + this.getRandomNumber();
        }
      }
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      this.props.onDataEdit(event.target.value);
      this.setState({
        value: event.target.value
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "ui"
      }, _react.default.createElement("textarea", {
        ref: "basicTextareaInput",
        value: this.state.value,
        onChange: this.handleChange.bind(this)
      }));
    }
  }]);

  return BasicTextareaInput;
}(_react.default.Component);

var _default = BasicTextareaInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2086:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _PropertyHeader = _interopRequireDefault(__webpack_require__(359));

var _ObjectIEditor = _interopRequireDefault(__webpack_require__(552));

var _BasicIndividualInput = _interopRequireDefault(__webpack_require__(553));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A component to edit object properties
*/
var BasicIndividualDetailEdit = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicIndividualDetailEdit, _React$Component);

  function BasicIndividualDetailEdit(props) {
    var _this;

    _classCallCheck(this, BasicIndividualDetailEdit);

    _this = _possibleConstructorReturn(this, (BasicIndividualDetailEdit.__proto__ || Object.getPrototypeOf(BasicIndividualDetailEdit)).call(this, props));
    _this.state = {};
    return _this;
  }

  _createClass(BasicIndividualDetailEdit, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var currentComp = this.refs.detailPropertiesEdit;
    }
  }, {
    key: "handleDataEdit",
    value: function handleDataEdit(value) {
      this.props.onDataEdit(value);
    }
  }, {
    key: "handleDetailDataEdit",
    value: function handleDetailDataEdit(propertyURI, valueType, dataType, value) {
      this.state[propertyURI] = {
        value: value,
        valueType: valueType,
        dataType: dataType
      };
      this.props.onDetailDataEdit(this.state);
    }
  }, {
    key: "handleEnterPress",
    value: function handleEnterPress() {
      this.props.onEnterPress();
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var list = this.props.spec.extendedViewData.map(function (node, index) {
        if (node.config && !node.config.readOnly) {
          var llist = node.spec.instances.map(function (instance, index2) {
            return _react.default.createElement(_ObjectIEditor.default, {
              noFocus: "1",
              key: index + '_' + index2,
              spec: instance,
              config: node.config,
              datasetURI: self.props.datasetURI,
              onDataEdit: self.handleDetailDataEdit.bind(self, node.spec.propertyURI, instance.valueType, instance.dataType)
            });
          });
          return _react.default.createElement("div", {
            className: "item",
            key: index
          }, _react.default.createElement("div", {
            className: "ui"
          }, _react.default.createElement("div", {
            className: "ui horizontal list"
          }, _react.default.createElement("div", {
            className: "item"
          }, _react.default.createElement(_PropertyHeader.default, {
            spec: node.spec,
            config: node.config,
            size: "4"
          }))), _react.default.createElement("div", {
            className: "ui dividing header"
          }), _react.default.createElement("div", {
            className: "fourteen wide column field list"
          }, llist), _react.default.createElement("div", {
            className: "one wide column field"
          })));
        }
      });
      return _react.default.createElement("div", {
        ref: "detailPropertiesEdit"
      }, _react.default.createElement("div", {
        className: "ui attached primary segment"
      }, _react.default.createElement("div", {
        className: "ui list"
      }, list)));
    }
  }]);

  return BasicIndividualDetailEdit;
}(_react.default.Component);

var _default = BasicIndividualDetailEdit;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2087:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _BasicIndividualInput = _interopRequireDefault(__webpack_require__(553));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
a dropdown list of items as input
*/
var BasicOptionInput = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicOptionInput, _React$Component);

  function BasicOptionInput(props) {
    var _this;

    _classCallCheck(this, BasicOptionInput);

    _this = _possibleConstructorReturn(this, (BasicOptionInput.__proto__ || Object.getPrototypeOf(BasicOptionInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue(_this.props.spec.valueType, _this.props.spec.dataType);
    }

    _this.state = {
      value: v,
      userDefinedMode: 0
    };
    return _this;
  }

  _createClass(BasicOptionInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.basicInputSelect).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue(valueType, dataType) {
      return this.props.config.defaultValue ? this.props.config.defaultValue[0] : '';
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      if (event.target.value === 'other') {
        this.setState({
          userDefinedMode: 1
        });
      } else {
        this.props.onDataEdit(event.target.value);
        this.setState({
          value: event.target.value
        });
      }
    }
  }, {
    key: "handleDataEdit",
    value: function handleDataEdit(value) {
      this.props.onDataEdit(value);
    }
  }, {
    key: "handleEnterPress",
    value: function handleEnterPress() {
      this.props.onEnterPress();
    }
  }, {
    key: "buildOptions",
    value: function buildOptions() {
      var self = this;
      var optionsList;
      var notInOptions = 1;

      if (this.props.config && this.props.config.options) {
        optionsList = this.props.config.options.map(function (option, index) {
          if (option.value && option.label) {
            if (self.props.spec.value === option.value) {
              notInOptions = 0;
            }

            return _react.default.createElement("option", {
              key: index,
              value: option.value
            }, " ", option.label, " ");
          } else {
            if (self.props.spec.value === option) {
              notInOptions = 0;
            }

            return _react.default.createElement("option", {
              key: index,
              value: option
            }, " ", option, " ");
          }
        });
      } else {
        optionsList = _react.default.createElement("option", {
          value: "0"
        }, " No option found in config! ");
      }

      if (notInOptions) {
        optionsList.push(_react.default.createElement("option", {
          key: self.props.config.options.length + 1,
          value: self.props.spec.value
        }, " ", self.props.spec.value, " "));
      }

      return optionsList;
    }
  }, {
    key: "render",
    value: function render() {
      var output;

      if (this.state.userDefinedMode) {
        output = _react.default.createElement(_BasicIndividualInput.default, {
          spec: {
            value: '',
            valueType: this.props.spec.valueType,
            dataType: this.props.spec.dataType
          },
          config: this.props.config,
          onDataEdit: this.handleDataEdit.bind(this),
          onEnterPress: this.handleEnterPress.bind(this),
          allowActionByKey: true
        });
      } else {
        var optionList = this.buildOptions();
        output = _react.default.createElement("div", {
          className: "field"
        }, _react.default.createElement("select", {
          className: "ui search dropdown",
          ref: "basicInputSelect",
          value: this.state.value,
          onChange: this.handleChange.bind(this)
        }, optionList, this.props.config.allowUserDefinedValue ? _react.default.createElement("option", {
          value: "other"
        }, " **Other** ") : ''));
      }

      return _react.default.createElement("div", {
        className: "content ui form",
        ref: "basicOptionInput"
      }, output);
    }
  }]);

  return BasicOptionInput;
}(_react.default.Component);

var _default = BasicOptionInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2088:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _fluxibleAddonsReact = __webpack_require__(79);

var _lookupDBpedia = _interopRequireDefault(__webpack_require__(2089));

var _DBpediaStore = _interopRequireDefault(__webpack_require__(1063));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A component to search and add resources from DBpedia
*/
var DBpediaInput = /*#__PURE__*/function (_React$Component) {
  _inherits(DBpediaInput, _React$Component);

  function DBpediaInput(props) {
    var _this;

    _classCallCheck(this, DBpediaInput);

    _this = _possibleConstructorReturn(this, (DBpediaInput.__proto__ || Object.getPrototypeOf(DBpediaInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue(_this.props.spec.valueType, _this.props.spec.dataType);
    }

    _this.state = {
      value: v
    };
    return _this;
  }

  _createClass(DBpediaInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.basicIndividualInput).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(evt) {
      if (this.props.allowActionByKey) {
        switch (evt.keyCode) {
          //case 9: // Tab
          case 13:
            // Enter
            this.props.onEnterPress();
            break;
        }
      }
    }
  }, {
    key: "getRandomNumber",
    value: function getRandomNumber() {
      return Math.round(+new Date() / 1000);
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue(valueType, dataType) {
      if (this.props.config && this.props.config.defaultValue) {
        return this.props.config.defaultValue[0];
      } else {
        return '';
      }
    }
  }, {
    key: "addSuggestion",
    value: function addSuggestion(uri) {
      var self = this;
      this.setState({
        value: uri
      });
      this.emptySuggesstions();
      this.props.onDataEdit(uri); //simulate pressing enter

      setTimeout(function () {
        self.props.onEnterPress();
      }, 150);
    }
  }, {
    key: "emptySuggesstions",
    value: function emptySuggesstions() {
      var currentComp = this.refs.dbpediaLookup;
      /*global $*/

      $(currentComp).find('.transition').removeClass('visible');
      this.props.DBpediaStore.suggestions = [];
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      var term = event.target.value;
      var currentComp = this.refs.dbpediaLookup;
      this.setState({
        value: term
      });
      this.props.onDataEdit(term); //handle autocomplete here

      if (term.length > 2) {
        /*global $*/
        $(currentComp).find('.transition').addClass('visible');
        this.context.executeAction(_lookupDBpedia.default, {
          query: term,
          lookupClass: this.props.config ? this.props.config.lookupClass ? this.props.config.lookupClass : '' : ''
        });
      } else {
        this.emptySuggesstions();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var placeHolder = ' Search and choose from DBpedia';

      if (this.props.asWikipedia) {
        placeHolder = ' Search and choose from Wikipedia';
      }

      var suggestions = this.props.DBpediaStore.suggestions.map(function (node, index) {
        return _react.default.createElement("a", {
          className: "result",
          key: 'suggestion_' + index,
          onClick: self.addSuggestion.bind(self, node.uri)
        }, _react.default.createElement("div", {
          className: "content"
        }, _react.default.createElement("div", {
          className: "title"
        }, node.title), _react.default.createElement("div", {
          className: "description"
        }, node.description)));
      });
      return _react.default.createElement("div", {
        className: "ui fluid search left icon input",
        ref: "dbpediaLookup"
      }, _react.default.createElement("input", {
        ref: "basicIndividualInput",
        type: "text",
        placeholder: placeHolder,
        value: this.state.value,
        onChange: this.handleChange.bind(this),
        onKeyDown: this.handleKeyDown.bind(this)
      }), _react.default.createElement("i", {
        className: "search icon"
      }), _react.default.createElement("div", {
        className: "transition results"
      }, " ", suggestions, " "));
    }
  }]);

  return DBpediaInput;
}(_react.default.Component);

DBpediaInput.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
DBpediaInput = (0, _fluxibleAddonsReact.connectToStores)(DBpediaInput, [_DBpediaStore.default], function (context, props) {
  return {
    DBpediaStore: context.getStore(_DBpediaStore.default).getState()
  };
});
var _default = DBpediaInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2089:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lookupDBpedia;

function lookupDBpedia(context, payload, done) {
  context.service.read('dbpedia.lookup', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('LOOKUP_DBPEDIA_FAILURE', err);
    } else {
      context.dispatch('LOOKUP_DBPEDIA_SUCCESS', res);
    }

    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2090:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _passwordHash = _interopRequireDefault(__webpack_require__(2091));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A component to edit password/hidden values
*/
var PasswordInput = /*#__PURE__*/function (_React$Component) {
  _inherits(PasswordInput, _React$Component);

  function PasswordInput(props) {
    var _this;

    _classCallCheck(this, PasswordInput);

    _this = _possibleConstructorReturn(this, (PasswordInput.__proto__ || Object.getPrototypeOf(PasswordInput)).call(this, props));
    var v = _this.props.spec.value;
    _this.state = {
      value: ''
    };
    return _this;
  }

  _createClass(PasswordInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.passwordInput).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(evt) {
      if (this.props.allowActionByKey) {
        switch (evt.keyCode) {
          //case 9: // Tab
          case 13:
            // Enter
            this.props.onEnterPress();
            break;
        }
      }
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      this.props.onDataEdit(_passwordHash.default.generate(event.target.value.trim()));
      this.setState({
        value: event.target.value
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "ui"
      }, _react.default.createElement("input", {
        ref: "passwordInput",
        type: "password",
        value: this.state.value,
        placeholder: this.props.placeholder ? this.props.placeholder : '',
        onChange: this.handleChange.bind(this),
        onKeyDown: this.handleKeyDown.bind(this)
      }));
    }
  }]);

  return PasswordInput;
}(_react.default.Component);

var _default = PasswordInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2116:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2118:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2119:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2124:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2126:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2139:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2151:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2154:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2157:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _languages = __webpack_require__(491);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A component to add standard language values
*/
var LanguageInput = /*#__PURE__*/function (_React$Component) {
  _inherits(LanguageInput, _React$Component);

  function LanguageInput(props) {
    var _this;

    _classCallCheck(this, LanguageInput);

    _this = _possibleConstructorReturn(this, (LanguageInput.__proto__ || Object.getPrototypeOf(LanguageInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue(_this.props.spec.valueType, _this.props.spec.dataType);
    }

    _this.state = {
      value: v
    };
    return _this;
  }

  _createClass(LanguageInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.languageInputSelect).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue(valueType, dataType) {
      if (this.props.config && this.props.config.defaultValue) {
        return this.props.config.defaultValue[0];
      } else {
        return 'http://id.loc.gov/vocabulary/iso639-1/en';
      }
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      this.props.onDataEdit(event.target.value);
      this.setState({
        value: event.target.value
      });
    }
  }, {
    key: "buildOptions",
    value: function buildOptions(data) {
      var optionsList = data.map(function (lang, index) {
        return _react.default.createElement("option", {
          key: index,
          value: 'http://id.loc.gov/vocabulary/iso639-1/' + lang.code
        }, " ", lang.name, "-", lang.nativeName);
      });
      return optionsList;
    }
  }, {
    key: "render",
    value: function render() {
      var optionList = this.buildOptions(_languages.list);
      return _react.default.createElement("div", {
        className: "content ui form",
        ref: "languageInput"
      }, _react.default.createElement("div", {
        className: "field"
      }, _react.default.createElement("select", {
        className: "ui search dropdown",
        ref: "languageInputSelect",
        value: this.state.value,
        onChange: this.handleChange.bind(this)
      }, optionList)));
    }
  }]);

  return LanguageInput;
}(_react.default.Component);

var _default = LanguageInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2158:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _rcCalendar = _interopRequireDefault(__webpack_require__(2403));

var _moment = _interopRequireDefault(__webpack_require__(7));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

if (true) {
  __webpack_require__(2196);
}
/*----config
    calendarFormat
------------*/

/**
A calendar to choose date/time values from
*/


var BasicCalendarInput = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicCalendarInput, _React$Component);

  function BasicCalendarInput(props) {
    var _this;

    _classCallCheck(this, BasicCalendarInput);

    _this = _possibleConstructorReturn(this, (BasicCalendarInput.__proto__ || Object.getPrototypeOf(BasicCalendarInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue();
    }

    _this.state = {
      value: v
    };
    return _this;
  }

  _createClass(BasicCalendarInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.basicCalendarInput).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "getFormat",
    value: function getFormat() {
      //default format
      var format = 'YYYY-MM-DD'; //YYYY-MM-DD\\THH:mm:ss\\Z

      if (this.props.config && this.props.config.calendarFormat) {
        format = this.props.config.calendarFormat;
      }

      return format;
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue() {
      return (0, _moment.default)();
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      var v = (0, _moment.default)(event).format(this.getFormat());
      this.props.onDataEdit(v);
      this.setState({
        value: (0, _moment.default)(event)
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicCalendarInput"
      }, _react.default.createElement(_rcCalendar.default, {
        value: (0, _moment.default)(this.state.value),
        format: this.getFormat(),
        onChange: this.handleChange.bind(this)
      }));
    }
  }]);

  return BasicCalendarInput;
}(_react.default.Component);

var _default = BasicCalendarInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2198:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A simple toggle/checkbox component
*/
var ToggleEdit = /*#__PURE__*/function (_React$Component) {
  _inherits(ToggleEdit, _React$Component);

  function ToggleEdit(props) {
    var _this;

    _classCallCheck(this, ToggleEdit);

    _this = _possibleConstructorReturn(this, (ToggleEdit.__proto__ || Object.getPrototypeOf(ToggleEdit)).call(this, props));
    var v = _this.props.spec.value;
    var onValue = '1';
    var offValue = '0';

    if (_this.props.config) {
      if (_this.props.config.onValue) {
        onValue = _this.props.config.onValue;
      }

      if (_this.props.config.offValue) {
        offValue = _this.props.config.offValue;
      }
    }

    _this['onValue'] = onValue;
    _this['offValue'] = offValue;
    _this.state = {
      value: v
    };
    return _this;
  }

  _createClass(ToggleEdit, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      var newVal = String(event.target.value) === String(this['onValue']) ? String(this['offValue']) : String(this['onValue']);
      this.props.onDataEdit(newVal);
      this.setState({
        value: newVal
      });
    }
  }, {
    key: "render",
    value: function render() {
      var val = this.props.spec.value;
      return _react.default.createElement("div", {
        ref: "toggleEdit"
      }, String(this.state.value) !== String(this['onValue']) ? this.state.value : '', _react.default.createElement("div", {
        className: "ui fitted toggle checkbox",
        title: val
      }, _react.default.createElement("input", {
        type: "checkbox",
        value: this.state.value,
        onChange: this.handleChange.bind(this),
        checked: String(this.state.value) === String(this['onValue'])
      }), _react.default.createElement("label", null, this.state.value)), String(this.state.value) === String(this['onValue']) ? this.state.value : '');
    }
  }]);

  return ToggleEdit;
}(_react.default.Component);

var _default = ToggleEdit;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2199:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _IndividualObject = _interopRequireDefault(__webpack_require__(1062));

var _ObjectAViewer = _interopRequireDefault(__webpack_require__(2200));

var _ObjectAEditor = _interopRequireDefault(__webpack_require__(2203));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var AggregateObjectReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(AggregateObjectReactor, _React$Component);

  function AggregateObjectReactor(props) {
    var _this;

    _classCallCheck(this, AggregateObjectReactor);

    _this = _possibleConstructorReturn(this, (AggregateObjectReactor.__proto__ || Object.getPrototypeOf(AggregateObjectReactor)).call(this, props));
    _this.state = {
      changes: {},
      inEditMode: _this.props.inEditMode ? 1 : 0,
      showDelete: false
    };
    return _this;
  }

  _createClass(AggregateObjectReactor, [{
    key: "handleEdit",
    value: function handleEdit() {
      //disable new mode
      this.props.controlNewInsert(false);
      this.setState({
        inEditMode: 1
      });
    }
  }, {
    key: "handleSave",
    value: function handleSave() {
      var changes = this.prepareUpdateAggData(this.state.changes);
      this.props.onUpdate(changes);
      this.props.controlNewInsert(true);
      this.setState({
        inEditMode: 0
      });
    }
  }, {
    key: "handleUndo",
    value: function handleUndo() {
      this.props.controlNewInsert(true);
      this.setState({
        inEditMode: 0
      });
    }
  }, {
    key: "handleAggDataEdit",
    value: function handleAggDataEdit(changes) {
      this.setState({
        changes: changes
      });
      this.canShowDelete(changes);
    }
  }, {
    key: "handleAggDelete",
    value: function handleAggDelete() {
      var changes = this.prepareDeleteAggData(this.state.changes);
      this.props.onDelete(changes);
      this.setState({
        inEditMode: 0
      });
      this.props.controlNewInsert(true);
    }
  }, {
    key: "canShowDelete",
    value: function canShowDelete(changes) {
      var counter = 0;
      var total = this.props.spec.instances.length;

      for (var prop in changes) {
        if (changes[prop].checked === true) {
          counter++;
        }
      } //does not allow deleting all items


      if (counter > 0 && counter < total) {
        this.setState({
          showDelete: true
        });
      } else {
        this.setState({
          showDelete: false
        });
      }
    } //filters unchanged data

  }, {
    key: "prepareUpdateAggData",
    value: function prepareUpdateAggData(changes) {
      var cleaned = [];

      for (var prop in changes) {
        if (changes[prop].oldValue !== changes[prop].newValue) {
          cleaned.push(changes[prop]);
        }
      }

      return cleaned;
    } //filters unchecked data

  }, {
    key: "prepareDeleteAggData",
    value: function prepareDeleteAggData(changes) {
      var cleaned = [];

      for (var prop in changes) {
        if (changes[prop].checked) {
          cleaned.push(changes[prop]);
        }
      }

      return cleaned;
    }
  }, {
    key: "render",
    value: function render() {
      var isIndividual = false;
      var dataViewType,
          dataEditType,
          self = this;

      if (this.state.inEditMode) {
        if (this.props.config) {
          if (this.props.config.objectAEditor) {
            dataEditType = _react.default.createElement(_ObjectAEditor.default, {
              isDefault: false,
              property: this.props.property,
              spec: this.props.spec,
              config: this.props.config,
              onAggDataEdit: this.handleAggDataEdit.bind(this)
            });
          } else {
            isIndividual = true;
            dataEditType = this.props.spec.instances.map(function (node, index) {
              if (!node) {
                return undefined; // stop processing this iteration
              }

              return _react.default.createElement(_IndividualObject.default, {
                key: index,
                inEditMode: true,
                readOnly: self.props.readOnly,
                spec: node,
                config: self.props.config,
                datasetURI: self.props.datasetURI,
                resource: self.props.resource,
                property: self.props.property,
                isOnlyChild: self.props.isOnlyChild,
                onDelete: self.props.onIndividualDelete,
                onUpdate: self.props.onIndividualUpdate,
                onDetailUpdate: self.props.onIndividualDetailUpdate
              });
            });
          }
        }
      } else {
        if (this.props.config) {
          if (this.props.config.objectAViewer) {
            dataViewType = _react.default.createElement(_ObjectAViewer.default, {
              datasetURI: this.props.datasetURI,
              resource: this.props.resource,
              property: this.props.property,
              spec: this.props.spec,
              config: this.props.config
            });
          } else {
            isIndividual = true;
            dataViewType = this.props.spec.instances.map(function (node, index) {
              if (!node) {
                return undefined; // stop processing this iteration
              }

              return _react.default.createElement(_IndividualObject.default, {
                key: index,
                inEditMode: false,
                readOnly: self.props.readOnly,
                spec: node,
                config: self.props.config,
                datasetURI: self.props.datasetURI,
                resource: self.props.resource,
                property: self.props.property,
                isOnlyChild: self.props.isOnlyChild,
                onDelete: self.props.onIndividualDelete,
                onUpdate: self.props.onIndividualUpdate,
                onDetailUpdate: self.props.onIndividualDetailUpdate
              });
            });
          }
        }
      }

      var editDIV, saveDIV, undoDIV, deleteDIV;

      if (!this.props.readOnly) {
        editDIV = _react.default.createElement("div", {
          ref: "edit",
          title: "edit",
          onClick: this.handleEdit.bind(this),
          className: "medium ui circular basic icon button"
        }, _react.default.createElement("i", {
          className: "edit large blue icon link "
        }));

        if (!isIndividual) {
          saveDIV = _react.default.createElement("div", {
            ref: "save",
            title: "save",
            onClick: this.handleSave.bind(this),
            className: "medium ui circular basic icon button"
          }, _react.default.createElement("i", {
            className: "save large green icon link "
          }));
        }

        undoDIV = _react.default.createElement("div", {
          ref: "undo",
          title: "undo",
          onClick: this.handleUndo.bind(this),
          className: "medium ui circular basic icon button"
        }, _react.default.createElement("i", {
          className: "undo large blue icon link "
        }));

        if (this.props.config && this.props.config.allowNewValue && !this.props.isOnlyChild) {
          deleteDIV = _react.default.createElement("div", {
            ref: "delete",
            title: "delete",
            onClick: this.handleAggDelete.bind(this),
            className: "medium ui circular basic icon button"
          }, _react.default.createElement("i", {
            className: "trash alternate outline large red icon link "
          }));
        }
      }

      if (this.state.inEditMode) {
        return _react.default.createElement("div", {
          className: "ui list",
          ref: "aggregateObjectReactor"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "ui form grid"
        }, _react.default.createElement("div", {
          className: "twelve wide column field"
        }, dataEditType), _react.default.createElement("div", {
          className: "four wide column field animated fadeInLeft"
        }, saveDIV, this.state.showDelete ? deleteDIV : '', undoDIV))));
      } else {
        return _react.default.createElement("div", {
          className: "ui list",
          ref: "aggregateObjectReactor"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "ui form grid"
        }, _react.default.createElement("div", {
          className: "twelve wide column field"
        }, dataViewType), _react.default.createElement("div", {
          className: "four wide column field animated fadeInLeft"
        }, editDIV))));
      }
    }
  }]);

  return AggregateObjectReactor;
}(_react.default.Component);

var _default = AggregateObjectReactor;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2200:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _BasicAggregateView = _interopRequireDefault(__webpack_require__(1108));

var _DBpediaMapView = _interopRequireDefault(__webpack_require__(2201));

var _BasicAggregateMapView = _interopRequireDefault(__webpack_require__(498));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ObjectAViewer = /*#__PURE__*/function (_React$Component) {
  _inherits(ObjectAViewer, _React$Component);

  function ObjectAViewer() {
    _classCallCheck(this, ObjectAViewer);

    return _possibleConstructorReturn(this, (ObjectAViewer.__proto__ || Object.getPrototypeOf(ObjectAViewer)).apply(this, arguments));
  }

  _createClass(ObjectAViewer, [{
    key: "render",
    value: function render() {
      var viewer,
          viewerConfig = '';

      if (this.props.config) {
        if (this.props.config.objectAViewer) {
          viewerConfig = this.props.config.objectAViewer[0];
        }
      }

      switch (viewerConfig) {
        case 'BasicAggregateView':
          viewer = _react.default.createElement(_BasicAggregateView.default, {
            property: this.props.property,
            spec: this.props.spec,
            config: this.props.config
          });
          break;

        case 'DBpediaMapView':
          viewer = _react.default.createElement(_DBpediaMapView.default, {
            property: this.props.property,
            spec: this.props.spec,
            config: this.props.config
          });
          break;

        case 'BasicAggregateMapView':
          viewer = _react.default.createElement(_BasicAggregateMapView.default, {
            property: this.props.property,
            spec: this.props.spec,
            config: this.props.config
          });
          break;

        default:
          viewer = _react.default.createElement(_BasicAggregateView.default, {
            property: this.props.property,
            spec: this.props.spec,
            config: this.props.config
          });
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "objectAViewer"
      }, viewer);
    }
  }]);

  return ObjectAViewer;
}(_react.default.Component);

var _default = ObjectAViewer;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2201:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleAddonsReact = __webpack_require__(79);

var _LeafletMapView = _interopRequireDefault(__webpack_require__(492));

var _BasicAggregateView = _interopRequireDefault(__webpack_require__(1108));

var _DBpediaGMapStore = _interopRequireDefault(__webpack_require__(1109));

var _getCoordinates = _interopRequireDefault(__webpack_require__(2202));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Displays DBpedia resources which have coordinates on a map
*/
var DBpediaMapView = /*#__PURE__*/function (_React$Component) {
  _inherits(DBpediaMapView, _React$Component);

  function DBpediaMapView(props) {
    _classCallCheck(this, DBpediaMapView);

    return _possibleConstructorReturn(this, (DBpediaMapView.__proto__ || Object.getPrototypeOf(DBpediaMapView)).call(this, props));
  }

  _createClass(DBpediaMapView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      //initialize map
      this.context.executeAction(_getCoordinates.default, {
        property: this.props.property,
        uris: this.prepareURIs(this.props.spec.instances)
      });
    }
  }, {
    key: "prepareURIs",
    value: function prepareURIs(instances) {
      var uris = [];
      instances.forEach(function (node) {
        if (node.value.search('dbpedia.org') !== -1) {
          uris.push(node.value);
        }
      });
      return uris;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var newProps = this.props;
      var uris = this.prepareURIs(newProps.spec.instances);

      if (prevProps.spec.instances.length !== newProps.spec.instances.length) {
        this.context.executeAction(_getCoordinates.default, {
          property: this.props.property,
          uris: uris
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        ref: "DBpediaMapView"
      }, this.props.DBpediaGMapStore.coordinates[this.props.property] && this.props.DBpediaGMapStore.coordinates[this.props.property].length ? _react.default.createElement(_LeafletMapView.default, {
        key: this.props.DBpediaGMapStore.coordinates[this.props.property].length,
        markers: this.props.DBpediaGMapStore.coordinates[this.props.property],
        zoomLevel: 3,
        center: {
          lat: 48.2000,
          lng: 16.3500
        }
      }) : 'Loading...', _react.default.createElement(_BasicAggregateView.default, {
        spec: this.props.spec,
        config: this.props.config
      }));
    }
  }]);

  return DBpediaMapView;
}(_react.default.Component);

DBpediaMapView.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
DBpediaMapView.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
DBpediaMapView = (0, _fluxibleAddonsReact.connectToStores)(DBpediaMapView, [_DBpediaGMapStore.default], function (context, props) {
  return {
    DBpediaGMapStore: context.getStore(_DBpediaGMapStore.default).getState()
  };
});
var _default = DBpediaMapView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2202:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getCoordinates;

function getCoordinates(context, payload, done) {
  context.service.read('dbpedia.coordinates', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('FIND_COORDINATES_FAILURE', err);
    } else {
      context.dispatch('FIND_COORDINATES_SUCCESS', res);
    }

    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2203:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _BasicAggregateInput = _interopRequireDefault(__webpack_require__(2204));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ObjectAEditor = /*#__PURE__*/function (_React$Component) {
  _inherits(ObjectAEditor, _React$Component);

  function ObjectAEditor() {
    _classCallCheck(this, ObjectAEditor);

    return _possibleConstructorReturn(this, (ObjectAEditor.__proto__ || Object.getPrototypeOf(ObjectAEditor)).apply(this, arguments));
  }

  _createClass(ObjectAEditor, [{
    key: "handleAggDataEdit",
    value: function handleAggDataEdit(changes) {
      this.props.onAggDataEdit(changes);
    }
  }, {
    key: "render",
    value: function render() {
      var editor,
          editorConfig = '';

      if (this.props.config) {
        if (this.props.config.objectIEditor) {
          editorConfig = this.props.config.objectIEditor[0];
        } else {
          editorConfig = 'BasicAggregateInput';
        }
      }

      switch (editorConfig) {
        case 'BasicAggregateInput':
          editor = _react.default.createElement(_BasicAggregateInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onAggDataEdit: this.handleAggDataEdit.bind(this)
          });
          break;

        default:
          editor = _react.default.createElement(_BasicAggregateInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onAggDataEdit: this.handleAggDataEdit.bind(this)
          });
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "objectAEditor"
      }, editor);
    }
  }]);

  return ObjectAEditor;
}(_react.default.Component);

var _default = ObjectAEditor;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2204:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _ObjectIEditor = _interopRequireDefault(__webpack_require__(552));

var _BasicCheckbox = _interopRequireDefault(__webpack_require__(2205));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BasicAggregateInput = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicAggregateInput, _React$Component);

  function BasicAggregateInput(props) {
    var _this;

    _classCallCheck(this, BasicAggregateInput);

    _this = _possibleConstructorReturn(this, (BasicAggregateInput.__proto__ || Object.getPrototypeOf(BasicAggregateInput)).call(this, props));
    _this.state = {};
    return _this;
  }

  _createClass(BasicAggregateInput, [{
    key: "handleDataEdit",
    value: function handleDataEdit(key, oldValue, valueType, dataType, newValue) {
      this.state[key] = {
        oldValue: oldValue,
        newValue: newValue,
        valueType: valueType,
        dataType: dataType
      };
      this.props.onAggDataEdit(this.state);
    }
  }, {
    key: "handleEnterPress",
    value: function handleEnterPress() {}
  }, {
    key: "checkBox",
    value: function checkBox(id, status) {
      this.state[id].checked = status;
      this.props.onAggDataEdit(this.state);
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var list = this.props.spec.instances.map(function (node, index) {
        if (!node) {
          return undefined; // stop processing this iteration
        }

        return _react.default.createElement("div", {
          key: index,
          className: "ui form grid"
        }, " ", _react.default.createElement("div", {
          className: "twelve wide column field"
        }, " ", _react.default.createElement(_ObjectIEditor.default, {
          spec: node,
          config: self.props.config,
          datasetURI: self.props.datasetURI,
          onDataEdit: self.handleDataEdit.bind(self, index, node.value, node.valueType, node.dataType),
          onEnterPress: self.handleEnterPress.bind(this)
        }), " "), " ", _react.default.createElement("div", {
          className: "two wide column field"
        }, " ", _react.default.createElement(_BasicCheckbox.default, {
          onToggle: self.checkBox.bind(self, index)
        }), " "), " ");
      });
      return _react.default.createElement("div", {
        className: "ui list",
        ref: "basicAggregateInput"
      }, _react.default.createElement("div", {
        className: "item"
      }, list));
    }
  }]);

  return BasicAggregateInput;
}(_react.default.Component);

var _default = BasicAggregateInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2205:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A simple checkbox component
*/
var BasicCheckbox = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicCheckbox, _React$Component);

  function BasicCheckbox(props) {
    var _this;

    _classCallCheck(this, BasicCheckbox);

    _this = _possibleConstructorReturn(this, (BasicCheckbox.__proto__ || Object.getPrototypeOf(BasicCheckbox)).call(this, props));
    _this.state = {
      checked: false
    }; //initial data sent

    if (!_this.props.notInitialize) {
      _this.props.onToggle(false);
    }

    return _this;
  }

  _createClass(BasicCheckbox, [{
    key: "handleClick",
    value: function handleClick(event) {
      this.props.onToggle(!this.state.checked);
      this.setState({
        checked: !this.state.checked
      });
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {}
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "ui basic icon button",
        ref: "basicCheckbox",
        onClick: this.handleClick.bind(this)
      }, _react.default.createElement("input", {
        type: "checkbox",
        ref: "checkBox",
        onChange: this.handleChange.bind(this),
        checked: this.state.checked
      }));
    }
  }]);

  return BasicCheckbox;
}(_react.default.Component);

var _default = BasicCheckbox;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2206:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _PatternInstanceRepository = __webpack_require__(1110);

var _ServerConfigRepository = __webpack_require__(520);

var _DbClient = _interopRequireDefault(__webpack_require__(521));

var _CustomLoader = __webpack_require__(1189);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var configEndpoint = "https://arco.istc.cnr.it/odpr/sparql";
var serverConfigRepo = new _ServerConfigRepository.ServerConfigRepository(new _DbClient.default(configEndpoint));

var PatternReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(PatternReactor, _React$Component);

  function PatternReactor(props) {
    var _this;

    _classCallCheck(this, PatternReactor);

    _this = _possibleConstructorReturn(this, (PatternReactor.__proto__ || Object.getPrototypeOf(PatternReactor)).call(this, props));
    _this.state = {
      patternInstance: undefined,
      dbContext: undefined
    };
    return _this;
  }

  _createClass(PatternReactor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var getPatternInstance = function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(datasetId, patternInstanceUri) {
          var dbContext, dbClient, patternRepo, patternInstance;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!(datasetId && patternInstanceUri)) {
                    _context.next = 13;
                    break;
                  }

                  _context.next = 3;
                  return serverConfigRepo.getSparqlEndpointAndGraphByDatasetId(datasetId);

                case 3:
                  dbContext = _context.sent;
                  dbClient = new _DbClient.default(dbContext.sparqlEndpoint, dbContext.graph);
                  patternRepo = new _PatternInstanceRepository.PatternInstanceRepository(dbClient);

                  if (!(dbContext && dbContext.sparqlEndpoint)) {
                    _context.next = 11;
                    break;
                  }

                  _context.next = 9;
                  return patternRepo.getPatternInstanceWithTypeVisualFrameAndData(patternInstanceUri);

                case 9:
                  patternInstance = _context.sent;

                  if (patternInstance) {
                    _this2.setState({
                      patternInstance: patternInstance,
                      dbContext: dbContext
                    });
                  }

                case 11:
                  _context.next = 13;
                  break;

                case 13:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        return function getPatternInstance(_x, _x2) {
          return _ref.apply(this, arguments);
        };
      }();

      getPatternInstance(this.props.datasetURI, this.props.resource);
    }
  }, {
    key: "render",
    value: function render() {
      if (this.state.patternInstance) {
        var VisualFrame = this.state.patternInstance.visualFrame;

        if (VisualFrame) {
          return _react.default.createElement("div", null, _react.default.createElement(VisualFrame, {
            patternInstance: this.state.patternInstance,
            dbContext: this.state.dbContext
          }));
        } else {
          return _react.default.createElement("div", null, "No visualframe found for pattern");
        }
      } else {
        return _react.default.createElement("div", {
          style: {
            textAlign: 'center'
          }
        }, _react.default.createElement(_CustomLoader.CustomLoader, null));
      }
    }
  }]);

  return PatternReactor;
}(_react.default.Component);

exports.default = PatternReactor;
module.exports = exports.default;

/***/ }),

/***/ 2207:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _QueryRepository = __webpack_require__(2208);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PatternInstanceQueryBuilder = /*#__PURE__*/function () {
  function PatternInstanceQueryBuilder(patternQueryRepository) {
    _classCallCheck(this, PatternInstanceQueryBuilder);

    this.patternQueryRepository = patternQueryRepository || new _QueryRepository.QueryRepository();
  }

  _createClass(PatternInstanceQueryBuilder, [{
    key: "prefixes",
    value: function prefixes() {
      return "\n        PREFIX opla: <http://ontologydesignpatterns.org/opla/>\n        PREFIX a-loc: <https://w3id.org/arco/ontology/location/>\n        PREFIX cis: <http://dati.beniculturali.it/cis/>\n        PREFIX tiapit: <https://w3id.org/italia/onto/TI/>\n        PREFIX arco: <https://w3id.org/arco/ontology/arco/>\n        PREFIX clvapit: <https://w3id.org/italia/onto/CLV/>\n        PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n        PREFIX a-dd: <https://w3id.org/arco/ontology/denotative-description/>\n        ";
    }
  }, {
    key: "getPatternWithLabel",
    value: function getPatternWithLabel(patternInstanceUri) {
      return "\n        PREFIX opla: <http://ontologydesignpatterns.org/opla/>\n\n        SELECT DISTINCT ?uri (SAMPLE(?label) as ?label) WHERE {\n         GRAPH ?graph {\n            <".concat(patternInstanceUri, "> opla:isPatternInstanceOf ?uri .\n            ?uri rdfs:label ?label .\n         }\n        }\n        ");
    }
  }, {
    key: "getPatternInstancesResourceBelongsTo",
    value: function getPatternInstancesResourceBelongsTo(resourceUri) {
      return "\n        PREFIX opla: <http://ontologydesignpatterns.org/opla/>\n        \n        SELECT DISTINCT ?uri WHERE {\n            GRAPH ?graph\n              {\n                <".concat(resourceUri, "> opla:belongsToPatternInstance ?uri .\n              }            \n            }\n    ");
    }
  }, {
    key: "getPatternInstanceDataQuery",
    value: function getPatternInstanceDataQuery(patternInstanceURI, patternURI) {
      var patternQuery = this.patternQueryRepository.getQuery(patternURI);
      return this.bindPatternInstanceVariable(patternQuery, patternInstanceURI);
    }
  }, {
    key: "bindVariable",
    value: function bindVariable(query, variable, binding) {
      return query.replace(variable, "<".concat(binding, ">"));
    }
  }, {
    key: "bindPatternInstanceVariable",
    value: function bindPatternInstanceVariable(patternQuery, patternInstanceUri) {
      var patternVariable = Object({"NODE_ENV":"production","BROWSER":"true","PUBLIC_URL":undefined,"CONFIG_SPARQL_ENDPOINT_URI":"https://arco.istc.cnr.it/odpr/sparql","CONFIG_GRAPH":"http://odpreactor.arco.istc.cnr.it/configuration","ODP_REACTOR_GRAPH_HOST":"https://odp-reactor-browser.vercel.app","ODP_REACTOR_GRAPH_PORT":"443"}).PATTERN_INSTANCE_URI_VARIABLE || '?patternInstanceUri';
      return this.bindVariable(patternQuery, patternVariable, patternInstanceUri);
    }
  }]);

  return PatternInstanceQueryBuilder;
}();

exports.default = PatternInstanceQueryBuilder;
module.exports = exports.default;

/***/ }),

/***/ 2208:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryRepository = void 0;

var _queries = _interopRequireDefault(__webpack_require__(1111));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var QueryRepository = /*#__PURE__*/function () {
  function QueryRepository(queryMap) {
    _classCallCheck(this, QueryRepository);

    this.queryMap = queryMap || _queries.default;
  }

  _createClass(QueryRepository, [{
    key: "getQueryFile",
    value: function getQueryFile(patternURI) {
      if (this.queryMap[patternURI]) {
        return this.queryMap[patternURI];
      } else {
        return undefined;
      }
    }
  }, {
    key: "getQuery",
    value: function getQuery(patternURI) {
      // we need some chunk of static path to implicitly tell webpack how to resolve this path at runtime 
      try {
        var queryModule = __webpack_require__(2209)("./" + this.getQueryFile(patternURI));

        if (queryModule) {
          return queryModule.default;
        } else {
          return undefined;
        }
      } catch (err) {
        console.log('[!] Error: ', err);
        return undefined;
      }
    }
  }]);

  return QueryRepository;
}();

exports.QueryRepository = QueryRepository;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 2209:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./collection.sparql": 2210,
	"./culturalcomponentof.sparql": 2211,
	"./example.sparql": 2212,
	"./queries.json": 1111,
	"./timedlocation.sparql": 2213
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 2209;

/***/ }),

/***/ 2210:
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> PREFIX opla: <http://ontologydesignpatterns.org/opla/>\n| PREFIX a-loc: <https://w3id.org/arco/ontology/location/>\n| PREFIX cis: <http://dati.beniculturali.it/cis/>");

/***/ }),

/***/ 2211:
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> PREFIX opla: <http://ontologydesignpatterns.org/opla/>\n| PREFIX a-loc: <https://w3id.org/arco/ontology/location/>\n| PREFIX cis: <http://dati.beniculturali.it/cis/>");

/***/ }),

/***/ 2212:
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:16)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> SELECT ?example WHERE {\n|     ?example a <http://example.com/Example> .\n| }");

/***/ }),

/***/ 2213:
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> PREFIX opla: <http://ontologydesignpatterns.org/opla/>\n| PREFIX a-loc: <https://w3id.org/arco/ontology/location/>\n| PREFIX cis: <http://dati.beniculturali.it/cis/>");

/***/ }),

/***/ 2214:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VisualFrameRepository = void 0;

var _visualframes = _interopRequireDefault(__webpack_require__(1113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var VisualFrameRepository = /*#__PURE__*/function () {
  function VisualFrameRepository(visualFrameMap) {
    _classCallCheck(this, VisualFrameRepository);

    this.visualFrameMap = visualFrameMap || _visualframes.default;
  }

  _createClass(VisualFrameRepository, [{
    key: "getVisualFrameFile",
    value: function getVisualFrameFile(patternURI) {
      if (this.visualFrameMap[patternURI]) {
        return this.visualFrameMap[patternURI];
      } else {
        return undefined;
      }
    }
  }, {
    key: "getVisualFrame",
    value: function getVisualFrame(patternURI) {
      // we need some chunk of static path to implicitly tell webpack how to resolve this path at runtime 
      try {
        return __webpack_require__(2215)("./" + this.getVisualFrameFile(patternURI));
      } catch (err) {
        return undefined;
      }
    }
  }]);

  return VisualFrameRepository;
}();

exports.VisualFrameRepository = VisualFrameRepository;

/***/ }),

/***/ 2215:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./CollectionVisualFrame": 583,
	"./CollectionVisualFrame.js": 583,
	"./ExampleVisualFrame": 1118,
	"./ExampleVisualFrame.js": 1118,
	"./PartOfVisualFrame": 584,
	"./PartOfVisualFrame.js": 584,
	"./TimeIndexedTypedLocationVisualFrame": 585,
	"./TimeIndexedTypedLocationVisualFrame.js": 585,
	"./test/CollectionVisualFrame.test": 1120,
	"./test/CollectionVisualFrame.test.js": 1120,
	"./test/PartOfVisualFrame.test": 1187,
	"./test/PartOfVisualFrame.test.js": 1187,
	"./test/TimeIndexedTypedLocationVisualFrame.test": 1188,
	"./test/TimeIndexedTypedLocationVisualFrame.test.js": 1188,
	"./visualframes.json": 1113
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 2215;

/***/ }),

/***/ 2240:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2382:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deleteResource;

var _fluxibleRouter = __webpack_require__(34);

function deleteResource(context, payload, done) {
  context.service.delete('resource.delete', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('DELETE_RESOURCE_FAILURE', err);
      done();
    } else {
      context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/1/' + encodeURIComponent(res.datasetURI)
      });
      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2383:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PatternResourceReactor = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _ServerConfigRepository = __webpack_require__(520);

var _PatternInstanceRepository = __webpack_require__(1110);

var _DbClient = _interopRequireDefault(__webpack_require__(521));

var _MosaicVisualFrame = _interopRequireDefault(__webpack_require__(2384));

var _CustomLoader = __webpack_require__(1189);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var configEndpoint = "https://arco.istc.cnr.it/odpr/sparql";
var serverConfigRepo = new _ServerConfigRepository.ServerConfigRepository(new _DbClient.default(configEndpoint));

var PatternResourceReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(PatternResourceReactor, _React$Component);

  function PatternResourceReactor(props) {
    var _this;

    _classCallCheck(this, PatternResourceReactor);

    _this = _possibleConstructorReturn(this, (PatternResourceReactor.__proto__ || Object.getPrototypeOf(PatternResourceReactor)).call(this, props));
    _this.state = {
      patternInstances: undefined,
      dbContext: undefined
    };
    return _this;
  }

  _createClass(PatternResourceReactor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var getPatternInstancesByResource = function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(datasetId, resourceURI) {
          var dbContext, dbClient, patternRepo, patternInstances;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!(datasetId && resourceURI)) {
                    _context.next = 13;
                    break;
                  }

                  _context.next = 3;
                  return serverConfigRepo.getSparqlEndpointAndGraphByDatasetId(datasetId);

                case 3:
                  dbContext = _context.sent;
                  dbClient = new _DbClient.default(dbContext.sparqlEndpoint, dbContext.graph);
                  patternRepo = new _PatternInstanceRepository.PatternInstanceRepository(dbClient);

                  if (!(dbContext && dbContext.sparqlEndpoint)) {
                    _context.next = 11;
                    break;
                  }

                  _context.next = 9;
                  return patternRepo.getPatternInstancesByResourceParticipatingInPattern(resourceURI);

                case 9:
                  patternInstances = _context.sent;

                  if (patternInstances) {
                    _this2.setState({
                      patternInstances: patternInstances,
                      dbContext: dbContext
                    });
                  }

                case 11:
                  _context.next = 13;
                  break;

                case 13:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        return function getPatternInstancesByResource(_x, _x2) {
          return _ref.apply(this, arguments);
        };
      }();

      getPatternInstancesByResource(this.props.datasetURI, this.props.resourceURI);
    }
  }, {
    key: "render",
    value: function render() {
      // se fanno parte di stessa istanza aggregarli e passare istanze di pattern ai visual frame
      if (!this.state.patternInstances) {
        // fetching => loader
        return _react.default.createElement("div", {
          style: {
            textAlign: 'center'
          }
        }, _react.default.createElement(_CustomLoader.CustomLoader, null));
      } else {
        if (this.state.patternInstances.length > 0) {
          // fetched: length > 0 => mosaic
          return _react.default.createElement(_MosaicVisualFrame.default, {
            patternInstances: this.state.patternInstances,
            dbContext: this.state.dbContext
          });
        } else {
          // no data => null
          return null;
        }
      }
    }
  }]);

  return PatternResourceReactor;
}(_react.default.Component);

exports.PatternResourceReactor = PatternResourceReactor;

/***/ }),

/***/ 2384:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _lodash = _interopRequireWildcard(__webpack_require__(894));

var _semanticUiReact = __webpack_require__(69);

var _PatternInstance = __webpack_require__(1112);

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var MosaicVisualFrame = /*#__PURE__*/function (_React$Component) {
  _inherits(MosaicVisualFrame, _React$Component);

  function MosaicVisualFrame(props) {
    _classCallCheck(this, MosaicVisualFrame);

    return _possibleConstructorReturn(this, (MosaicVisualFrame.__proto__ || Object.getPrototypeOf(MosaicVisualFrame)).call(this, props));
  }

  _createClass(MosaicVisualFrame, [{
    key: "render",
    value: function render() {
      var _this = this;

      var viewTitleStyle = {
        fontSize: 20,
        color: 'rgb(98, 91, 95)',
        marginBottom: 40
      };
      var cellStyle = {
        borderBottom: '1px solid rgba(34,36,38,.15)',
        marginBottom: 50
      };
      var viewsContent = [];
      var index = 0; // if different pattern instances are instance of the same pattern they're data field is group together
      // [ [p1], [p2], [p3, p4] ]
      // visual frames receive a list of pattern instances 

      var aggregatedPatternInstances = _lodash.default.chain(this.props.patternInstances).groupBy(function (patternInstance) {
        return patternInstance.pattern.uri;
      }).map(function (group) {
        if (group.length === 1) {
          return group[0];
        } else {
          return _lodash.default.reduce(group, function (newPatternInstance, currentPatternInstance) {
            return _PatternInstance.PatternInstance.aggregateInstances(newPatternInstance, currentPatternInstance);
          });
        }
      }).value();

      aggregatedPatternInstances.forEach(function (patternInstance) {
        var VisualFrame = patternInstance.visualFrame;
        var title = patternInstance.pattern && patternInstance.pattern.label ? patternInstance.pattern.label : 'Visual Frame';

        if (VisualFrame) {
          viewsContent.push(_react.default.createElement("div", {
            key: index,
            style: index % 2 === 0 ? cellStyle : {}
          }, _react.default.createElement("div", {
            "class": "mosaic-view-title",
            style: viewTitleStyle
          }, title), _react.default.createElement(VisualFrame, {
            patternInstance: patternInstance,
            dbContext: _this.props.dbContext,
            isMosaicFrameView: true
          })));
          index++;
        }
      });
      var viewsRowsAndColumns = (0, _lodash.chunk)(viewsContent, 1).map(function (group) {
        return _react.default.createElement(_semanticUiReact.Grid.Column, null, group);
      });
      return _react.default.createElement(_semanticUiReact.Grid, {
        container: true,
        stackable: true,
        columns: 2,
        celled: true,
        divided: "vertically"
      }, _react.default.createElement(_semanticUiReact.Grid.Row, null, viewsRowsAndColumns));
    }
  }]);

  return MosaicVisualFrame;
}(_react.default.Component);

exports.default = MosaicVisualFrame;
module.exports = exports.default;

/***/ }),

/***/ 2385:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var GoToButton = /*#__PURE__*/function (_React$Component) {
  _inherits(GoToButton, _React$Component);

  function GoToButton(props) {
    _classCallCheck(this, GoToButton);

    return _possibleConstructorReturn(this, (GoToButton.__proto__ || Object.getPrototypeOf(GoToButton)).call(this, props));
  }

  _createClass(GoToButton, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "go-to-button",
        style: {
          padding: 20,
          color: 'white',
          borderRadius: 5,
          cursor: 'pointer',
          background: '#6c7ae0',
          width: 'max-content'
        },
        onClick: function onClick() {
          return window.history.back();
        }
      }, _react.default.createElement(_semanticUiReact.Icon, {
        name: "home"
      }), " Back");
    }
  }]);

  return GoToButton;
}(_react.default.Component);

exports.default = GoToButton;
module.exports = exports.default;

/***/ }),

/***/ 2386:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _PropertyReactor = _interopRequireDefault(__webpack_require__(313));

var _fluxibleRouter = __webpack_require__(34);

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _scrollToTop = __webpack_require__(326);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var UserResource = /*#__PURE__*/function (_React$Component) {
  _inherits(UserResource, _React$Component);

  function UserResource(props) {
    _classCallCheck(this, UserResource);

    return _possibleConstructorReturn(this, (UserResource.__proto__ || Object.getPrototypeOf(UserResource)).call(this, props));
  }

  _createClass(UserResource, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      console.log('USER RESOURCEEE'); //scroll to top of the page

      if (this.props.config && this.props.config.readOnly) {
        (0, _scrollToTop.scrollToTop)();
      }
    }
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI, e) {
      this.context.executeAction(cloneResource, {
        dataset: datasetURI,
        resourceURI: resourceURI
      });
      e.stopPropagation();
    }
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "resource"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      } //continue


      var readOnly = 1;
      var user = this.context.getUser();
      var self = this;
      var accessLevel, isWriteable, configReadOnly;

      if (typeof self.props.readOnly !== 'undefined') {
        readOnly = self.props.readOnly;
      } else {
        //check the config for resource
        if (self.props.config && typeof self.props.config.readOnly !== 'undefined') {
          readOnly = self.props.config.readOnly;
        }
      } //create a list of properties


      var firstNameDIV, lastNameDIV, orgDIV, emailDIV, unameDIV, passDIV, creatorDIV, dateDIV, editorOfDIV, viewerOfDIV;
      var list = this.props.properties.map(function (node, index) {
        //if there was no config at all or it is hidden, do not render the property
        if (!node.config || !node.config.isHidden) {
          //for readOnly, we first check the defautl value then we check readOnly value of each property if exists
          //this is what comes from the config
          if (readOnly) {
            configReadOnly = true;
          } else {
            if (node.config) {
              if (node.config.readOnly) {
                configReadOnly = true;
              } else {
                configReadOnly = false;
              }
            }
          }

          if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdOn') {
            dateDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdBy') {
            creatorDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'http://xmlns.com/foaf/0.1/firstName') {
            firstNameDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'http://xmlns.com/foaf/0.1/lastName') {
            lastNameDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'http://xmlns.com/foaf/0.1/organization') {
            orgDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'http://xmlns.com/foaf/0.1/mbox') {
            emailDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'http://xmlns.com/foaf/0.1/accountName') {
            unameDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#viewerOf') {
            viewerOfDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#editorOf') {
            editorOfDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#password') {
            passDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else {
            return _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          }
        }
      });
      var currentCategory, mainDIV, tabsDIV, tabsContentDIV; //categorize properties in different tabs

      if (this.props.config.usePropertyCategories) {
        currentCategory = this.props.currentCategory;

        if (!currentCategory) {
          currentCategory = this.props.config.propertyCategories[0];
        }

        tabsDIV = this.props.config.propertyCategories.map(function (node, index) {
          return _react.default.createElement(_fluxibleRouter.NavLink, {
            className: node === currentCategory ? 'item link active' : 'item link',
            key: index,
            routeName: "resource",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.resource) + '/' + node + '/' + encodeURIComponent(self.props.propertyPath)
          }, node);
        });
        tabsContentDIV = this.props.config.propertyCategories.map(function (node, index) {
          return _react.default.createElement("div", {
            key: index,
            className: node === currentCategory ? 'ui bottom attached tab segment active' : 'ui bottom attached tab segment'
          }, _react.default.createElement("div", {
            className: "ui grid"
          }, _react.default.createElement("div", {
            className: "column ui list"
          }, node === currentCategory ? list : '')));
        });
        mainDIV = _react.default.createElement("div", null, _react.default.createElement("div", {
          className: "ui top attached tabular menu"
        }, tabsDIV), tabsContentDIV);
      } else {
        mainDIV = _react.default.createElement("div", {
          className: "ui segment"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "column ui list"
        }, firstNameDIV, lastNameDIV, orgDIV, emailDIV, unameDIV, passDIV, list, viewerOfDIV, editorOfDIV, dateDIV, creatorDIV)));
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "resource"
      }, _react.default.createElement("div", {
        className: "ui grid",
        ref: "resource"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement("h2", null, _react.default.createElement("a", {
        target: "_blank",
        href: '/export/NTriples/' + encodeURIComponent(this.props.datasetURI) + '/' + encodeURIComponent(this.props.resource)
      }, _react.default.createElement("i", {
        className: "blue icon user"
      })), ' ', _react.default.createElement("a", {
        href: this.props.resource,
        target: "_blank"
      }, this.props.title), "\xA0\xA0"), mainDIV)));
    }
  }]);

  return UserResource;
}(_react.default.Component);

UserResource.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
var _default = UserResource;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 2387:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _PropertyReactor = _interopRequireDefault(__webpack_require__(313));

var _fluxibleRouter = __webpack_require__(34);

var _bind = _interopRequireDefault(__webpack_require__(360));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _cloneResource = _interopRequireDefault(__webpack_require__(312));

var _scrollToTop = __webpack_require__(326);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var PersonResource = /*#__PURE__*/function (_React$Component) {
  _inherits(PersonResource, _React$Component);

  function PersonResource(props) {
    var _this;

    _classCallCheck(this, PersonResource);

    _this = _possibleConstructorReturn(this, (PersonResource.__proto__ || Object.getPrototypeOf(PersonResource)).call(this, props));
    _this.state = {
      showDetails: 0
    };
    return _this;
  }

  _createClass(PersonResource, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      //scroll to top of the page
      if (this.props.config && this.props.config.readOnly) {
        (0, _scrollToTop.scrollToTop)();
      }
    }
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI, e) {
      this.context.executeAction(_cloneResource.default, {
        dataset: datasetURI,
        resourceURI: resourceURI
      });
      e.stopPropagation();
    }
  }, {
    key: "toggleShowMore",
    value: function toggleShowMore() {
      this.setState({
        showDetails: !this.state.showDetails
      });
    }
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "personResource"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      } //continue


      var picture, keywords, pbirthDate, obirthDate, pbirthPlace, obirthPlace, pdeathDate, odeathDate, pdeathPlace, odeathPlace, knownFor, aboutP, pName, firstName, lastName, children, spouse, depiction, thumbnail, homepage, email, comments, creatorDIV, dateDIV;
      var readOnly = 1;
      var user = this.context.getUser();
      var self = this;
      var accessLevel, isWriteable, configReadOnly;

      if (typeof self.props.readOnly !== 'undefined') {
        readOnly = self.props.readOnly;
      } else {
        //check the config for resource
        if (self.props.config && typeof self.props.config.readOnly !== 'undefined') {
          readOnly = self.props.config.readOnly;
        }
      } //create a list of properties


      var list = this.props.properties.map(function (node, index) {
        //if there was no config at all or it is hidden, do not render the property
        if (!node.config || !node.config.isHidden) {
          //for readOnly, we first check the defautl value then we check readOnly value of each property if exists
          //this is what comes from the config
          if (readOnly) {
            configReadOnly = true;
          } else {
            if (node.config) {
              if (node.config.readOnly) {
                configReadOnly = true;
              } else {
                configReadOnly = false;
              }
            }
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/depiction') {
            depiction = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/thumbnail') {
            thumbnail = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/homepage') {
            homepage = node.instances[0].value;
          }

          if (node.propertyURI === 'http://www.w3.org/2006/vcard/ns#email') {
            email = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/firstName') {
            firstName = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/lastName') {
            lastName = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/name') {
            pName = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/birthDate') {
            obirthDate = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/birthDate') {
            pbirthDate = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/birthPlace') {
            obirthPlace = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/birthPlace') {
            pbirthPlace = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/deathDate') {
            odeathDate = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/deathDate') {
            pdeathDate = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/deathPlace') {
            odeathPlace = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/deathPlace') {
            pdeathPlace = node.instances[0].value;
          }

          if (node.propertyURI === 'http://www.w3.org/2000/01/rdf-schema#comment') {
            comments = node.instances;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/children') {
            children = node.instances;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/spouse') {
            spouse = node.instances;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/knownFor') {
            knownFor = node.instances;
          }

          if (node.propertyURI === 'http://purl.org/dc/terms/subject') {
            keywords = node.instances;
          }

          if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdOn') {
            dateDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdBy') {
            creatorDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else {
            return _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          }
        }
      });

      if (comments) {
        aboutP = comments[0].value;
        comments.forEach(function (comment) {
          if (comment.lang && comment.lang === 'en') {
            aboutP = comment.value;
          }
        });
      }

      var knownForDIV, keywordsDIV, spouseDIV, childrenDIV, deathPlace, birthPlace, birthDate, deathDate;

      if (depiction) {
        picture = depiction;
      } else if (thumbnail) {
        picture = thumbnail;
      }

      if (obirthPlace) {
        birthPlace = obirthPlace;
      } else if (pbirthPlace) {
        birthPlace = pbirthPlace;
      }

      if (obirthDate) {
        birthDate = obirthDate;
      } else if (pbirthPlace) {
        birthDate = pbirthDate;
      }

      if (odeathPlace) {
        deathPlace = odeathPlace;
      } else if (pdeathPlace) {
        deathPlace = pdeathPlace;
      }

      if (odeathDate) {
        deathDate = odeathDate;
      } else if (pdeathPlace) {
        deathDate = pdeathDate;
      }

      if (spouse) {
        spouseDIV = spouse.map(function (node, index) {
          return _react.default.createElement("a", {
            key: index,
            className: "ui basic label",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(node.value)
          }, _URIUtil.default.getURILabel(node.value));
        });
      }

      if (children) {
        childrenDIV = children.map(function (node, index) {
          return _react.default.createElement("a", {
            key: index,
            className: "ui basic label",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(node.value)
          }, _URIUtil.default.getURILabel(node.value));
        });
      }

      if (knownFor) {
        knownForDIV = knownFor.map(function (node, index) {
          return _react.default.createElement("a", {
            key: index,
            className: "ui tag label",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(node.value)
          }, _URIUtil.default.getURILabel(node.value));
        });
      }

      if (keywords) {
        keywordsDIV = keywords.map(function (node, index) {
          return _react.default.createElement("a", {
            key: index,
            className: "ui tag label",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(node.value)
          }, _URIUtil.default.getURILabel(node.value));
        });
      }

      var mainDIV = _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "column ui list"
      }, list, dateDIV, creatorDIV)));

      var datasetTitle = this.props.datasetURI;

      if (this.props.config && this.props.config.datasetLabel) {
        datasetTitle = this.props.config.datasetLabel;
      }

      var breadcrumb;

      if (self.props.propertyPath.length > 1) {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: '/dataset/1/' + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }), _react.default.createElement("a", {
          className: "section",
          href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.propertyPath[0])
        }, _react.default.createElement("i", {
          className: "cube icon"
        }), _URIUtil.default.getURILabel(self.props.propertyPath[0])), _react.default.createElement("i", {
          className: "big right arrow icon divider"
        }), _react.default.createElement("div", {
          className: "active section"
        }, _URIUtil.default.getURILabel(self.props.propertyPath[1])));
      } else {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: '/dataset/1/' + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }));
      }

      var cloneable = 0;

      if (self.props.config && !this.props.readOnly && typeof self.props.config.allowResourceClone !== 'undefined' && parseInt(self.props.config.allowResourceClone)) {
        cloneable = 1;
      }

      var detailClasses = (0, _bind.default)({
        'hide-element': !this.state.showDetails
      });
      var personTitle = this.props.title;

      if (pName) {
        personTitle = pName;
      }

      if (firstName && lastName) {
        personTitle = firstName + ' ' + lastName;
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "personResource"
      }, _react.default.createElement("div", {
        className: "ui grid",
        ref: "personResource"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, breadcrumb, _react.default.createElement("h2", null, _react.default.createElement("a", {
        target: "_blank",
        href: '/export/NTriples/' + encodeURIComponent(this.props.datasetURI) + '/' + encodeURIComponent(this.props.resource)
      }, _react.default.createElement("i", {
        className: "blue icon user"
      })), ' ', _react.default.createElement("a", {
        href: this.props.resource,
        target: "_blank"
      }, personTitle), "\xA0\xA0", cloneable ? _react.default.createElement("a", {
        className: "medium ui circular basic icon button",
        onClick: this.handleCloneResource.bind(this, this.props.datasetURI, decodeURIComponent(this.props.resource)),
        title: "clone this resource"
      }, _react.default.createElement("i", {
        className: "icon teal superscript"
      })) : ''), _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "four wide column"
      }, _react.default.createElement("a", {
        className: "olive card"
      }, _react.default.createElement("div", {
        className: "image"
      }, picture ? _react.default.createElement("img", {
        className: "ui medium rounded image",
        src: picture
      }) : _react.default.createElement("img", {
        className: "ui medium rounded image",
        src: "".concat(PUBLIC_URL, "/assets/img/person.png")
      })))), _react.default.createElement("div", {
        className: "twelve wide column"
      }, _react.default.createElement("div", {
        className: "ui huge divided list"
      }, birthDate ? _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon circle thin"
      })), ' ', birthDate, ' ', birthPlace ? _react.default.createElement("a", {
        href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(birthPlace)
      }, "(", _URIUtil.default.getURILabel(birthPlace), ")") : '') : '', deathDate ? _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon circle"
      })), ' ', deathDate, ' ', deathPlace ? _react.default.createElement("a", {
        href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(deathPlace)
      }, "(", _URIUtil.default.getURILabel(deathPlace), ")") : '') : '', spouse ? _react.default.createElement("div", {
        className: "item ui"
      }, _react.default.createElement("i", {
        className: "icons"
      }, ' ', _react.default.createElement("i", {
        className: "ui icon  blue male"
      })), _react.default.createElement("i", {
        className: "icons"
      }, ' ', _react.default.createElement("i", {
        className: "ui icon pink female"
      })), ' ', spouseDIV) : '', children ? _react.default.createElement("div", {
        className: "item ui"
      }, _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon green child"
      })), ' ', childrenDIV) : '', aboutP ? _react.default.createElement("div", {
        className: "item"
      }, " ", aboutP) : '', homepage ? _react.default.createElement("a", {
        className: "item",
        href: homepage
      }, ' ', _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon violet home"
      })), ' ', homepage) : '', email ? _react.default.createElement("a", {
        className: "item",
        href: 'mailto:' + email
      }, ' ', _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon blue mail outline"
      })), ' ', email) : '', knownFor ? _react.default.createElement("div", {
        className: "item ui labels"
      }, ' ', knownForDIV) : '', !knownFor && keywords ? _react.default.createElement("div", {
        className: "item ui labels"
      }, ' ', keywordsDIV) : '', _react.default.createElement("div", {
        className: "item"
      })))), _react.default.createElement("div", {
        className: "ui bottom attached button fluid",
        onClick: this.toggleShowMore.bind(this)
      }, !this.state.showDetails ? _react.default.createElement("span", null, _react.default.createElement("i", {
        className: "ui toggle down icon"
      }), "show details...") : _react.default.createElement("span", null, _react.default.createElement("i", {
        className: "ui toggle up icon"
      }), "hide details...")), _react.default.createElement("div", {
        className: detailClasses
      }, mainDIV))));
    }
  }]);

  return PersonResource;
}(_react.default.Component);

PersonResource.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
var _default = PersonResource;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2388:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _PropertyReactor = _interopRequireDefault(__webpack_require__(313));

var _fluxibleRouter = __webpack_require__(34);

var _bind = _interopRequireDefault(__webpack_require__(360));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _cloneResource = _interopRequireDefault(__webpack_require__(312));

var _scrollToTop = __webpack_require__(326);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var OrgResource = /*#__PURE__*/function (_React$Component) {
  _inherits(OrgResource, _React$Component);

  function OrgResource(props) {
    var _this;

    _classCallCheck(this, OrgResource);

    _this = _possibleConstructorReturn(this, (OrgResource.__proto__ || Object.getPrototypeOf(OrgResource)).call(this, props));
    _this.state = {
      showDetails: 0
    };
    return _this;
  }

  _createClass(OrgResource, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      //scroll to top of the page
      if (this.props.config && this.props.config.readOnly) {
        (0, _scrollToTop.scrollToTop)();
      }
    }
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI, e) {
      this.context.executeAction(_cloneResource.default, {
        dataset: datasetURI,
        resourceURI: resourceURI
      });
      e.stopPropagation();
    }
  }, {
    key: "toggleShowMore",
    value: function toggleShowMore() {
      this.setState({
        showDetails: !this.state.showDetails
      });
    }
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "orgResource"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      } //continue


      var picture, keywords, aboutP, pName, depiction, thumbnail, homepage, email, geometry, ocity, pcity, country, established, city, pcountry, ocountry, pmotto, omotto, motto, comments, creatorDIV, dateDIV;
      var readOnly = 1;
      var user = this.context.getUser();
      var self = this;
      var accessLevel, isWriteable, configReadOnly;

      if (typeof self.props.readOnly !== 'undefined') {
        readOnly = self.props.readOnly;
      } else {
        //check the config for resource
        if (self.props.config && typeof self.props.config.readOnly !== 'undefined') {
          readOnly = self.props.config.readOnly;
        }
      } //create a list of properties


      var list = this.props.properties.map(function (node, index) {
        //if there was no config at all or it is hidden, do not render the property
        if (!node.config || !node.config.isHidden) {
          //for readOnly, we first check the defautl value then we check readOnly value of each property if exists
          //this is what comes from the config
          if (readOnly) {
            configReadOnly = true;
          } else {
            if (node.config) {
              if (node.config.readOnly) {
                configReadOnly = true;
              } else {
                configReadOnly = false;
              }
            }
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/depiction') {
            depiction = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/thumbnail') {
            thumbnail = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/homepage') {
            homepage = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/city') {
            ocity = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/city') {
            pcity = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/country') {
            ocountry = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/country') {
            pcountry = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/motto') {
            pmotto = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/ontology/motto') {
            omotto = node.instances[0].value;
          }

          if (node.propertyURI === 'http://dbpedia.org/property/established') {
            established = node.instances[0].value;
          }

          if (node.propertyURI === 'http://www.w3.org/2006/vcard/ns#email') {
            email = node.instances[0].value;
          }

          if (node.propertyURI === 'http://xmlns.com/foaf/0.1/name') {
            pName = node.instances[0].value;
          }

          if (node.propertyURI === 'http://www.w3.org/2000/01/rdf-schema#comment') {
            comments = node.instances;
          }

          if (node.propertyURI === 'http://purl.org/dc/terms/subject') {
            keywords = node.instances;
          }

          if (node.propertyURI === 'http://www.w3.org/2003/01/geo/wgs84_pos#geometry') {
            geometry = node;
          }

          if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdOn') {
            dateDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdBy') {
            creatorDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else {
            return _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          }
        }
      });

      if (comments) {
        aboutP = comments[0].value;
        comments.forEach(function (comment) {
          if (comment.lang && comment.lang === 'en') {
            aboutP = comment.value;
          }
        });
      }

      var keywordsDIV;

      if (depiction) {
        picture = depiction;
      } else if (thumbnail) {
        picture = thumbnail;
      }

      if (ocity) {
        city = ocity;
      } else if (pcity) {
        city = pcity;
      }

      if (ocountry) {
        country = ocountry;
      } else if (pcountry) {
        country = pcountry;
      }

      if (omotto) {
        motto = omotto;
      } else if (pmotto) {
        motto = pmotto;
      }

      if (keywords) {
        keywordsDIV = keywords.map(function (node, index) {
          return _react.default.createElement("a", {
            key: index,
            className: "ui tag label",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(node.value)
          }, _URIUtil.default.getURILabel(node.value));
        });
      }

      var mainDIV = _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "column ui list"
      }, list, dateDIV, creatorDIV)));

      var datasetTitle = this.props.datasetURI;

      if (this.props.config && this.props.config.datasetLabel) {
        datasetTitle = this.props.config.datasetLabel;
      }

      var breadcrumb;

      if (self.props.propertyPath.length > 1) {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: '/dataset/1/' + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }), _react.default.createElement("a", {
          className: "section",
          href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.propertyPath[0])
        }, _react.default.createElement("i", {
          className: "cube icon"
        }), _URIUtil.default.getURILabel(self.props.propertyPath[0])), _react.default.createElement("i", {
          className: "big right arrow icon divider"
        }), _react.default.createElement("div", {
          className: "active section"
        }, _URIUtil.default.getURILabel(self.props.propertyPath[1])));
      } else {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: '/dataset/1/' + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }));
      }

      var cloneable = 0;

      if (self.props.config && !this.props.readOnly && typeof self.props.config.allowResourceClone !== 'undefined' && parseInt(self.props.config.allowResourceClone)) {
        cloneable = 1;
      }

      var detailClasses = (0, _bind.default)({
        'hide-element': !this.state.showDetails
      });
      var orgTitle = this.props.title;

      if (pName) {
        orgTitle = pName;
      }

      var geoConfig;

      if (geometry) {
        geoConfig = JSON.parse(JSON.stringify(geometry.config));
        geoConfig.mapWidth = 345;
        geoConfig.hidePropertyName = 1;
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "orgResource"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui column"
      }, breadcrumb, _react.default.createElement("h2", null, _react.default.createElement("a", {
        target: "_blank",
        href: '/export/NTriples/' + encodeURIComponent(this.props.datasetURI) + '/' + encodeURIComponent(this.props.resource),
        className: "ui image icon link"
      }, picture ? _react.default.createElement("img", {
        className: "ui tiny rounded image",
        src: picture
      }) : _react.default.createElement("i", {
        className: "blue icon building"
      })), ' ', _react.default.createElement("a", {
        href: this.props.resource,
        target: "_blank"
      }, orgTitle), "\xA0\xA0", cloneable ? _react.default.createElement("a", {
        className: "medium ui circular basic icon button",
        onClick: this.handleCloneResource.bind(this, this.props.datasetURI, decodeURIComponent(this.props.resource)),
        title: "clone this resource"
      }, _react.default.createElement("i", {
        className: "icon teal superscript"
      })) : ''), _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "six wide column"
      }, geometry ? _react.default.createElement(_PropertyReactor.default, {
        spec: geometry,
        readOnly: 1,
        config: geoConfig,
        datasetURI: this.props.datasetURI,
        resource: this.props.resource,
        property: geometry.propertyURI
      }) : ''), _react.default.createElement("div", {
        className: "ten wide column"
      }, _react.default.createElement("div", {
        className: "ui huge divided list"
      }, motto ? _react.default.createElement("div", {
        className: "item"
      }, ' ', _react.default.createElement("div", {
        className: "ui top black attached fluid compact segment"
      }, _react.default.createElement("i", {
        className: "ui icon quote left"
      }), motto, _react.default.createElement("i", {
        className: "ui icon quote right"
      }))) : '', established ? _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon circle thin"
      })), ' ', "Established: ", _react.default.createElement("b", null, established), ' ') : '', city ? _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon map outline"
      })), ' ', _react.default.createElement("a", {
        href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(city)
      }, _URIUtil.default.getURILabel(city)), ' ', "|", ' ', country ? _react.default.createElement("a", {
        href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(country)
      }, _URIUtil.default.getURILabel(country)) : '') : '', aboutP ? _react.default.createElement("div", {
        className: "item"
      }, " ", aboutP) : '', homepage ? _react.default.createElement("a", {
        className: "item",
        href: homepage
      }, ' ', _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon violet home"
      })), ' ', homepage) : '', email ? _react.default.createElement("a", {
        className: "item",
        href: 'mailto:' + email
      }, ' ', _react.default.createElement("i", {
        className: "icons"
      }, _react.default.createElement("i", {
        className: "ui icon blue mail outline"
      })), ' ', email) : '', keywords ? _react.default.createElement("div", {
        className: "item ui labels"
      }, ' ', keywordsDIV) : '', _react.default.createElement("div", {
        className: "item"
      })))), _react.default.createElement("div", {
        className: "ui bottom attached button fluid",
        onClick: this.toggleShowMore.bind(this)
      }, !this.state.showDetails ? _react.default.createElement("span", null, _react.default.createElement("i", {
        className: "ui toggle down icon"
      }), "show details...") : _react.default.createElement("span", null, _react.default.createElement("i", {
        className: "ui toggle up icon"
      }), "hide details...")), _react.default.createElement("div", {
        className: detailClasses
      }, mainDIV))));
    }
  }]);

  return OrgResource;
}(_react.default.Component);

OrgResource.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
var _default = OrgResource;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2389:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _PropertyReactor = _interopRequireDefault(__webpack_require__(313));

var _fluxibleRouter = __webpack_require__(34);

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _fluxibleAddonsReact = __webpack_require__(79);

var _cloneResource = _interopRequireDefault(__webpack_require__(312));

var _createJSONLD = _interopRequireDefault(__webpack_require__(2390));

var _importCSV = _interopRequireDefault(__webpack_require__(2391));

var _ImportStore = _interopRequireDefault(__webpack_require__(463));

var _WaitAMoment = _interopRequireDefault(__webpack_require__(490));

var _scrollToTop = __webpack_require__(326);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var CSVMappingResource = /*#__PURE__*/function (_React$Component) {
  _inherits(CSVMappingResource, _React$Component);

  function CSVMappingResource(props) {
    var _this;

    _classCallCheck(this, CSVMappingResource);

    _this = _possibleConstructorReturn(this, (CSVMappingResource.__proto__ || Object.getPrototypeOf(CSVMappingResource)).call(this, props));
    _this.state = {
      status: 0
    };
    return _this;
  }

  _createClass(CSVMappingResource, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      console.log('CSV MAPPING RESORU'); //scroll to top of the page

      if (this.props.config && this.props.config.readOnly) {
        (0, _scrollToTop.scrollToTop)();
      }
    }
  }, {
    key: "handleCloneResource",
    value: function handleCloneResource(datasetURI, resourceURI, e) {
      this.context.executeAction(_cloneResource.default, {
        dataset: datasetURI,
        resourceURI: resourceURI
      });
      e.stopPropagation();
    }
  }, {
    key: "handleCreateJSONLD",
    value: function handleCreateJSONLD(resourceURI, e) {
      this.setState({
        status: 1
      });
      this.context.executeAction(_createJSONLD.default, {
        resourceURI: resourceURI
      });
      e.stopPropagation();
    }
  }, {
    key: "handleImportCSV",
    value: function handleImportCSV(resourceURI, e) {
      this.setState({
        status: 2
      });
      this.context.executeAction(_importCSV.default, {
        resourceURI: resourceURI,
        importMethod: 'batchInsert'
      });
      e.stopPropagation();
    }
  }, {
    key: "render",
    value: function render() {
      //check erros first
      if (this.props.error) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more",
          ref: "resource"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("h2", null, this.props.error)))));
      }

      var fileURL = '',
          allowJSONLD = 0; //continue

      var readOnly = 1;
      var createdByDIV, createdOnDIV, csvFileDIV, delimiterDIV, labelDIV, rpDIV, vpDIV, cmDIV;
      var isUserTheCreator = 0;
      var user = this.context.getUser();
      var self = this;
      var accessLevel, isWriteable, configReadOnly, creatorDIV, dateDIV, annotationMetaDIV, annotationDIV;

      if (typeof self.props.readOnly !== 'undefined') {
        readOnly = self.props.readOnly;
      } else {
        //check the config for resource
        if (self.props.config && typeof self.props.config.readOnly !== 'undefined') {
          readOnly = self.props.config.readOnly;
        }
      } //create a list of properties


      var list = this.props.properties.map(function (node, index) {
        //if there was no config at all or it is hidden, do not render the property
        if (!node.config || !node.config.isHidden) {
          //for readOnly, we first check the defautl value then we check readOnly value of each property if exists
          //this is what comes from the config
          if (readOnly) {
            configReadOnly = true;
          } else {
            if (node.config) {
              if (node.config.readOnly) {
                configReadOnly = true;
              } else {
                configReadOnly = false;
              }
            }
          }

          if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdOn') {
            dateDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#createdBy') {
            creatorDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'http://www.w3.org/2000/01/rdf-schema#label') {
            labelDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#resourcePrefix') {
            rpDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#customMappings') {
            cmDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#vocabPrefix') {
            vpDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#delimiter') {
            allowJSONLD = !configReadOnly;
            delimiterDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else if (node.propertyURI === 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#csvFile') {
            fileURL = node.instances[0].value;
            csvFileDIV = _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          } else {
            return _react.default.createElement(_PropertyReactor.default, {
              key: index,
              enableAuthentication: self.props.enableAuthentication,
              spec: node,
              readOnly: configReadOnly,
              config: node.config,
              datasetURI: self.props.datasetURI,
              resource: self.props.resource,
              property: node.propertyURI,
              propertyPath: self.props.propertyPath
            });
          }
        }
      });
      var currentCategory, mainDIV, tabsDIV, tabsContentDIV; //categorize properties in different tabs

      if (this.props.config.usePropertyCategories) {
        currentCategory = this.props.currentCategory;

        if (!currentCategory) {
          currentCategory = this.props.config.propertyCategories[0];
        }

        tabsDIV = this.props.config.propertyCategories.map(function (node, index) {
          return _react.default.createElement(_fluxibleRouter.NavLink, {
            className: node === currentCategory ? 'item link active' : 'item link',
            key: index,
            routeName: "resource",
            href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.resource) + '/' + node + '/' + encodeURIComponent(self.props.propertyPath)
          }, node);
        });
        tabsContentDIV = this.props.config.propertyCategories.map(function (node, index) {
          return _react.default.createElement("div", {
            key: index,
            className: node === currentCategory ? 'ui bottom attached tab segment active' : 'ui bottom attached tab segment'
          }, _react.default.createElement("div", {
            className: "ui grid"
          }, _react.default.createElement("div", {
            className: "column ui list"
          }, node === currentCategory ? list : '')));
        });
        mainDIV = _react.default.createElement("div", null, _react.default.createElement("div", {
          className: "ui top attached tabular menu"
        }, tabsDIV), tabsContentDIV);
      } else {
        mainDIV = _react.default.createElement("div", {
          className: "ui segment"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "column ui list"
        }, _react.default.createElement("h2", {
          className: "ui dividing header orange"
        }, ' ', "File Info"), csvFileDIV, delimiterDIV, _react.default.createElement("h2", {
          className: "ui dividing header orange"
        }, ' ', "Mapping Configurations"), vpDIV, rpDIV, list, cmDIV, _react.default.createElement("h2", {
          className: "ui dividing header orange"
        }, ' ', "Metadata"), labelDIV, annotationDIV, annotationMetaDIV, dateDIV, creatorDIV)));
      }

      var datasetTitle = this.props.datasetURI;

      if (this.props.config && this.props.config.datasetLabel) {
        datasetTitle = this.props.config.datasetLabel;
      }

      var breadcrumb;

      if (self.props.propertyPath.length > 1) {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: '/dataset/1/' + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }), _react.default.createElement("a", {
          className: "section",
          href: '/dataset/' + encodeURIComponent(self.props.datasetURI) + '/resource/' + encodeURIComponent(self.props.propertyPath[0])
        }, _react.default.createElement("i", {
          className: "cube icon"
        }), _URIUtil.default.getURILabel(self.props.propertyPath[0])), _react.default.createElement("i", {
          className: "big right arrow icon divider"
        }), _react.default.createElement("div", {
          className: "active section"
        }, _URIUtil.default.getURILabel(self.props.propertyPath[1])));
      } else {
        breadcrumb = _react.default.createElement("div", {
          className: "ui large breadcrumb"
        }, _react.default.createElement("a", {
          className: "section",
          href: '/dataset/1/' + encodeURIComponent(self.props.datasetURI)
        }, _react.default.createElement("i", {
          className: "cubes icon"
        }), datasetTitle), _react.default.createElement("i", {
          className: "big right chevron icon divider"
        }));
      }

      var cloneable = 0;

      if (self.props.config && !this.props.readOnly && typeof self.props.config.allowResourceClone !== 'undefined' && parseInt(self.props.config.allowResourceClone)) {
        cloneable = 1;
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "resource"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, !this.state.status ? _react.default.createElement("div", {
        className: "ui column"
      }, breadcrumb, _react.default.createElement("h2", null, _react.default.createElement("a", {
        target: "_blank",
        href: '/export/NTriples/' + encodeURIComponent(this.props.datasetURI) + '/' + encodeURIComponent(this.props.resource)
      }, _react.default.createElement("i", {
        className: "blue icon cube"
      })), ' ', _react.default.createElement("a", {
        href: this.props.resource,
        target: "_blank"
      }, this.props.title), "\xA0\xA0", cloneable ? _react.default.createElement("a", {
        className: "medium ui circular basic icon button",
        onClick: this.handleCloneResource.bind(this, this.props.datasetURI, decodeURIComponent(this.props.resource)),
        title: "clone this resource"
      }, _react.default.createElement("i", {
        className: "icon teal superscript"
      })) : ''), mainDIV, allowJSONLD ? _react.default.createElement("div", {
        className: "ui big primary button",
        onClick: this.handleImportCSV.bind(this, decodeURIComponent(this.props.resource))
      }, "Import Data") : null, allowJSONLD ? _react.default.createElement("div", {
        className: "ui big button",
        onClick: this.handleCreateJSONLD.bind(this, decodeURIComponent(this.props.resource))
      }, "Export Data as JSON-LD") : null) : null, this.state.status === 1 ? _react.default.createElement("div", {
        className: "ui column"
      }, this.props.ImportStore.output ? _react.default.createElement("div", null, "The JSON-LD file is ready. You can download it from", ' ', _react.default.createElement("a", {
        href: this.props.ImportStore.output
      }, "here"), ".") : _react.default.createElement("div", null, _react.default.createElement(_WaitAMoment.default, {
        msg: "Generating the JSON-LD output. This might take a few seconds. Please be patient..."
      }), ' ', _react.default.createElement("center", null, "Check", ' ', _react.default.createElement("a", {
        href: fileURL.replace('.csv', '.json'),
        target: "_blank"
      }, "here"), ' ', "to see the current status of the output."))) : null, this.state.status === 2 ? _react.default.createElement("div", {
        className: "ui column"
      }, _react.default.createElement(_WaitAMoment.default, {
        msg: "Importing the Data. This might take a few seconds. Please be patient until you are redirected to the database page..."
      })) : null));
    }
  }]);

  return CSVMappingResource;
}(_react.default.Component);

CSVMappingResource.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
CSVMappingResource = (0, _fluxibleAddonsReact.connectToStores)(CSVMappingResource, [_ImportStore.default], function (context, props) {
  return {
    ImportStore: context.getStore(_ImportStore.default).getState()
  };
});
var _default = CSVMappingResource;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 2390:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createJSONLD;

function createJSONLD(context, payload, done) {
  context.service.create('import.jsonld', payload, {
    timeout: 120 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('CREATE_JSONLD_FAILURE', err);
      done();
    } else {
      context.dispatch('CREATE_JSONLD_SUCCESS', res);
      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2391:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = importCSV;

var _fluxibleRouter = __webpack_require__(34);

function importCSV(context, payload, done) {
  context.service.create('import.jsonld', payload, {
    timeout: 120 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('IMPORT_CSV_FAILURE', err);
      done();
    } else {
      context.dispatch('IMPORT_CSV_SUCCESS', res);
      context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/1/' + encodeURIComponent(res.datasetURI)
      });
      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2392:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createProperty;

var _loadResource = _interopRequireDefault(__webpack_require__(119));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createProperty(context, payload, done) {
  context.service.create('resource.property', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('CREATE_PROPERTY_FAILURE', err);
      done();
    } else {
      //refresh the resource properties
      context.executeAction(_loadResource.default, {
        dataset: res.datasetURI,
        resource: res.resourceURI,
        category: res.category,
        propertyPath: res.propertyPath
      }, function (err2, res2) {
        context.dispatch('CREATE_PROPERTY_SUCCESS', res);
        done();
      });
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2393:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _activateUser2 = _interopRequireDefault(__webpack_require__(2394));

var _sendEmailMsg2 = _interopRequireDefault(__webpack_require__(2395));

var _UserStore = _interopRequireDefault(__webpack_require__(1190));

var _fluxibleAddonsReact = __webpack_require__(79);

var _semanticUiReact = __webpack_require__(69);

var _fluxibleRouter = __webpack_require__(34);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var UsersList = /*#__PURE__*/function (_React$Component) {
  _inherits(UsersList, _React$Component);

  function UsersList(props) {
    var _this;

    _classCallCheck(this, UsersList);

    _this = _possibleConstructorReturn(this, (UsersList.__proto__ || Object.getPrototypeOf(UsersList)).call(this, props));
    _this.state = {
      subject: '',
      msg: ''
    };
    return _this;
  }

  _createClass(UsersList, [{
    key: "activateUser",
    value: function activateUser(uri, email) {
      this.context.executeAction(_activateUser2.default, {
        resourceURI: uri,
        email: email
      });
    }
  }, {
    key: "sendEmailMsg",
    value: function sendEmailMsg() {
      if (this.state.subject.trim() && this.state.msg.trim()) {
        this.context.executeAction(_sendEmailMsg2.default, {
          subject: this.state.subject,
          msg: this.state.msg
        });
      }
    }
  }, {
    key: "updateInputValue",
    value: function updateInputValue(target, evt) {
      if (target === 'subject') {
        this.setState({
          subject: evt.target.value
        });
      } else if (target === 'msg') {
        this.setState({
          msg: evt.target.value
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var actBtn,
          emailHint = 0,
          list,
          dbClass = 'yellow user icon',
          user = this.context.getUser();
      var currentComponent = this;

      if (!user || !parseInt(user.isSuperUser)) {
        return _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "row"
        }, _react.default.createElement("div", {
          className: "column"
        }, _react.default.createElement("h1", {
          className: "ui header"
        }, "Permission denied!"), _react.default.createElement("div", {
          className: "ui segment"
        }, _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "Sorry! You do not have enough permission to access this page!")))))));
      }

      var i = 0;
      var CREATED;

      if (this.props.UserStore.users) {
        list = this.props.UserStore.users.map(function (node, index) {
          if (parseInt(node.isActive)) {
            dbClass = 'green large user icon';
            actBtn = '';
          } else {
            dbClass = 'yellow large user icon';
            actBtn = _react.default.createElement("div", {
              className: "item"
            }, _react.default.createElement("button", {
              onClick: currentComponent.activateUser.bind(currentComponent, node.v, node.mbox),
              className: "ui mini button"
            }, "Activate")); // put the flag

            emailHint = 1;
          } //add creation date


          if (node.created) {
            CREATED = _react.default.createElement("span", {
              className: "ui mini label"
            }, node.created);
          } else {
            CREATED = _react.default.createElement("span", {
              className: "ui mini label"
            }, "unknown date");
          } //do not show current super user to edit himself


          if (node.v !== user.id && !parseInt(node.isSuperUser)) {
            i++;
            return _react.default.createElement("div", {
              className: "item animated fadeIn",
              key: index
            }, _react.default.createElement("div", {
              className: "ui horizontal list"
            }, _react.default.createElement(_fluxibleRouter.NavLink, {
              className: "item",
              routeName: "resource",
              href: '/dataset/' + encodeURIComponent(currentComponent.props.UserStore.datasetURI) + '/resource/' + encodeURIComponent(node.v)
            }, _react.default.createElement("div", {
              className: "content"
            }, _react.default.createElement("span", {
              className: "ui blue circular label"
            }, i), _react.default.createElement("i", {
              className: dbClass
            }), node.lastName, ", ", node.firstName, " (", node.username, ") ", CREATED)), actBtn));
          }
        });
      } else {
        list = _react.default.createElement("div", {
          className: "ui warning message"
        }, _react.default.createElement("div", {
          className: "header"
        }, "Sorry! No user found!"));
      }

      return _react.default.createElement("div", {
        className: "ui fluid container ldr-padding-more",
        ref: "dataset"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "row"
      }, _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("h1", {
        className: "ui header"
      }, _react.default.createElement("a", {
        target: "_blank",
        href: '/export/NTriples/' + encodeURIComponent(currentComponent.props.UserStore.datasetURI)
      }, _react.default.createElement("span", {
        className: "ui big black circular label"
      }, i)), "Registered Users"), _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement("div", {
        className: "ui huge divided animated list"
      }, list), emailHint ? _react.default.createElement("div", null, "* A notification email will be sent to the user after activation.") : ''), this.props.UserStore.msgSent ? _react.default.createElement("div", {
        className: "ui message info animated pulse"
      }, "Your message was successfully sent to all users...") : parseInt(user.isSuperUser) ? _react.default.createElement("div", {
        className: "ui segment inverted blue"
      }, _react.default.createElement(_semanticUiReact.Form, null, _react.default.createElement(_semanticUiReact.Form.Group, {
        widths: "equal"
      }, _react.default.createElement(_semanticUiReact.Form.Input, {
        label: "Subject",
        placeholder: "Subject",
        onChange: function onChange(evt) {
          return _this2.updateInputValue('subject', evt);
        }
      })), _react.default.createElement(_semanticUiReact.Form.TextArea, {
        label: "Message",
        placeholder: "Add your msg here",
        onChange: function onChange(evt) {
          return _this2.updateInputValue('msg', evt);
        }
      }), _react.default.createElement(_semanticUiReact.Form.Button, {
        onClick: this.sendEmailMsg.bind(this)
      }, "Send message as email to all users"))) : null))));
    }
  }]);

  return UsersList;
}(_react.default.Component);

UsersList.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
UsersList = (0, _fluxibleAddonsReact.connectToStores)(UsersList, [_UserStore.default], function (context, props) {
  return {
    UserStore: context.getStore(_UserStore.default).getState()
  };
});
var _default = UsersList;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 2394:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = activateUser;

var _loadUsersList = _interopRequireDefault(__webpack_require__(644));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function activateUser(context, payload, done) {
  context.service.update('admin.activateUser', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('ACTIVATE_USER_FAILURE', err);
    } else {
      context.dispatch('ACTIVATE_USER_SUCCESS', res);
    } //refresh the users list


    context.executeAction(_loadUsersList.default, {}, function (err2, res2) {
      context.dispatch('LOAD_USERS_LIST_SUCCESS', res2);
      done();
    });
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2395:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sendEmailMsg;

function sendEmailMsg(context, payload, done) {
  context.service.read('admin.sendEmailMsg', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('SEND_EMAIL_MSG_FAILURE', err);
    } else {
      context.dispatch('SEND_EMAIL_MSG_SUCCESS', res);
    }

    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 2396:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(__webpack_require__(1));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ErrorTest = /*#__PURE__*/function (_Component) {
  _inherits(ErrorTest, _Component);

  function ErrorTest(props) {
    var _this;

    _classCallCheck(this, ErrorTest);

    _this = _possibleConstructorReturn(this, (ErrorTest.__proto__ || Object.getPrototypeOf(ErrorTest)).call(this, props));
    _this.state = {
      crash: false
    };
    return _this;
  }

  _createClass(ErrorTest, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      if (this.state.crash) {
        throw new Error('I crashed');
      }

      return _react.default.createElement("div", null, "Error test component. Click the button to raise an error", _react.default.createElement("div", {
        onClick: function onClick() {
          _this2.setState({
            crash: true
          });
        },
        style: {
          backgroundColor: 'red',
          width: 'fit-content',
          cursor: 'pointer'
        }
      }, "Explode"));
    }
  }]);

  return ErrorTest;
}(_react.Component);

exports.default = ErrorTest;
module.exports = exports.default;

/***/ }),

/***/ 2397:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PatternStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(PatternStore, _BaseStore);

  function PatternStore(dispatcher) {
    var _this;

    _classCallCheck(this, PatternStore);

    _this = _possibleConstructorReturn(this, (PatternStore.__proto__ || Object.getPrototypeOf(PatternStore)).call(this, dispatcher));

    _this.cleanData();

    _this.cleanColors();

    _this.cleanSpecializations();

    _this.cleanCompositions();

    _this.cleanCompositionCount();

    _this.cleanSpecializationCount();

    _this.cleanInstances();

    _this.cleanClassesAndScores();

    return _this;
  }

  _createClass(PatternStore, [{
    key: "updateClassesAndScores",
    value: function updateClassesAndScores(payload) {
      console.log('Update classes payload', payload);
      console.log(payload);
      this.classesAndScores = payload;
      this.emitChange();
    }
  }, {
    key: "updateData",
    value: function updateData(payload) {
      this.list = payload['patternData'];
      this.emitChange();
    }
  }, {
    key: "updateSpecializations",
    value: function updateSpecializations(payload) {
      this.specializations = payload['patternData'];
      this.emitChange();
    }
  }, {
    key: "updateCompositions",
    value: function updateCompositions(payload) {
      this.compositions = payload['patternData'];
      this.emitChange();
    }
  }, {
    key: "updateSpecializationCount",
    value: function updateSpecializationCount(payload) {
      this.specializationCount = payload['patternData'];
      this.emitChange();
    }
  }, {
    key: "updateCompositionCount",
    value: function updateCompositionCount(payload) {
      this.compositionCount = payload['patternData'];
      this.emitChange();
    }
  }, {
    key: "updateInstances",
    value: function updateInstances(payload) {
      this.instances = payload['patternData'];
      this.emitChange();
    }
  }, {
    key: "cleanClassesAndScores",
    value: function cleanClassesAndScores() {
      this.classesAndScores = null;
      this.emitChange();
    }
  }, {
    key: "cleanData",
    value: function cleanData() {
      this.list = null;
      this.emitChange();
    }
  }, {
    key: "cleanSpecializations",
    value: function cleanSpecializations() {
      this.specializations = null;
      this.emitChange();
    }
  }, {
    key: "cleanCompositions",
    value: function cleanCompositions() {
      this.compositions = null;
      this.emitChange();
    }
  }, {
    key: "cleanSpecializationCount",
    value: function cleanSpecializationCount() {
      this.specializationCount = null;
      this.emitChange();
    }
  }, {
    key: "cleanCompositionCount",
    value: function cleanCompositionCount() {
      this.compositionCount = null;
      this.emitChange();
    }
  }, {
    key: "cleanInstances",
    value: function cleanInstances() {
      this.instances = null;
      this.emitChange();
    }
  }, {
    key: "saveColorMap",
    value: function saveColorMap(payload) {
      console.log('colors', payload);
      this.colors = payload;
    }
  }, {
    key: "cleanColors",
    value: function cleanColors() {
      this.colors = null;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        list: this.list,
        specializations: this.specializations,
        compositions: this.compositions,
        specializationCount: this.specializationCount,
        compositionCount: this.compositionCount,
        instances: this.instances,
        colors: this.colors,
        classesAndScores: this.classesAndScores
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.list = state.list;
      this.specializations = state.specializations;
      this.compositions = state.compositions;
      this.specializationCount = state.specializationCount;
      this.compositionCount = state.compositionCount;
      this.instances = state.instances;
      this.colors = state.colors;
      this.classesAndScores = state.classesAndScores;
    }
  }]);

  return PatternStore;
}(_addons.BaseStore);

PatternStore.storeName = 'PatternStore'; // PR open in dispatchr to remove this need

PatternStore.handlers = {
  LOAD_CLASSES_AND_SCORES_SUCCESS: 'updateClassesAndScores',
  CLEAN_CLASSES_AND_SCORES_SUCCESS: 'cleanClassesAndScores',
  LOAD_PATTERNS_SUCCESS: 'updateData',
  CLEAN_PATTERNS_SUCCESS: 'cleanData',
  LOAD_PATTERN_SPECIALIZATIONS_SUCCESS: 'updateSpecializations',
  CLEAN_PATTERN_SPECIALIZATIONS_SUCCESS: 'cleanSpecializations',
  LOAD_PATTERN_COMPOSITIONS_SUCCESS: 'updateCompositions',
  CLEAN_PATTERN_COMPOSITIONS_SUCCESS: 'cleanCompositions',
  LOAD_PATTERN_SPECIALIZATION_COUNT_SUCCESS: 'updateSpecializationCount',
  CLEAN_PATTERN_SPECIALIZATION_COUNT_SUCCESS: 'cleanSpecializationCount',
  LOAD_PATTERN_COMPOSITION_COUNT_SUCCESS: 'updateCompositionCount',
  CLEAN_PATTERN_COMPOSITION_COUNT_SUCCESS: 'cleanCompositionCount',
  LOAD_PATTERN_INSTANCES_SUCCESS: 'updateInstances',
  CLEAN_PATTERN_INSTANCES_SUCCESS: 'cleanInstances',
  SAVE_COLOR_MAP: 'saveColorMap'
};
var _default = PatternStore;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 2398:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PatternInstanceStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(PatternInstanceStore, _BaseStore);

  function PatternInstanceStore(dispatcher) {
    var _this;

    _classCallCheck(this, PatternInstanceStore);

    _this = _possibleConstructorReturn(this, (PatternInstanceStore.__proto__ || Object.getPrototypeOf(PatternInstanceStore)).call(this, dispatcher));

    _this.cleanAllInstance();

    _this.instanceData = {};
    return _this;
  }

  _createClass(PatternInstanceStore, [{
    key: "updateInstance",
    value: function updateInstance(payload) {
      // update instance data for pattern specified by pattern key
      // the key for pattern is in the response payload
      // example of payload:
      // {
      //   key :       "collection",
      //   collection:  [ data ...]
      //    }
      var patternKey = payload['key'];
      this.instanceData[patternKey] = payload[patternKey];
      this.emitChange();
    }
  }, {
    key: "cleanInstance",
    value: function cleanInstance() {
      this.instanceData = {};
      this.emitChange();
    }
  }, {
    key: "cleanAllInstance",
    value: function cleanAllInstance() {
      this.instanceData = null;
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        instanceData: this.instanceData
      };
    }
  }, {
    key: "getInstanceData",
    value: function getInstanceData() {
      return {
        instanceData: this.instanceData
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.instanceData = state.instanceData;
    }
  }]);

  return PatternInstanceStore;
}(_addons.BaseStore);

PatternInstanceStore.storeName = 'PatternInstanceStore'; // PR open in dispatchr to remove this need

PatternInstanceStore.handlers = {
  LOAD_INSTANCE_SUCCESS: 'updateInstance',
  CLEAN_INSTANCE_SUCCESS: 'cleanInstance'
};
var _default = PatternInstanceStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 295:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

if (true) {
  __webpack_require__(1461);
}
/**
display SPARQL queries
*/


var YASQEViewer = /*#__PURE__*/function (_React$Component) {
  _inherits(YASQEViewer, _React$Component);

  function YASQEViewer(props) {
    var _this;

    _classCallCheck(this, YASQEViewer);

    _this = _possibleConstructorReturn(this, (YASQEViewer.__proto__ || Object.getPrototypeOf(YASQEViewer)).call(this, props));
    _this.yasqe = {};
    return _this;
  }

  _createClass(YASQEViewer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var self = this;
      self.yasqe = YASQE.fromTextArea(self.refs.YASQE_query, {
        createShareLink: false
      });
      self.yasqe.setValue(self.props.spec.value);
      self.yasqe.execCommand('selectAll');
      YASQE.doAutoFormat(self.yasqe); //self.yasqe.collapsePrefixes(true)
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var self = this;
      self.yasqe.setValue(self.props.spec.value);
      self.yasqe.execCommand('selectAll');
      YASQE.doAutoFormat(self.yasqe); //self.yasqe.collapsePrefixes(true)
    }
  }, {
    key: "handleRunQuery",
    value: function handleRunQuery() {
      var self = this;
      var query = self.yasqe.getValue(); //todo: call the right action to run the query
    }
  }, {
    key: "render",
    value: function render() {
      if (this.props.config) {}

      var runDIV = ''; //this property allows users to manually run a query

      if (this.props.allowRun) {
        runDIV = _react.default.createElement("a", {
          onClick: this.handleRunQuery.bind(this),
          className: "ui icon primary fluid button"
        }, _react.default.createElement("i", {
          className: "ui icon play"
        }), "Run");
      }

      return _react.default.createElement("div", {
        className: "ui",
        itemProp: this.props.property
      }, _react.default.createElement("textarea", {
        defaultValue: this.props.spec.value,
        ref: "YASQE_query",
        className: "sparql-query"
      }), runDIV);
    }
  }]);

  return YASQEViewer;
}(_react.default.Component);

YASQEViewer.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = YASQEViewer;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 298:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _bind = _interopRequireDefault(__webpack_require__(360));

var _BasicIndividualView = _interopRequireDefault(__webpack_require__(1468));

var _BasicHTMLContentView = _interopRequireDefault(__webpack_require__(1469));

var _BasicImageView = _interopRequireDefault(__webpack_require__(1470));

var _BasicIndividualDetailView = _interopRequireDefault(__webpack_require__(1471));

var _BasicDBpediaView = _interopRequireDefault(__webpack_require__(1472));

var _BasicLinkedIndividualView = _interopRequireDefault(__webpack_require__(1473));

var _BasicOptionView = _interopRequireDefault(__webpack_require__(1474));

var _PasswordView = _interopRequireDefault(__webpack_require__(1475));

var _LanguageView = _interopRequireDefault(__webpack_require__(1476));

var _TwoLetterCountryView = _interopRequireDefault(__webpack_require__(1477));

var _ThreeLetterCountryView = _interopRequireDefault(__webpack_require__(1479));

var _BasicDateTimeView = _interopRequireDefault(__webpack_require__(1481));

var _CustomDateTimeView = _interopRequireDefault(__webpack_require__(1483));

var _PrefixBasedView = _interopRequireDefault(__webpack_require__(844));

var _ToggleView = _interopRequireDefault(__webpack_require__(1484));

var _BasicMapView = _interopRequireDefault(__webpack_require__(1485));

var _YASQEViewer = _interopRequireDefault(__webpack_require__(295));

var _MarkdownView = _interopRequireDefault(__webpack_require__(1488));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ObjectIViewer = /*#__PURE__*/function (_React$Component) {
  _inherits(ObjectIViewer, _React$Component);

  function ObjectIViewer() {
    _classCallCheck(this, ObjectIViewer);

    return _possibleConstructorReturn(this, (ObjectIViewer.__proto__ || Object.getPrototypeOf(ObjectIViewer)).apply(this, arguments));
  }

  _createClass(ObjectIViewer, [{
    key: "render",
    value: function render() {
      var category = 0,
          propertyPath = [],
          viewer,
          viewerConfig = "",
          extendedViewer,
          extendedViewerConfig = "";

      if (this.props.config) {
        if (this.props.config.extendedOViewer) {
          extendedViewerConfig = this.props.config.extendedOViewer[0];
        }

        if (this.props.config.objectIViewer) {
          viewerConfig = this.props.config.objectIViewer[0];
        }
      }

      if (this.props.spec.extendedViewData) {
        //go to extended view
        switch (extendedViewerConfig) {
          case "BasicIndividualDetailView":
            extendedViewer = _react.default.createElement(_BasicIndividualDetailView.default, {
              datasetURI: this.props.datasetURI,
              spec: this.props.spec,
              config: this.props.config
            });
            break;

          default:
            extendedViewer = _react.default.createElement(_BasicIndividualDetailView.default, {
              datasetURI: this.props.datasetURI,
              spec: this.props.spec,
              config: this.props.config
            });
        }
      } //always go for linked view when it has extensions (and when BasicIndividualView is selected)


      if (this.props.config && this.props.spec.extended && viewerConfig === "BasicIndividualView") {
        viewerConfig = "BasicLinkedIndividualView";
        propertyPath = [this.props.resource, this.props.property];
      }

      if (this.props.config && this.props.config.category) {
        category = this.props.config.category;
      } //go to normal view


      switch (viewerConfig) {
        case "BasicIndividualView":
          viewer = _react.default.createElement(_BasicIndividualView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "BasicHTMLContentView":
          viewer = _react.default.createElement(_BasicHTMLContentView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "BasicImageView":
          viewer = _react.default.createElement(_BasicImageView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "YASQEViewer":
          viewer = _react.default.createElement(_YASQEViewer.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "BasicMapView":
          viewer = _react.default.createElement(_BasicMapView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "ToggleView":
          viewer = _react.default.createElement(_ToggleView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "PrefixBasedView":
          viewer = _react.default.createElement(_PrefixBasedView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "BasicDateTimeView":
          viewer = _react.default.createElement(_BasicDateTimeView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "CustomDateTimeView":
          viewer = _react.default.createElement(_CustomDateTimeView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "BasicLinkedIndividualView":
          viewer = _react.default.createElement(_BasicLinkedIndividualView.default, {
            datasetURI: this.props.datasetURI,
            spec: this.props.spec,
            config: this.props.config,
            propertyPath: propertyPath,
            category: category,
            property: this.props.property
          });
          break;

        case "PasswordView":
          viewer = _react.default.createElement(_PasswordView.default, {
            datasetURI: this.props.datasetURI,
            spec: this.props.spec,
            config: this.props.config
          });
          break;

        case "BasicDBpediaView":
          viewer = _react.default.createElement(_BasicDBpediaView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "LanguageView":
          viewer = _react.default.createElement(_LanguageView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "BasicOptionView":
          viewer = _react.default.createElement(_BasicOptionView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "TwoLetterCountryView":
          viewer = _react.default.createElement(_TwoLetterCountryView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "ThreeLetterCountryView":
          viewer = _react.default.createElement(_ThreeLetterCountryView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        case "MarkdownView":
          viewer = _react.default.createElement(_MarkdownView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
          break;

        default:
          viewer = _react.default.createElement(_BasicIndividualView.default, {
            spec: this.props.spec,
            config: this.props.config,
            property: this.props.property
          });
      } //check if it has a blank node value config


      var hideObject = 0;

      if (this.props.config && this.props.config.hasBlankNode && extendedViewer) {
        hideObject = 1;
      }

      var viewerClasses = (0, _bind.default)({
        ui: true,
        "attached message": this.props.config && !this.props.config.hidePropertyName
      });
      return _react.default.createElement("div", {
        className: "ui",
        ref: "objectIViewer",
        onClick: this.props.onObjectClick,
        style: {
          wordBreak: "break-all",
          wordWrap: "break-word"
        }
      }, hideObject ? _react.default.createElement("span", null) : _react.default.createElement("div", {
        className: viewerClasses
      }, viewer), extendedViewer);
    }
  }]);

  return ObjectIViewer;
}(_react.default.Component);

var _default = ObjectIViewer;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 312:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cloneResource;

var _fluxibleRouter = __webpack_require__(34);

function cloneResource(context, payload, done) {
  context.service.create('resource.clone', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('CLONE_RESOURCE_FAILURE', err);
      done();
    } else {
      //window.open('/dataset/' + encodeURIComponent(res.datasetURI) + '/resource/' + encodeURIComponent(res.resourceURI), '_blank');
      context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/' + encodeURIComponent(res.datasetURI) + '/resource/' + encodeURIComponent(res.resourceURI)
      });
      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 313:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _addons = __webpack_require__(83);

var _deleteIndividualObject = _interopRequireDefault(__webpack_require__(2074));

var _deleteProperty = _interopRequireDefault(__webpack_require__(2075));

var _createIndividualObject = _interopRequireDefault(__webpack_require__(2076));

var _createIndividualObjectDetail = _interopRequireDefault(__webpack_require__(2077));

var _updateIndividualObject = _interopRequireDefault(__webpack_require__(2078));

var _updateIndividualObjectDetail = _interopRequireDefault(__webpack_require__(2079));

var _updateAggObject = _interopRequireDefault(__webpack_require__(2080));

var _deleteAggObject = _interopRequireDefault(__webpack_require__(2081));

var _IndividualProperty = _interopRequireDefault(__webpack_require__(2082));

var _PatternReactor = _interopRequireDefault(__webpack_require__(2206));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PropertyReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(PropertyReactor, _React$Component);

  function PropertyReactor(props) {
    _classCallCheck(this, PropertyReactor);

    return _possibleConstructorReturn(this, (PropertyReactor.__proto__ || Object.getPrototypeOf(PropertyReactor)).call(this, props));
  }

  _createClass(PropertyReactor, [{
    key: "handleDeleteProperty",
    value: function handleDeleteProperty() {
      this.context.executeAction(_deleteProperty.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI
      });
    }
  }, {
    key: "handleDeleteIndividualObject",
    value: function handleDeleteIndividualObject(objectValue, valueType, dataType) {
      if (!objectValue) {
        return null;
      }

      this.context.executeAction(_deleteIndividualObject.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        objectValue: objectValue,
        valueType: valueType,
        dataType: dataType
      });
    }
  }, {
    key: "handleDeleteAggObject",
    value: function handleDeleteAggObject(changes) {
      if (!changes.length) {
        return null;
      }

      this.context.executeAction(_deleteAggObject.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        changes: changes
      });
    }
  }, {
    key: "handleCreateIndividualObject",
    value: function handleCreateIndividualObject(objectValue, valueType, dataType) {
      if (!objectValue) {
        return null;
      }

      this.context.executeAction(_createIndividualObject.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        delimitedBy: this.props.config ? this.props.config.delimitedBy ? this.props.config.delimitedBy[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        objectValue: objectValue,
        valueType: valueType,
        dataType: dataType
      });
      this.setState({
        inNewValueMode: 0
      });
    }
  }, {
    key: "handleUpdateIndividualObject",
    value: function handleUpdateIndividualObject(oldObjectValue, newObjectValue, valueType, dataType) {
      if (!newObjectValue) {
        return null;
      }

      this.context.executeAction(_updateIndividualObject.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        oldObjectValue: oldObjectValue,
        newObjectValue: newObjectValue,
        valueType: valueType,
        dataType: dataType
      });
    }
  }, {
    key: "handleUpdateAggObject",
    value: function handleUpdateAggObject(changes) {
      if (!changes.length) {
        return null;
      }

      this.context.executeAction(_updateAggObject.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        changes: changes
      });
    }
  }, {
    key: "handleDetailCreateIndividualObject",
    value: function handleDetailCreateIndividualObject(oldObjectValue, newObjectValue, valueType, dataType, detailData) {
      this.context.executeAction(_createIndividualObjectDetail.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        oldObjectValue: oldObjectValue,
        newObjectValue: newObjectValue,
        valueType: valueType,
        dataType: dataType,
        detailData: detailData
      });
    }
  }, {
    key: "handleDetailUpdateIndividualObject",
    value: function handleDetailUpdateIndividualObject(oldObjectValue, newObjectValue, valueType, dataType, detailData) {
      this.context.executeAction(_updateIndividualObjectDetail.default, {
        category: this.props.config ? this.props.config.category ? this.props.config.category[0] : '' : '',
        dataset: this.props.datasetURI,
        resourceURI: this.props.resource,
        propertyPath: this.props.propertyPath,
        propertyURI: this.props.spec.propertyURI,
        oldObjectValue: oldObjectValue,
        newObjectValue: newObjectValue,
        valueType: valueType,
        dataType: dataType,
        detailData: detailData
      });
    } //removes properties from an object

  }, {
    key: "configMinus",
    value: function configMinus(config, props) {
      var o = {};

      for (var p in config) {
        if (props.indexOf(p) === -1) {
          o[p] = config[p];
        }
      }

      return o;
    }
  }, {
    key: "render",
    value: function render() {
      var propertyReactorType, propertyReactor;

      if (this.props.config) {
        if (!this.props.config.propertyReactor) {
          propertyReactorType = 'IndividualProperty';
        } else {
          propertyReactorType = this.props.config.propertyReactor[0];
        }
      }

      var propConfig = this.configMinus(this.props.config, ['propertyReactor']);

      if (propertyReactorType) {
        switch (propertyReactorType) {
          case 'IndividualProperty':
            propertyReactor = _react.default.createElement(_IndividualProperty.default, {
              hidePropertyName: this.props.hidePropertyName,
              spec: this.props.spec,
              enableAuthentication: this.props.enableAuthentication,
              readOnly: this.props.readOnly,
              datasetURI: this.props.datasetURI,
              resource: this.props.resource,
              property: this.props.property,
              propertyPath: this.props.propertyPath,
              config: propConfig,
              onCreateIndividualObject: this.handleCreateIndividualObject.bind(this),
              onDeleteIndividualObject: this.handleDeleteIndividualObject.bind(this),
              onUpdateIndividualObject: this.handleUpdateIndividualObject.bind(this),
              onDetailCreateIndividualObject: this.handleDetailCreateIndividualObject.bind(this),
              onDetailUpdateIndividualObject: this.handleDetailUpdateIndividualObject.bind(this),
              onUpdateAggObject: this.handleUpdateAggObject.bind(this),
              onDeleteAggObject: this.handleDeleteAggObject.bind(this)
            });
            break;

          case 'Pattern':
            propertyReactor = _react.default.createElement(_PatternReactor.default, {
              spec: this.props.spec,
              enableAuthentication: this.props.enableAuthentication,
              readOnly: this.props.readOnly,
              datasetURI: this.props.datasetURI,
              resource: this.props.resource,
              property: this.props.property,
              propertyPath: this.props.propertyPath
            });
            break;

          default:
            propertyReactor = _react.default.createElement(_IndividualProperty.default, {
              hidePropertyName: this.props.hidePropertyName,
              spec: this.props.spec,
              enableAuthentication: this.props.enableAuthentication,
              readOnly: this.props.readOnly,
              datasetURI: this.props.datasetURI,
              resource: this.props.resource,
              property: this.props.property,
              propertyPath: this.props.propertyPath,
              config: propConfig,
              onCreateIndividualObject: this.handleCreateIndividualObject.bind(this),
              onDeleteIndividualObject: this.handleDeleteIndividualObject.bind(this),
              onUpdateIndividualObject: this.handleUpdateIndividualObject.bind(this),
              onDetailCreateIndividualObject: this.handleDetailCreateIndividualObject.bind(this),
              onDetailUpdateIndividualObject: this.handleDetailUpdateIndividualObject.bind(this),
              onUpdateAggObject: this.handleUpdateAggObject.bind(this),
              onDeleteAggObject: this.handleDeleteAggObject.bind(this)
            });
        }
      }

      var propDeleteDIV = '';

      if (propConfig.allowPropertyDelete && !this.props.config.readOnly) {
        propDeleteDIV = _react.default.createElement("div", {
          className: "ui list"
        }, _react.default.createElement("div", {
          className: "item"
        }, _react.default.createElement("div", {
          className: "medium ui basic icon labeled button",
          onClick: this.handleDeleteProperty.bind(this)
        }, _react.default.createElement("i", {
          className: "trash alternate outline large red icon "
        }), ' ', "\xA0 Delete", ' ', _react.default.createElement("strong", null, ' ', propConfig && propConfig.label ? propConfig.label : this.props.spec.property), ' ', "property")), _react.default.createElement("br", null));
      }

      return _react.default.createElement("div", {
        ref: "propertyReactor",
        className: "property item"
      }, _react.default.createElement("div", {
        className: "content"
      }, propertyReactor, propDeleteDIV));
    }
  }]);

  return PropertyReactor;
}(_react.default.Component);

PropertyReactor.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
var _default = PropertyReactor;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 326:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scrollToTop = scrollToTop;

/**
 * Scroll to top of the page
 */
function scrollToTop() {
  var body = $('html, body');
  body.stop().animate({
    scrollTop: 0
  }, '500', 'swing', function () {});
}

/***/ }),

/***/ 343:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _prefixes = __webpack_require__(648);

var _autocompletes = __webpack_require__(1298);

var _semanticUiReact = __webpack_require__(69);

var _collection = _interopRequireDefault(__webpack_require__(1299));

var _string = _interopRequireDefault(__webpack_require__(1403));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
A component to add CURIs based on common prefixes
*/
var PrefixBasedInput = /*#__PURE__*/function (_React$Component) {
  _inherits(PrefixBasedInput, _React$Component);

  function PrefixBasedInput(props) {
    var _this;

    _classCallCheck(this, PrefixBasedInput);

    _this = _possibleConstructorReturn(this, (PrefixBasedInput.__proto__ || Object.getPrototypeOf(PrefixBasedInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue(_this.props.spec.valueType, _this.props.spec.dataType);
    }

    _this.state = {
      value: v,
      results: [],
      isLoading: false,
      lockEnter: 0
    };
    return _this;
  }

  _createClass(PrefixBasedInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value); //focus on the input

      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.prefixBasedInput).focus();
      }
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(evt) {
      if (this.props.allowActionByKey) {
        switch (evt.keyCode) {
          //case 9: // Tab
          case 13:
            // Enter
            if (!this.state.lockEnter) {
              this.props.onEnterPress();
            }

            break;
        }
      }
    }
  }, {
    key: "getRandomNumber",
    value: function getRandomNumber() {
      return Math.round(+new Date() / 1000);
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue(valueType, dataType) {
      var dynamicDomain = 'http://example.com';

      if (this.props.config && this.props.config.dynamicReautocompletelistDomain) {
        dynamicDomain = this.props.config.dynamicReautocompletelistDomain[0];
      }

      if (this.props.config && this.props.config.defaultValue) {
        return this.props.config.defaultValue[0];
      } else {
        if (valueType === 'uri') {
          return dynamicDomain + '/' + this.getRandomNumber();
        } else {
          return 'exampleValue' + this.getRandomNumber();
        }
      }
    }
  }, {
    key: "getPrefix",
    value: function getPrefix(uri) {
      var o = {
        prefix: '',
        url: ''
      };

      for (var prop in _prefixes.list) {
        if (uri.indexOf(_prefixes.list[prop]) !== -1) {
          o.prefix = prop;
          o.uri = _prefixes.list[prop];
          return o;
        }
      }

      return o;
    }
  }, {
    key: "makeShorten",
    value: function makeShorten(uri, prefixObject) {
      if (prefixObject.prefix) {
        return uri.replace(prefixObject.uri, prefixObject.prefix + ':');
      } else {
        return uri;
      }
    }
  }, {
    key: "preparePrefix",
    value: function preparePrefix(uri) {
      var _this2 = this;

      //case of propertyPath
      var out = [];
      var tmp = uri.split('->');
      var tmp2, tmp22;

      if (tmp.length > 1) {
        tmp.forEach(function (v) {
          tmp2 = v.split(']'); //check named graphs

          if (tmp2.length > 1) {
            var tmp3 = tmp2[0].replace('[', ''),
                tmp4 = tmp2[1];
            tmp22 = tmp3.split('>>'); //federeated facets

            if (tmp22.length > 1) {
              out.push('[' + _this2.makeShorten(tmp22[0], _this2.getPrefix(tmp22[0])) + '>>' + _this2.makeShorten(tmp22[1], _this2.getPrefix(tmp22[1])) + ']' + _this2.makeShorten(tmp4, _this2.getPrefix(tmp4)));
            } else {
              out.push('[' + _this2.makeShorten(tmp3, _this2.getPrefix(tmp3)) + ']' + _this2.makeShorten(tmp4, _this2.getPrefix(tmp4)));
            }
          } else {
            out.push(_this2.makeShorten(v, _this2.getPrefix(v)));
          }
        });
        return out.join('->');
      } else {
        return this.makeShorten(uri, this.getPrefix(uri));
      }
    }
  }, {
    key: "removePrefix",
    value: function removePrefix(uri) {
      //case of propertyPath
      var out = [];
      var tmp = uri.split('->');
      var tmp2, tmp22;

      if (tmp.length > 1) {
        tmp.forEach(function (v) {
          tmp2 = v.split(']'); //check named graphs

          if (tmp2.length > 1) {
            var tmp3 = tmp2[0].replace('[', ''),
                tmp4 = tmp2[1],
                tmp5,
                tmp6;
            tmp22 = tmp3.split('>>'); //federeated facets

            if (tmp22.length > 1) {
              tmp5 = tmp22[0];
              tmp6 = tmp22[1];

              if (tmp5.split(':')[0] !== 'http' && tmp5.split(':')[0] !== 'https' && tmp5.split(':')[0] !== 'urn') {
                tmp5 = tmp5.replace(tmp5.split(':')[0] + ':', _prefixes.list[tmp5.split(':')[0]]);
              }

              if (tmp6.split(':')[0] !== 'http' && tmp6.split(':')[0] !== 'https' && tmp6.split(':')[0] !== 'urn') {
                tmp6 = tmp6.replace(tmp6.split(':')[0] + ':', _prefixes.list[tmp6.split(':')[0]]);
              } //for intermediate links


              var tmp4i = tmp4.split('||');
              var tmp_i;

              if (tmp4i.length > 1) {
                if (tmp4i[0].split(':')[0] !== 'http' && tmp4i[0].split(':')[0] !== 'https' && tmp4i[0].split(':')[0] !== 'urn') {
                  tmp_i = tmp4i[0].replace(tmp4i[0].split(':')[0] + ':', _prefixes.list[tmp4i[0].split(':')[0]]);
                }

                if (tmp4i[1].split(':')[1] !== 'http' && tmp4i[1].split(':')[0] !== 'https' && tmp4i[1].split(':')[0] !== 'urn') {
                  tmp_i = tmp_i + '||' + tmp4i[1].replace(tmp4i[1].split(':')[0] + ':', _prefixes.list[tmp4i[1].split(':')[0]]);
                }

                tmp4 = tmp_i;
              } else {
                if (tmp4.split(':')[0] !== 'http' && tmp4.split(':')[0] !== 'https' && tmp4.split(':')[0] !== 'urn') {
                  tmp4 = tmp4.replace(tmp4.split(':')[0] + ':', _prefixes.list[tmp4.split(':')[0]]);
                }
              }

              out.push('[' + tmp5 + '>>' + tmp6 + ']' + tmp4);
            } else {
              if (tmp3.split(':')[0] !== 'http' && tmp3.split(':')[0] !== 'https' && tmp3.split(':')[0] !== 'urn') {
                tmp3 = tmp3.replace(tmp3.split(':')[0] + ':', _prefixes.list[tmp3.split(':')[0]]);
              } //for intermediate links


              var _tmp4i = tmp4.split('||');

              var _tmp_i;

              if (_tmp4i.length > 1) {
                if (_tmp4i[0].split(':')[0] !== 'http' && _tmp4i[0].split(':')[0] !== 'https' && _tmp4i[0].split(':')[0] !== 'urn') {
                  _tmp_i = _tmp4i[0].replace(_tmp4i[0].split(':')[0] + ':', _prefixes.list[_tmp4i[0].split(':')[0]]);
                } else {
                  _tmp_i = _tmp4i[0];
                }

                if (_tmp4i[1].split(':')[0] !== 'http' && _tmp4i[1].split(':')[0] !== 'https' && _tmp4i[1].split(':')[0] !== 'urn') {
                  _tmp_i = _tmp_i + '||' + _tmp4i[1].replace(_tmp4i[1].split(':')[0] + ':', _prefixes.list[_tmp4i[1].split(':')[0]]);
                } else {
                  _tmp_i = _tmp_i + '||' + _tmp4i[1];
                }

                tmp4 = _tmp_i;
              } else {
                if (tmp4.split(':')[0] !== 'http' && tmp4.split(':')[0] !== 'https' && tmp4.split(':')[0] !== 'urn') {
                  tmp4 = tmp4.replace(tmp4.split(':')[0] + ':', _prefixes.list[tmp4.split(':')[0]]);
                }
              }

              out.push('[' + tmp3 + ']' + tmp4);
            }
          } else {
            if (v.split(':')[0] !== 'http' && v.split(':')[0] !== 'https' && v.split(':')[0] !== 'urn') {
              out.push(v.replace(v.split(':')[0] + ':', _prefixes.list[v.split(':')[0]]));
            } else {
              out.push(v);
            }
          }
        });
        return out.join('->');
      } else {
        var _tmp = uri.split(':');

        if (_tmp[0] !== 'http' && _tmp[0] !== 'urn') {
          return uri.replace(_tmp[0] + ':', _prefixes.list[_tmp[0]]);
        } else {
          return uri;
        }
      }
    }
  }, {
    key: "applyPrefix",
    value: function applyPrefix(value) {
      var valueD = value;
      var tmp = valueD.split('->');

      if (tmp.length > 1) {
        return this.removePrefix(valueD);
      } else {
        var tmp2 = valueD.split(':');

        if (tmp2.length && valueD.indexOf('http://') === -1 && valueD.indexOf('urn:') === -1) {
          if (_prefixes.list[tmp2[0]]) {
            return valueD.replace(tmp2[0] + ':', _prefixes.list[tmp2[0]]);
          } else {
            return valueD;
          }
        } else {
          return valueD;
        }
      }
    }
  }, {
    key: "resetComponent",
    value: function resetComponent() {
      var self = this;
      this.setState({
        value: '',
        results: [],
        isLoading: false
      });
    } //when user clicks on results

  }, {
    key: "handleChange",
    value: function handleChange(event, obj) {
      this.setState({
        value: obj.result.title,
        lockEnter: 0
      });
      this.props.onDataEdit(this.applyPrefix(obj.result.title.trim()));
    }
  }, {
    key: "handleSearchChange",
    value: function handleSearchChange(alist, event, value) {
      var _this3 = this;

      this.props.onDataEdit(this.applyPrefix(event.target.value.trim()));
      this.setState({
        isLoading: true,
        value: event.target.value
      });
      setTimeout(function () {
        if (_this3.state.value.length < 1) return _this3.resetComponent();
        var re = new RegExp(_string.default.escapeRegExp(_this3.state.value), 'i');

        var isMatch = function isMatch(result) {
          return re.test(result.title);
        };

        var results = _collection.default.filter(alist, isMatch);

        _this3.setState({
          isLoading: false,
          results: results,
          lockEnter: results.length ? 1 : 0
        });
      }, 500);
    }
  }, {
    key: "render",
    value: function render() {
      var alist = []; //customize the autocompelte list

      if (this.props.autocompletelist && this.props.autocompletelist.length) {
        alist = this.props.autocompletelist;
      } else if (this.props.config && this.props.config.autocompletelist && this.props.config.autocompletelist.length) {
        alist = this.props.config.autocompletelist;
      } else if (this.props.includeOnly && this.props.includeOnly.length) {
        var tmp = [];
        this.props.includeOnly.forEach(function (item) {
          tmp = tmp.concat(_autocompletes.autocompletelist[item]);
        });
        alist = tmp;
      } else if (this.props.config && this.props.config.includeOnly && this.props.config.includeOnly.length) {
        var _tmp2 = [];
        this.props.config.includeOnly.forEach(function (item) {
          _tmp2 = _tmp2.concat(_autocompletes.autocompletelist[item]);
        });
        alist = _tmp2;
      } else {
        //default autocomplete list
        alist = [].concat(_autocompletes.autocompletelist.ldrClasses, _autocompletes.autocompletelist.ldrProperties, _autocompletes.autocompletelist.ldrLiterals, _autocompletes.autocompletelist.properties, _autocompletes.autocompletelist.classes);
      }

      var placeholder = ''; //placeholder can come from config or direct property

      if (this.props.config && this.props.config.placeholder) {
        placeholder = this.props.config.placeholder[0];
      } else {
        if (this.props.placeholder) {
          placeholder = this.props.placeholder;
        }
      }

      var _this$state = this.state,
          value = _this$state.value,
          results = _this$state.results,
          isLoading = _this$state.isLoading;
      return _react.default.createElement("div", {
        className: "sixteen wide column field"
      }, _react.default.createElement(_semanticUiReact.Search, {
        showNoResults: false,
        icon: "cube",
        ref: "prefixBasedInput",
        type: "text",
        loading: isLoading,
        value: this.preparePrefix(value),
        placeholder: placeholder,
        onResultSelect: this.handleChange.bind(this),
        onKeyDown: this.handleKeyDown.bind(this),
        onSearchChange: this.handleSearchChange.bind(this, alist),
        results: results
      }));
    }
  }]);

  return PrefixBasedInput;
}(_react.default.Component);

var _default = PrefixBasedInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 358:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createNewReactorConfig;

var _fluxibleRouter = __webpack_require__(34);

function createNewReactorConfig(context, payload, done) {
  context.service.create('resource.newReactorConfig', payload, {}, function (err, res) {
    if (payload.redirect || payload.params && payload.params.redirect) {
      context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/' + encodeURIComponent(res.datasetURI) + '/resource/' + encodeURIComponent(res.resourceURI)
      });
    }

    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 359:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _semanticUiReact = __webpack_require__(69);

var _createNewReactorConfig = _interopRequireDefault(__webpack_require__(358));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var PropertyHeader = /*#__PURE__*/function (_React$Component) {
  _inherits(PropertyHeader, _React$Component);

  function PropertyHeader(props) {
    _classCallCheck(this, PropertyHeader);

    return _possibleConstructorReturn(this, (PropertyHeader.__proto__ || Object.getPrototypeOf(PropertyHeader)).call(this, props));
  }

  _createClass(PropertyHeader, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "createRConfig",
    value: function createRConfig(scope) {
      this.context.executeAction(_createNewReactorConfig.default, {
        scope: scope,
        dataset: this.props.datasetURI,
        resourceURI: this.props.resourceURI,
        propertyURI: this.props.propertyURI,
        redirect: 1
      });
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var outputDIV,
          hintDIV = '',
          titleDIV,
          configDIV = '';
      var label = this.props.spec.property;

      if (this.props.config && this.props.config.label) {
        label = this.props.config.label;
      }

      titleDIV = _react.default.createElement("a", {
        style: {
          color: 'rgb(98, 91, 95)'
        },
        href: this.props.spec.propertyURI,
        target: "_blank"
      }, ' ', label, ' ');

      if (this.props.config && this.props.config.hint) {
        hintDIV = _react.default.createElement(_semanticUiReact.Popup, {
          trigger: _react.default.createElement("i", {
            className: "item circle info icon link"
          }),
          content: this.props.config.hint[0],
          wide: true,
          position: "right center"
        });
      }

      if (this.props.config && this.props.config.allowInlineConfig) {
        configDIV = _react.default.createElement(_semanticUiReact.Dropdown, {
          trigger: _react.default.createElement("span", {
            className: "ui circular icon black button mini"
          }, _react.default.createElement("i", {
            className: "ui settings icon"
          })),
          icon: null
        }, _react.default.createElement(_semanticUiReact.Dropdown.Menu, null, _react.default.createElement(_semanticUiReact.Dropdown.Item, {
          onClick: self.createRConfig.bind(self, 'P')
        }, ' ', "Add 'P' Config"), _react.default.createElement(_semanticUiReact.Dropdown.Item, {
          onClick: self.createRConfig.bind(self, 'DP')
        }, "Add 'DP' Config"), _react.default.createElement(_semanticUiReact.Dropdown.Item, {
          onClick: self.createRConfig.bind(self, 'RP')
        }, "Add 'RP' Config"), _react.default.createElement(_semanticUiReact.Dropdown.Item, {
          onClick: self.createRConfig.bind(self, 'DRP')
        }, ' ', "Add 'DRP' Config")));
      }

      switch (this.props.size) {
        case '1':
          outputDIV = _react.default.createElement("h1", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
          break;

        case '2':
          outputDIV = _react.default.createElement("h2", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
          break;

        case '3':
          outputDIV = _react.default.createElement("h3", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
          break;

        case '4':
          outputDIV = _react.default.createElement("h4", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
          break;

        case '5':
          outputDIV = _react.default.createElement("h5", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
          break;

        case '6':
          outputDIV = _react.default.createElement("h6", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
          break;

        default:
          outputDIV = _react.default.createElement("h3", null, ' ', titleDIV, " ", hintDIV, " ", configDIV);
      }

      return _react.default.createElement("span", {
        ref: "propertyHeader",
        style: {
          wordBreak: 'break-all',
          wordWrap: 'break-word'
        }
      }, outputDIV);
    }
  }]);

  return PropertyHeader;
}(_react.default.Component);

PropertyHeader.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
var _default = PropertyHeader;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 41:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var URIUtil = /*#__PURE__*/function () {
  function URIUtil() {
    _classCallCheck(this, URIUtil);
  }

  _createClass(URIUtil, null, [{
    key: "getURILabel",
    value: function getURILabel(uri) {
      var property = '';
      var tmp = uri;
      var tmp2 = tmp.split('#');

      if (tmp2.length > 1) {
        property = tmp2[1];
      } else {
        tmp2 = tmp.split('/');
        property = tmp2[tmp2.length - 1];
        tmp2 = property.split(':');
        property = tmp2[tmp2.length - 1];
      }

      if (!property.trim() || property === '00') {
        property = uri;
      }

      return property;
    }
  }, {
    key: "truncateMiddle",
    value: function truncateMiddle(fullStr, strLen, separator) {
      if (fullStr.length <= strLen) return fullStr;
      separator = separator || '...';
      var sepLen = separator.length,
          charsToShow = strLen - sepLen,
          frontChars = Math.ceil(charsToShow / 2),
          backChars = Math.floor(charsToShow / 2);
      return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);
    }
  }]);

  return URIUtil;
}();

var _default = URIUtil;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 462:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadFacets;

var _general = __webpack_require__(59);

var _loadDynamicFacetsConfig = _interopRequireDefault(__webpack_require__(1283));

var _async = _interopRequireDefault(__webpack_require__(342));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadFacets(context, payload, done) {
  //timer
  //let start, end, timeElapsed;
  //start = new Date().getTime();
  //dispatch action based on the parameter
  if (payload.mode === 'init') {
    //used for loading progress indicator
    context.dispatch('LOADING_DATA', {});

    _async.default.parallel([function (cback) {
      //dynamic config
      context.executeAction(_loadDynamicFacetsConfig.default, payload, cback);
    }, function (cback) {
      //clear facets
      context.dispatch('CLEAR_FACETS_SUCCESS', {});
      context.service.read('facet.facetsSecondLevel', payload, {
        timeout: 50 * 1000
      }, function (err, res) {
        //end = new Date().getTime();
        //timeElapsed = end - start;
        if (err) {
          context.dispatch('LOAD_FACETS_FAILURE', err);
        } else {
          context.dispatch('LOAD_FACETS_RESOURCES_SUCCESS', res);
        }

        context.dispatch('UPDATE_PAGE_TITLE', {
          pageTitle: _general.appFullTitle + ' | Faceted Browser | ' + decodeURIComponent(payload.id) || ''
        });
        cback();
      });
    }], // final callback
    function (err, results) {
      if (payload.isPivotChange) {
        context.dispatch('LOAD_MASTER_FROM_STATE_SUCCESS', {
          stateURI: payload.stateURI,
          id: payload.id,
          selection: payload.selection.prevSelection
        });
      }

      context.dispatch('LOADED_DATA', {});
      done();
    });
  } else if (payload.mode === 'envState') {
    //used for loading progress indicator
    context.dispatch('LOADING_DATA', {});

    _async.default.parallel([function (cback) {
      //dynamic config
      context.executeAction(_loadDynamicFacetsConfig.default, payload, cback);
    }, function (cback) {
      context.service.read('facet.facetsSecondLevel', payload, {
        timeout: 50 * 1000
      }, function (err, res) {
        //end = new Date().getTime();
        //timeElapsed = end - start;
        if (err) {
          context.dispatch('LOAD_FACETS_FAILURE', err);
        } else {
          context.dispatch('LOAD_FACETS_RESOURCES_SUCCESS', res);
        }

        context.dispatch('UPDATE_PAGE_TITLE', {
          pageTitle: _general.appFullTitle + ' | Faceted Browser | ' + decodeURIComponent(payload.id) || ''
        });
        cback();
      });
    }], // final callback
    function (err, results) {
      context.dispatch('LOAD_MASTER_FROM_STATE_SUCCESS', {
        stateURI: payload.stateURI,
        id: payload.id,
        selection: payload.selection.prevSelection
      });
      context.dispatch('LOADED_DATA', {});
      done();
    });
  } else if (payload.mode === 'master') {
    //used for loading progress indicator
    context.dispatch('LOADING_DATA', {});

    _async.default.parallel([function (cback) {
      //total number of items listed in facet
      context.service.read('facet.facetsMasterCount', payload, {
        timeout: 50 * 1000
      }, function (err, res) {
        //end = new Date().getTime();
        //timeElapsed = end - start;
        if (err) {
          context.dispatch('LOAD_FACETS_COUNT_FAILURE', err);
        } else {
          context.dispatch('LOAD_MASTER_FACETS_COUNT_SUCCESS', res);
        }

        cback();
      });
    }, function (cback) {
      //items of facets
      context.service.read('facet.facetsMaster', payload, {
        timeout: 50 * 1000
      }, function (err, res) {
        //end = new Date().getTime();
        //timeElapsed = end - start;
        if (err) {
          context.dispatch('LOAD_FACETS_FAILURE', err);
        } else {
          context.dispatch('LOAD_MASTER_FACETS_SUCCESS', res);
        }

        cback();
      });
    }], // final callback
    function (err, results) {
      context.dispatch('LOADED_DATA', {});
      done();
    });
  } else if (payload.mode === 'masterMore') {
    //used for loading progress indicator
    context.dispatch('LOADING_DATA', {}); //items of facets

    context.service.read('facet.facetsMaster', payload, {
      timeout: 50 * 1000
    }, function (err, res) {
      //end = new Date().getTime();
      //timeElapsed = end - start;
      if (err) {
        context.dispatch('LOAD_FACETS_FAILURE', err);
      } else {
        context.dispatch('LOADED_DATA', {});
        context.dispatch('LOAD_MASTER_MORE_FACETS_SUCCESS', res);
      }

      done();
    });
  } else if (payload.mode === 'masterFromState') {
    // gets the selection from envState and tries to regenerate the facets
    context.dispatch('LOAD_MASTER_FROM_STATE_SUCCESS', payload);
    done();
  } else if (payload.mode === 'sideEffect') {
    //used for loading progress indicator
    context.dispatch('LOADING_DATA', {});

    _async.default.parallel([function (cback) {
      //total number of items listed in facet
      context.service.read('facet.facetsSideEffectCount', payload, {
        timeout: 50 * 1000
      }, function (err, res) {
        //end = new Date().getTime();
        //timeElapsed = end - start;
        if (err) {
          context.dispatch('LOAD_FACETS_FAILURE', err);
        } else {
          context.dispatch('LOAD_SIDE_EFFECTS_COUNT_FACETS_SUCCESS', res);
        }

        cback();
      });
    }, function (cback) {
      //items of facets
      context.service.read('facet.facetsSideEffect', payload, {
        timeout: 50 * 1000
      }, function (err, res) {
        //end = new Date().getTime();
        //timeElapsed = end - start;
        if (err) {
          context.dispatch('LOAD_FACETS_FAILURE', err);
        } else {
          context.dispatch('LOAD_SIDE_EFFECTS_FACETS_SUCCESS', res);
        }

        cback();
      });
    }], // final callback
    function (err, results) {
      context.dispatch('LOADED_DATA', {});
      done();
    });
  } else if (payload.mode === 'second') {
    //used for loading progress indicator
    context.dispatch('LOADING_DATA', {});
    context.service.read('facet.facetsSecondLevel', payload, {
      timeout: 50 * 1000
    }, function (err, res) {
      //end = new Date().getTime();
      //timeElapsed = end - start;
      if (err) {
        context.dispatch('LOAD_FACETS_FAILURE', err);
      } else {
        context.dispatch('LOAD_FACETS_RESOURCES_SUCCESS', res);
      }

      context.dispatch('LOADED_DATA', {});
      done();
    });
  }
}

module.exports = exports.default;

/***/ }),

/***/ 463:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ImportStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(ImportStore, _BaseStore);

  function ImportStore(dispatcher) {
    var _this;

    _classCallCheck(this, ImportStore);

    _this = _possibleConstructorReturn(this, (ImportStore.__proto__ || Object.getPrototypeOf(ImportStore)).call(this, dispatcher));
    _this.rows = [];
    _this.total = 0;
    _this.completed = 0;
    _this.output = '';
    return _this;
  }

  _createClass(ImportStore, [{
    key: "clearAll",
    value: function clearAll() {
      this.rows = [];
      this.total = 0;
      this.completed = 0;
      this.output = '';
    }
  }, {
    key: "clearConf",
    value: function clearConf() {
      this.clearAll();
      this.emitChange();
    }
  }, {
    key: "updateOutput",
    value: function updateOutput(payload) {
      this.output = payload.output;
      this.emitChange();
    }
  }, {
    key: "updateAttribs",
    value: function updateAttribs(payload) {
      this.rows = payload.rows;
      this.total = payload.total;
      this.output = payload.output;
      this.completed = 1;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        rows: this.rows,
        total: this.total,
        completed: this.completed,
        output: this.output
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.rows = state.rows;
      this.total = state.total;
      this.completed = state.completed;
    }
  }]);

  return ImportStore;
}(_addons.BaseStore);

ImportStore.storeName = 'ImportStore'; // PR open in dispatchr to remove this need

ImportStore.handlers = {
  'READ_CSV_SUCCESS': 'updateAttribs',
  'CLEAR_IMPORT_CONFFIG_SUCCESS': 'clearConf',
  'CREATE_JSONLD_SUCCESS': 'updateOutput'
};
var _default = ImportStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 487:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createASampleFacetsConfig;

var _fluxibleRouter = __webpack_require__(34);

function createASampleFacetsConfig(context, payload, done) {
  context.service.create('resource.newFacetsConfig', payload, {}, function (err, res) {
    if (payload.redirect || payload.params && payload.params.redirect) {
      context.executeAction(_fluxibleRouter.navigateAction, {
        url: '/dataset/' + encodeURIComponent(res.datasetURI) + '/resource/' + encodeURIComponent(res.resourceURI)
      });
    }

    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 488:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatasetsStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(DatasetsStore, _BaseStore);

  function DatasetsStore(dispatcher) {
    var _this;

    _classCallCheck(this, DatasetsStore);

    _this = _possibleConstructorReturn(this, (DatasetsStore.__proto__ || Object.getPrototypeOf(DatasetsStore)).call(this, dispatcher));

    _this.clearAll();

    return _this;
  }

  _createClass(DatasetsStore, [{
    key: "clearAll",
    value: function clearAll() {
      this.datasetsList = [];
    }
  }, {
    key: "loadDatasetsList",
    value: function loadDatasetsList(payload) {
      this.datasetsList = this.mergeDatasets(payload.dynamicReactorDS, payload.dynamicFacetsDS, payload.staticReactorDS, payload.staticFacetsDS);
      this.emitChange();
    }
  }, {
    key: "compareProps",
    value: function compareProps(a, b) {
      if (a.features && b.features) {
        if (parseFloat(a.features.position) < parseFloat(b.features.position)) return -1;
        if (parseFloat(a.features.position) > parseFloat(b.features.position)) return 1; //sort by alphabets

        if (a.features.datasetLabel < b.features.datasetLabel) {
          return -1;
        }

        if (a.features.datasetLabel > b.features.datasetLabel) {
          return 1;
        }
      }

      return 0;
    }
  }, {
    key: "mergeDatasets",
    value: function mergeDatasets(dynamicReactorDS, dynamicFacetsDS, staticReactorDS, staticFacetsDS) {
      var out = [];
      var tmp = {};

      for (var ds in staticReactorDS.dataset) {
        if (tmp[ds]) {
          //overwrite properties
          for (var prop in staticReactorDS.dataset[ds]) {
            tmp[ds][prop] = staticReactorDS.dataset[ds][prop];
          }
        } else {
          tmp[ds] = staticReactorDS.dataset[ds];
        }
      }

      for (var _ds in staticFacetsDS.facets) {
        if (tmp[_ds]) {
          //overwrite properties
          for (var _prop in staticFacetsDS.facets[_ds]) {
            tmp[_ds][_prop] = staticFacetsDS.facets[_ds][_prop];
          }
        } else {
          tmp[_ds] = staticFacetsDS.facets[_ds];
        }

        tmp[_ds].isBrowsable = 1;
      }

      for (var _ds2 in dynamicReactorDS.dataset) {
        if (tmp[_ds2]) {
          //overwrite properties
          for (var _prop2 in dynamicReactorDS.dataset[_ds2]) {
            tmp[_ds2][_prop2] = dynamicReactorDS.dataset[_ds2][_prop2];
          }

          tmp[_ds2].isStaticDynamic = 1;
        } else {
          tmp[_ds2] = dynamicReactorDS.dataset[_ds2];
          tmp[_ds2].isDynamic = 1;
        }
      }

      for (var _ds3 in dynamicFacetsDS.facets) {
        if (tmp[_ds3]) {
          //overwrite properties
          for (var _prop3 in dynamicFacetsDS.facets[_ds3]) {
            tmp[_ds3][_prop3] = dynamicFacetsDS.facets[_ds3][_prop3];
          } //if the config is not only from dynamic reactor configs


          if (!tmp[_ds3].isDynamic) {
            tmp[_ds3].isStaticDynamic = 1;
          }
        } else {
          tmp[_ds3] = dynamicFacetsDS.facets[_ds3];
          tmp[_ds3].isDynamic = 1;
        }

        tmp[_ds3].isBrowsable = 1;
      }

      for (var _ds4 in tmp) {
        if (!tmp[_ds4].position) {
          tmp[_ds4].position = 0;
        }

        if (!tmp[_ds4].isHidden) {
          out.push({
            d: _ds4,
            features: tmp[_ds4]
          });
        }
      } //sort by position and labels


      out.sort(this.compareProps);
      return out;
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        datasetsList: this.datasetsList
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.datasetsList = state.datasetsList;
    }
  }]);

  return DatasetsStore;
}(_addons.BaseStore);

DatasetsStore.storeName = 'DatasetsStore'; // PR open in dispatchr to remove this need

DatasetsStore.handlers = {
  'LOAD_DATASETS_SUCCESS': 'loadDatasetsList'
};
var _default = DatasetsStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 489:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _general = __webpack_require__(59);

var includesDataset = function includesDataset(rights, dataset) {
  var out = false;
  rights.forEach(function (el) {
    if (el.scope === 'D') {
      if (el.dataset === dataset) {
        out = true;
        return out;
      }
    }
  });
  return out;
};

var includesResource = function includesResource(rights, dataset, resource, resourceType) {
  var out = false;
  rights.forEach(function (el) {
    if (el.scope === 'DR') {
      if (el.dataset === dataset && el.resource === resource) {
        out = true;
        return out;
      } else {
        if (el.treatAsResourceType && el.dataset === dataset && resourceType.indexOf(el.resource) !== -1) {
          out = true;
          return out;
        }
      }
    } else if (el.scope === 'R') {
      if (el.resource === resource) {
        out = true;
        return out;
      } else {
        if (el.treatAsResourceType && resourceType.indexOf(el.resource) !== -1) {
          out = true;
          return out;
        }
      }
    }
  });
  return out;
};

var includesProperty = function includesProperty(rights, dataset, resource, resourceType, property) {
  var out = false;
  rights.forEach(function (el) {
    if (el.scope && el.scope === 'DP') {
      if (el.dataset === dataset && el.property === property) {
        out = true;
        return out;
      }
    } else if (el.scope && el.scope === 'RP') {
      if (el.resource === resource && el.property === property) {
        out = true;
        return out;
      } else {
        if (el.treatAsResourceType && el.resource === resourceType && el.property === property) {
          out = true;
          return out;
        }
      }
    } else if (el.scope && el.scope === 'DRP') {
      if (el.dataset === dataset && el.resource === resource && el.property === property) {
        out = true;
        return out;
      } else {
        if (el.treatAsResourceType && el.dataset === dataset && el.resource === resourceType && el.property === property) {
          out = true;
          return out;
        }
      }
    } else if (el.scope && el.scope === 'P') {
      if (el.property === property) {
        out = true;
        return out;
      }
    }
  });
  return out;
};

var _default = {
  checkViewAccess: function checkViewAccess(user, dataset, resource, resourceType, property) {
    //check view access
    if (!_general.enableAuthentication) {
      return {
        access: true,
        type: 'full'
      };
    }

    if (parseInt(user.isSuperUser)) {
      return {
        access: true,
        type: 'full'
      };
    } else {
      if (dataset && user.viewerOf && includesDataset(user.viewerOf, dataset)) {
        return {
          access: true,
          type: 'full'
        };
      } else {
        if (resource && user.viewerOf && includesResource(user.viewerOf, dataset, resource, resourceType)) {
          return {
            access: true,
            type: 'full'
          };
        } else {
          if (property && user.viewerOf && includesProperty(user.viewerOf, dataset, resource, resourceType, property)) {
            return {
              access: true,
              type: 'partial'
            };
          } else {
            return {
              access: false
            };
          }
        }
      }
    }
  },
  checkEditAccess: function checkEditAccess(user, dataset, resource, resourceType, property) {
    //console.log(user.editorOf, dataset, resource, resourceType, property);
    if (!_general.enableAuthentication) {
      return {
        access: true,
        type: 'full'
      };
    }

    if (parseInt(user.isSuperUser)) {
      return {
        access: true,
        type: 'full'
      };
    } else {
      if (dataset && user.editorOf && includesDataset(user.editorOf, dataset)) {
        return {
          access: true,
          type: 'full'
        };
      } else {
        if (resource && user.editorOf && includesResource(user.editorOf, dataset, resource, resourceType)) {
          return {
            access: true,
            type: 'full'
          };
        } else {
          if (property && user.editorOf && includesProperty(user.editorOf, dataset, resource, resourceType, property)) {
            return {
              access: true,
              type: 'partial'
            };
          } else {
            return {
              access: false
            };
          }
        }
      }
    }
  }
};
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 490:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _Timer = _interopRequireDefault(__webpack_require__(1463));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var WaitAMoment = /*#__PURE__*/function (_React$Component) {
  _inherits(WaitAMoment, _React$Component);

  function WaitAMoment() {
    _classCallCheck(this, WaitAMoment);

    return _possibleConstructorReturn(this, (WaitAMoment.__proto__ || Object.getPrototypeOf(WaitAMoment)).apply(this, arguments));
  }

  _createClass(WaitAMoment, [{
    key: "render",
    value: function render() {
      var msg = 'Wait a moment until the new environment is generated...';

      if (this.props.msg) {
        msg = this.props.msg;
      }

      return _react.default.createElement("div", {
        className: "ui segment"
      }, _react.default.createElement("div", {
        className: "ui right corner mini label"
      }, _react.default.createElement(_Timer.default, null)), _react.default.createElement("h2", null, ' ', _react.default.createElement("img", {
        src: "".concat(PUBLIC_URL, "/assets/img/loader.gif"),
        alt: "loading...",
        style: {
          height: 30,
          width: 30
        }
      }), ' ', msg));
    }
  }]);

  return WaitAMoment;
}(_react.default.Component);

var _default = WaitAMoment;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 491:
/***/ (function(module, exports) {

module.exports = {
  list: [{
    'code': 'ab',
    'name': 'Abkhaz',
    'nativeName': 'аҧсуа'
  }, {
    'code': 'aa',
    'name': 'Afar',
    'nativeName': 'Afaraf'
  }, {
    'code': 'af',
    'name': 'Afrikaans',
    'nativeName': 'Afrikaans'
  }, {
    'code': 'ak',
    'name': 'Akan',
    'nativeName': 'Akan'
  }, {
    'code': 'sq',
    'name': 'Albanian',
    'nativeName': 'Shqip'
  }, {
    'code': 'am',
    'name': 'Amharic',
    'nativeName': 'አማርኛ'
  }, {
    'code': 'ar',
    'name': 'Arabic',
    'nativeName': 'العربية'
  }, {
    'code': 'an',
    'name': 'Aragonese',
    'nativeName': 'Aragonés'
  }, {
    'code': 'hy',
    'name': 'Armenian',
    'nativeName': 'Հայերեն'
  }, {
    'code': 'as',
    'name': 'Assamese',
    'nativeName': 'অসমীয়া'
  }, {
    'code': 'av',
    'name': 'Avaric',
    'nativeName': 'авар мацӀ, магӀарул мацӀ'
  }, {
    'code': 'ae',
    'name': 'Avestan',
    'nativeName': 'avesta'
  }, {
    'code': 'ay',
    'name': 'Aymara',
    'nativeName': 'aymar aru'
  }, {
    'code': 'az',
    'name': 'Azerbaijani',
    'nativeName': 'azərbaycan dili'
  }, {
    'code': 'bm',
    'name': 'Bambara',
    'nativeName': 'bamanankan'
  }, {
    'code': 'ba',
    'name': 'Bashkir',
    'nativeName': 'башҡорт теле'
  }, {
    'code': 'eu',
    'name': 'Basque',
    'nativeName': 'euskara, euskera'
  }, {
    'code': 'be',
    'name': 'Belarusian',
    'nativeName': 'Беларуская'
  }, {
    'code': 'bn',
    'name': 'Bengali',
    'nativeName': 'বাংলা'
  }, {
    'code': 'bh',
    'name': 'Bihari',
    'nativeName': 'भोजपुरी'
  }, {
    'code': 'bi',
    'name': 'Bislama',
    'nativeName': 'Bislama'
  }, {
    'code': 'bs',
    'name': 'Bosnian',
    'nativeName': 'bosanski jezik'
  }, {
    'code': 'br',
    'name': 'Breton',
    'nativeName': 'brezhoneg'
  }, {
    'code': 'bg',
    'name': 'Bulgarian',
    'nativeName': 'български език'
  }, {
    'code': 'my',
    'name': 'Burmese',
    'nativeName': 'ဗမာစာ'
  }, {
    'code': 'ca',
    'name': 'Catalan; Valencian',
    'nativeName': 'Català'
  }, {
    'code': 'ch',
    'name': 'Chamorro',
    'nativeName': 'Chamoru'
  }, {
    'code': 'ce',
    'name': 'Chechen',
    'nativeName': 'нохчийн мотт'
  }, {
    'code': 'ny',
    'name': 'Chichewa; Chewa; Nyanja',
    'nativeName': 'chiCheŵa, chinyanja'
  }, {
    'code': 'zh',
    'name': 'Chinese',
    'nativeName': '中文 (Zhōngwén), 汉语, 漢語'
  }, {
    'code': 'cv',
    'name': 'Chuvash',
    'nativeName': 'чӑваш чӗлхи'
  }, {
    'code': 'kw',
    'name': 'Cornish',
    'nativeName': 'Kernewek'
  }, {
    'code': 'co',
    'name': 'Corsican',
    'nativeName': 'corsu, lingua corsa'
  }, {
    'code': 'cr',
    'name': 'Cree',
    'nativeName': 'ᓀᐦᐃᔭᐍᐏᐣ'
  }, {
    'code': 'hr',
    'name': 'Croatian',
    'nativeName': 'hrvatski'
  }, {
    'code': 'cs',
    'name': 'Czech',
    'nativeName': 'česky, čeština'
  }, {
    'code': 'da',
    'name': 'Danish',
    'nativeName': 'dansk'
  }, {
    'code': 'dv',
    'name': 'Divehi; Dhivehi; Maldivian;',
    'nativeName': 'ދިވެހި'
  }, {
    'code': 'nl',
    'name': 'Dutch',
    'nativeName': 'Nederlands, Vlaams'
  }, {
    'code': 'en',
    'name': 'English',
    'nativeName': 'English'
  }, {
    'code': 'eo',
    'name': 'Esperanto',
    'nativeName': 'Esperanto'
  }, {
    'code': 'et',
    'name': 'Estonian',
    'nativeName': 'eesti, eesti keel'
  }, {
    'code': 'ee',
    'name': 'Ewe',
    'nativeName': 'Eʋegbe'
  }, {
    'code': 'fo',
    'name': 'Faroese',
    'nativeName': 'føroyskt'
  }, {
    'code': 'fj',
    'name': 'Fijian',
    'nativeName': 'vosa Vakaviti'
  }, {
    'code': 'fi',
    'name': 'Finnish',
    'nativeName': 'suomi, suomen kieli'
  }, {
    'code': 'fr',
    'name': 'French',
    'nativeName': 'français, langue française'
  }, {
    'code': 'ff',
    'name': 'Fula; Fulah; Pulaar; Pular',
    'nativeName': 'Fulfulde, Pulaar, Pular'
  }, {
    'code': 'gl',
    'name': 'Galician',
    'nativeName': 'Galego'
  }, {
    'code': 'ka',
    'name': 'Georgian',
    'nativeName': 'ქართული'
  }, {
    'code': 'de',
    'name': 'German',
    'nativeName': 'Deutsch'
  }, {
    'code': 'el',
    'name': 'Greek, Modern',
    'nativeName': 'Ελληνικά'
  }, {
    'code': 'gn',
    'name': 'Guaraní',
    'nativeName': 'Avañeẽ'
  }, {
    'code': 'gu',
    'name': 'Gujarati',
    'nativeName': 'ગુજરાતી'
  }, {
    'code': 'ht',
    'name': 'Haitian; Haitian Creole',
    'nativeName': 'Kreyòl ayisyen'
  }, {
    'code': 'ha',
    'name': 'Hausa',
    'nativeName': 'Hausa, هَوُسَ'
  }, {
    'code': 'he',
    'name': 'Hebrew (modern)',
    'nativeName': 'עברית'
  }, {
    'code': 'hz',
    'name': 'Herero',
    'nativeName': 'Otjiherero'
  }, {
    'code': 'hi',
    'name': 'Hindi',
    'nativeName': 'हिन्दी, हिंदी'
  }, {
    'code': 'ho',
    'name': 'Hiri Motu',
    'nativeName': 'Hiri Motu'
  }, {
    'code': 'hu',
    'name': 'Hungarian',
    'nativeName': 'Magyar'
  }, {
    'code': 'ia',
    'name': 'Interlingua',
    'nativeName': 'Interlingua'
  }, {
    'code': 'id',
    'name': 'Indonesian',
    'nativeName': 'Bahasa Indonesia'
  }, {
    'code': 'ie',
    'name': 'Interlingue',
    'nativeName': 'Originally called Occidental; then Interlingue after WWII'
  }, {
    'code': 'ga',
    'name': 'Irish',
    'nativeName': 'Gaeilge'
  }, {
    'code': 'ig',
    'name': 'Igbo',
    'nativeName': 'Asụsụ Igbo'
  }, {
    'code': 'ik',
    'name': 'Inupiaq',
    'nativeName': 'Iñupiaq, Iñupiatun'
  }, {
    'code': 'io',
    'name': 'Ido',
    'nativeName': 'Ido'
  }, {
    'code': 'is',
    'name': 'Icelandic',
    'nativeName': 'Íslenska'
  }, {
    'code': 'it',
    'name': 'Italian',
    'nativeName': 'Italiano'
  }, {
    'code': 'iu',
    'name': 'Inuktitut',
    'nativeName': 'ᐃᓄᒃᑎᑐᑦ'
  }, {
    'code': 'ja',
    'name': 'Japanese',
    'nativeName': '日本語 (にほんご／にっぽんご)'
  }, {
    'code': 'jv',
    'name': 'Javanese',
    'nativeName': 'basa Jawa'
  }, {
    'code': 'kl',
    'name': 'Kalaallisut, Greenlandic',
    'nativeName': 'kalaallisut, kalaallit oqaasii'
  }, {
    'code': 'kn',
    'name': 'Kannada',
    'nativeName': 'ಕನ್ನಡ'
  }, {
    'code': 'kr',
    'name': 'Kanuri',
    'nativeName': 'Kanuri'
  }, {
    'code': 'ks',
    'name': 'Kashmiri',
    'nativeName': 'कश्मीरी, كشميري‎'
  }, {
    'code': 'kk',
    'name': 'Kazakh',
    'nativeName': 'Қазақ тілі'
  }, {
    'code': 'km',
    'name': 'Khmer',
    'nativeName': 'ភាសាខ្មែរ'
  }, {
    'code': 'ki',
    'name': 'Kikuyu, Gikuyu',
    'nativeName': 'Gĩkũyũ'
  }, {
    'code': 'rw',
    'name': 'Kinyarwanda',
    'nativeName': 'Ikinyarwanda'
  }, {
    'code': 'ky',
    'name': 'Kirghiz, Kyrgyz',
    'nativeName': 'кыргыз тили'
  }, {
    'code': 'kv',
    'name': 'Komi',
    'nativeName': 'коми кыв'
  }, {
    'code': 'kg',
    'name': 'Kongo',
    'nativeName': 'KiKongo'
  }, {
    'code': 'ko',
    'name': 'Korean',
    'nativeName': '한국어 (韓國語), 조선말 (朝鮮語)'
  }, {
    'code': 'ku',
    'name': 'Kurdish',
    'nativeName': 'Kurdî, كوردی‎'
  }, {
    'code': 'kj',
    'name': 'Kwanyama, Kuanyama',
    'nativeName': 'Kuanyama'
  }, {
    'code': 'la',
    'name': 'Latin',
    'nativeName': 'latine, lingua latina'
  }, {
    'code': 'lb',
    'name': 'Luxembourgish, Letzeburgesch',
    'nativeName': 'Lëtzebuergesch'
  }, {
    'code': 'lg',
    'name': 'Luganda',
    'nativeName': 'Luganda'
  }, {
    'code': 'li',
    'name': 'Limburgish, Limburgan, Limburger',
    'nativeName': 'Limburgs'
  }, {
    'code': 'ln',
    'name': 'Lingala',
    'nativeName': 'Lingála'
  }, {
    'code': 'lo',
    'name': 'Lao',
    'nativeName': 'ພາສາລາວ'
  }, {
    'code': 'lt',
    'name': 'Lithuanian',
    'nativeName': 'lietuvių kalba'
  }, {
    'code': 'lu',
    'name': 'Luba-Katanga',
    'nativeName': ''
  }, {
    'code': 'lv',
    'name': 'Latvian',
    'nativeName': 'latviešu valoda'
  }, {
    'code': 'gv',
    'name': 'Manx',
    'nativeName': 'Gaelg, Gailck'
  }, {
    'code': 'mk',
    'name': 'Macedonian',
    'nativeName': 'македонски јазик'
  }, {
    'code': 'mg',
    'name': 'Malagasy',
    'nativeName': 'Malagasy fiteny'
  }, {
    'code': 'ms',
    'name': 'Malay',
    'nativeName': 'bahasa Melayu, بهاس ملايو‎'
  }, {
    'code': 'ml',
    'name': 'Malayalam',
    'nativeName': 'മലയാളം'
  }, {
    'code': 'mt',
    'name': 'Maltese',
    'nativeName': 'Malti'
  }, {
    'code': 'mi',
    'name': 'Māori',
    'nativeName': 'te reo Māori'
  }, {
    'code': 'mr',
    'name': 'Marathi (Marāṭhī)',
    'nativeName': 'मराठी'
  }, {
    'code': 'mh',
    'name': 'Marshallese',
    'nativeName': 'Kajin M̧ajeļ'
  }, {
    'code': 'mn',
    'name': 'Mongolian',
    'nativeName': 'монгол'
  }, {
    'code': 'na',
    'name': 'Nauru',
    'nativeName': 'Ekakairũ Naoero'
  }, {
    'code': 'nv',
    'name': 'Navajo, Navaho',
    'nativeName': 'Diné bizaad, Dinékʼehǰí'
  }, {
    'code': 'nb',
    'name': 'Norwegian Bokmål',
    'nativeName': 'Norsk bokmål'
  }, {
    'code': 'nd',
    'name': 'North Ndebele',
    'nativeName': 'isiNdebele'
  }, {
    'code': 'ne',
    'name': 'Nepali',
    'nativeName': 'नेपाली'
  }, {
    'code': 'ng',
    'name': 'Ndonga',
    'nativeName': 'Owambo'
  }, {
    'code': 'nn',
    'name': 'Norwegian Nynorsk',
    'nativeName': 'Norsk nynorsk'
  }, {
    'code': 'no',
    'name': 'Norwegian',
    'nativeName': 'Norsk'
  }, {
    'code': 'ii',
    'name': 'Nuosu',
    'nativeName': 'ꆈꌠ꒿ Nuosuhxop'
  }, {
    'code': 'nr',
    'name': 'South Ndebele',
    'nativeName': 'isiNdebele'
  }, {
    'code': 'oc',
    'name': 'Occitan',
    'nativeName': 'Occitan'
  }, {
    'code': 'oj',
    'name': 'Ojibwe, Ojibwa',
    'nativeName': 'ᐊᓂᔑᓈᐯᒧᐎᓐ'
  }, {
    'code': 'cu',
    'name': 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic',
    'nativeName': 'ѩзыкъ словѣньскъ'
  }, {
    'code': 'om',
    'name': 'Oromo',
    'nativeName': 'Afaan Oromoo'
  }, {
    'code': 'or',
    'name': 'Oriya',
    'nativeName': 'ଓଡ଼ିଆ'
  }, {
    'code': 'os',
    'name': 'Ossetian, Ossetic',
    'nativeName': 'ирон æвзаг'
  }, {
    'code': 'pa',
    'name': 'Panjabi, Punjabi',
    'nativeName': 'ਪੰਜਾਬੀ, پنجابی‎'
  }, {
    'code': 'pi',
    'name': 'Pāli',
    'nativeName': 'पाऴि'
  }, {
    'code': 'fa',
    'name': 'Persian',
    'nativeName': 'فارسی'
  }, {
    'code': 'pl',
    'name': 'Polish',
    'nativeName': 'polski'
  }, {
    'code': 'ps',
    'name': 'Pashto, Pushto',
    'nativeName': 'پښتو'
  }, {
    'code': 'pt',
    'name': 'Portuguese',
    'nativeName': 'Português'
  }, {
    'code': 'qu',
    'name': 'Quechua',
    'nativeName': 'Runa Simi, Kichwa'
  }, {
    'code': 'rm',
    'name': 'Romansh',
    'nativeName': 'rumantsch grischun'
  }, {
    'code': 'rn',
    'name': 'Kirundi',
    'nativeName': 'kiRundi'
  }, {
    'code': 'ro',
    'name': 'Romanian, Moldavian, Moldovan',
    'nativeName': 'română'
  }, {
    'code': 'ru',
    'name': 'Russian',
    'nativeName': 'русский язык'
  }, {
    'code': 'sa',
    'name': 'Sanskrit (Saṁskṛta)',
    'nativeName': 'संस्कृतम्'
  }, {
    'code': 'sc',
    'name': 'Sardinian',
    'nativeName': 'sardu'
  }, {
    'code': 'sd',
    'name': 'Sindhi',
    'nativeName': 'सिन्धी, سنڌي، سندھی‎'
  }, {
    'code': 'se',
    'name': 'Northern Sami',
    'nativeName': 'Davvisámegiella'
  }, {
    'code': 'sm',
    'name': 'Samoan',
    'nativeName': 'gagana faa Samoa'
  }, {
    'code': 'sg',
    'name': 'Sango',
    'nativeName': 'yângâ tî sängö'
  }, {
    'code': 'sr',
    'name': 'Serbian',
    'nativeName': 'српски језик'
  }, {
    'code': 'gd',
    'name': 'Scottish Gaelic; Gaelic',
    'nativeName': 'Gàidhlig'
  }, {
    'code': 'sn',
    'name': 'Shona',
    'nativeName': 'chiShona'
  }, {
    'code': 'si',
    'name': 'Sinhala, Sinhalese',
    'nativeName': 'සිංහල'
  }, {
    'code': 'sk',
    'name': 'Slovak',
    'nativeName': 'slovenčina'
  }, {
    'code': 'sl',
    'name': 'Slovene',
    'nativeName': 'slovenščina'
  }, {
    'code': 'so',
    'name': 'Somali',
    'nativeName': 'Soomaaliga, af Soomaali'
  }, {
    'code': 'st',
    'name': 'Southern Sotho',
    'nativeName': 'Sesotho'
  }, {
    'code': 'es',
    'name': 'Spanish; Castilian',
    'nativeName': 'español, castellano'
  }, {
    'code': 'su',
    'name': 'Sundanese',
    'nativeName': 'Basa Sunda'
  }, {
    'code': 'sw',
    'name': 'Swahili',
    'nativeName': 'Kiswahili'
  }, {
    'code': 'ss',
    'name': 'Swati',
    'nativeName': 'SiSwati'
  }, {
    'code': 'sv',
    'name': 'Swedish',
    'nativeName': 'svenska'
  }, {
    'code': 'ta',
    'name': 'Tamil',
    'nativeName': 'தமிழ்'
  }, {
    'code': 'te',
    'name': 'Telugu',
    'nativeName': 'తెలుగు'
  }, {
    'code': 'tg',
    'name': 'Tajik',
    'nativeName': 'тоҷикӣ, toğikī, تاجیکی‎'
  }, {
    'code': 'th',
    'name': 'Thai',
    'nativeName': 'ไทย'
  }, {
    'code': 'ti',
    'name': 'Tigrinya',
    'nativeName': 'ትግርኛ'
  }, {
    'code': 'bo',
    'name': 'Tibetan Standard, Tibetan, Central',
    'nativeName': 'བོད་ཡིག'
  }, {
    'code': 'tk',
    'name': 'Turkmen',
    'nativeName': 'Türkmen, Түркмен'
  }, {
    'code': 'tl',
    'name': 'Tagalog',
    'nativeName': 'Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔'
  }, {
    'code': 'tn',
    'name': 'Tswana',
    'nativeName': 'Setswana'
  }, {
    'code': 'to',
    'name': 'Tonga (Tonga Islands)',
    'nativeName': 'faka Tonga'
  }, {
    'code': 'tr',
    'name': 'Turkish',
    'nativeName': 'Türkçe'
  }, {
    'code': 'ts',
    'name': 'Tsonga',
    'nativeName': 'Xitsonga'
  }, {
    'code': 'tt',
    'name': 'Tatar',
    'nativeName': 'татарча, tatarça, تاتارچا‎'
  }, {
    'code': 'tw',
    'name': 'Twi',
    'nativeName': 'Twi'
  }, {
    'code': 'ty',
    'name': 'Tahitian',
    'nativeName': 'Reo Tahiti'
  }, {
    'code': 'ug',
    'name': 'Uighur, Uyghur',
    'nativeName': 'Uyƣurqə, ئۇيغۇرچە‎'
  }, {
    'code': 'uk',
    'name': 'Ukrainian',
    'nativeName': 'українська'
  }, {
    'code': 'ur',
    'name': 'Urdu',
    'nativeName': 'اردو'
  }, {
    'code': 'uz',
    'name': 'Uzbek',
    'nativeName': 'zbek, Ўзбек, أۇزبېك‎'
  }, {
    'code': 've',
    'name': 'Venda',
    'nativeName': 'Tshivenḓa'
  }, {
    'code': 'vi',
    'name': 'Vietnamese',
    'nativeName': 'Tiếng Việt'
  }, {
    'code': 'vo',
    'name': 'Volapük',
    'nativeName': 'Volapük'
  }, {
    'code': 'wa',
    'name': 'Walloon',
    'nativeName': 'Walon'
  }, {
    'code': 'cy',
    'name': 'Welsh',
    'nativeName': 'Cymraeg'
  }, {
    'code': 'wo',
    'name': 'Wolof',
    'nativeName': 'Wollof'
  }, {
    'code': 'fy',
    'name': 'Western Frisian',
    'nativeName': 'Frysk'
  }, {
    'code': 'xh',
    'name': 'Xhosa',
    'nativeName': 'isiXhosa'
  }, {
    'code': 'yi',
    'name': 'Yiddish',
    'nativeName': 'ייִדיש'
  }, {
    'code': 'yo',
    'name': 'Yoruba',
    'nativeName': 'Yorùbá'
  }, {
    'code': 'za',
    'name': 'Zhuang, Chuang',
    'nativeName': 'Saɯ cueŋƅ, Saw cuengh'
  }]
};

/***/ }),

/***/ 492:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = __webpack_require__(27);

var _chromaJs = _interopRequireDefault(__webpack_require__(299));

var _simplifyJs = _interopRequireDefault(__webpack_require__(1486));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var LeafletMapView = /*#__PURE__*/function (_React$Component) {
  _inherits(LeafletMapView, _React$Component);

  function LeafletMapView() {
    var _ref;

    _classCallCheck(this, LeafletMapView);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _possibleConstructorReturn(this, (_ref = LeafletMapView.__proto__ || Object.getPrototypeOf(LeafletMapView)).call.apply(_ref, [this].concat(args)));
  }

  _createClass(LeafletMapView, [{
    key: "styleGeoJSON",
    value: function styleGeoJSON(feature) {
      return {
        color: feature.style.color,
        fill: feature.style.fill,
        fillColor: feature.style.fillColor,
        fillOpacity: feature.style.fillOpacity,
        opacity: feature.style.opacity,
        weight: feature.style.weight
      };
    } //maps values to colors

  }, {
    key: "colorMapping",
    value: function colorMapping(weights) {
      var arr1 = weights;
      arr1 = arr1.filter(function (v, i, a) {
        return a.indexOf(v) === i;
      });
      arr1.sort();

      var colors = _chromaJs.default.scale(['grey', 'red']).colors(arr1.length);

      var mapping = {};
      arr1.forEach(function (v, i) {
        mapping[v] = colors[i];
      });
      return mapping;
    }
  }, {
    key: "reversePolygonCoords",
    value: function reversePolygonCoords(coords) {
      var self = this;
      var newP = [];
      var newPP = [];
      var simplifyTolerance = 0.001;
      var simplifyHighQuality = false; //can reduce the quality of polylines for better performance on rendering

      if (self.props.simplifyPolyLines) {
        coords.forEach(function (coord) {
          newPP.push({
            x: coord[1],
            y: coord[0]
          });
        }); //console.log('Original Number of Coordinates: ' + newPP.length);

        if (self.props.simplifyTolerance) {
          simplifyTolerance = self.props.simplifyTolerance;
        }

        if (self.props.simplifyHighQuality) {
          simplifyHighQuality = self.props.simplifyHighQuality;
        } //produces less coordinates than original, see docs at http://mourner.github.io/simplify-js/


        var tmp = (0, _simplifyJs.default)(newPP, simplifyTolerance, simplifyHighQuality);
        tmp.forEach(function (coord) {
          newP.push([coord.x, coord.y]);
        }); //console.log('Reduced Number of Coordinates: ' + newP.length);
      } else {
        coords.forEach(function (coord) {
          newP.push([coord[1], coord[0]]);
        });
      }

      return newP;
    }
  }, {
    key: "reverseMultiPolygonCoords",
    value: function reverseMultiPolygonCoords(coords) {
      var _this = this;

      var newP = [];
      coords.forEach(function (coord) {
        newP.push(_this.reversePolygonCoords(coord));
      });
      return newP;
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;

      if (true) {
        var markersDIV,
            geoJSONDIV,
            polygonsDIV,
            multipolygonsDIV,
            colorMap = {},
            weights = [],
            hints = [];

        var _require = __webpack_require__(2401),
            _Map = _require.Map,
            Marker = _require.Marker,
            Popup = _require.Popup,
            TileLayer = _require.TileLayer,
            GeoJSON = _require.GeoJSON,
            Polygon = _require.Polygon;

        if (self.props.hints) {
          hints = self.props.hints;
        }

        if (self.props.weights) {
          weights = self.props.weights;
          colorMap = self.colorMapping(weights);
        }

        if (self.props.markers && self.props.markers.length) {
          markersDIV = self.props.markers.map(function (marker, index) {
            return _react.default.createElement(Marker, {
              key: index,
              position: [marker.position.lat, marker.position.lng]
            }, _react.default.createElement(Popup, null, hints && hints[index] ? _react.default.createElement("div", {
              dangerouslySetInnerHTML: {
                __html: hints[index]
              }
            }) : _react.default.createElement("span", null, marker.position.lat, ",", ' ', marker.position.lng)));
          });
        }

        if (self.props.geometry && self.props.geometry.length) {
          var colors = ['#0c0d17'];

          if (self.props.multiColor) {
            colors = ['#0c0d17', '#0bc4a7', '#1a48eb', '#ecdc0b', '#ed1ec6', '#d9990b', '#1a75ff', '#e3104f', '#3f83a3'];
          }

          var style,
              features = [],
              polygons = [],
              multipolygons = [];
          self.props.geometry.forEach(function (geo, index) {
            style = self.props.styles;

            if (!style) {
              style = {
                fill: true,
                fillOpacity: 0.5,
                opacity: 1,
                weight: 1.5,
                fillColor: weights[index] ? colorMap[weights[index]] : colors[index % colors.length],
                color: colors[index % colors.length]
              };
            } //separate polygons from geojson


            if (geo.type === 'Polygon') {
              polygons.push({
                style: style,
                coords: geo.coordinates[0],
                weight: weights.length ? weights[index] : 0,
                hint: hints.length ? hints[index] : 0
              });
            } else {
              if (geo.type === 'MultiPolygon') {
                multipolygons.push({
                  style: style,
                  coords: geo.coordinates[0],
                  weight: weights.length ? weights[index] : 0,
                  hint: hints.length ? hints[index] : 0
                });
              } else {
                features.push({
                  type: 'Feature',
                  id: index,
                  style: style,
                  properties: {
                    name: index
                  },
                  geometry: geo
                });
              }
            }
          });
          polygonsDIV = polygons.map(function (polygon, index) {
            return _react.default.createElement(Polygon, {
              color: polygon.style.color,
              fill: polygon.style.fill,
              fillOpacity: polygon.style.fillOpacity,
              weight: polygon.style.weight,
              fillColor: polygon.style.fillColor,
              key: index,
              positions: self.reversePolygonCoords(polygon.coords)
            }, polygon.hint ? _react.default.createElement(Popup, null, _react.default.createElement("span", {
              dangerouslySetInnerHTML: {
                __html: polygon.hint
              }
            })) : '');
          });
          multipolygonsDIV = multipolygons.map(function (mpolygon, index) {
            return _react.default.createElement(Polygon, {
              color: mpolygon.style.color,
              fill: mpolygon.style.fill,
              fillOpacity: mpolygon.style.fillOpacity,
              weight: mpolygon.style.weight,
              fillColor: mpolygon.style.fillColor,
              key: index,
              positions: self.reverseMultiPolygonCoords(mpolygon.coords)
            }, mpolygon.hint ? _react.default.createElement(Popup, null, _react.default.createElement("span", {
              dangerouslySetInnerHTML: {
                __html: mpolygon.hint
              }
            })) : '');
          });

          if (features.length) {
            var geojson = {
              type: 'FeatureCollection',
              features: features
            }; //console.log(JSON.stringify(geojson));

            geoJSONDIV = _react.default.createElement(GeoJSON, {
              data: geojson,
              style: self.styleGeoJSON
            });
          }
        }

        var minHeight = 210;
        var minWidth = 200;

        if (self.props.mapWidth) {
          minWidth = self.props.mapWidth;
        }

        if (self.props.mapHeight) {
          minHeight = self.props.mapHeight;
        }

        return _react.default.createElement(_Map, {
          ref: "map",
          center: [self.props.center.lat, self.props.center.lng],
          zoom: self.props.zoomLevel,
          style: {
            minHeight: minHeight,
            minWidth: minWidth
          }
        }, _react.default.createElement(TileLayer, {
          style: {
            position: 'relative'
          },
          url: "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
          attribution: "\xA9 <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors"
        }), markersDIV, polygonsDIV, multipolygonsDIV, geoJSONDIV);
      } else {}
    }
  }]);

  return LeafletMapView;
}(_react.default.Component);

var _default = LeafletMapView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 498:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _wicket = _interopRequireDefault(__webpack_require__(845));

var _LeafletMapView = _interopRequireDefault(__webpack_require__(492));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
display a list of geo coordinates (POINT or Polygons) on Map
*/
var BasicAggregateMapView = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicAggregateMapView, _React$Component);

  function BasicAggregateMapView() {
    _classCallCheck(this, BasicAggregateMapView);

    return _possibleConstructorReturn(this, (BasicAggregateMapView.__proto__ || Object.getPrototypeOf(BasicAggregateMapView)).apply(this, arguments));
  }

  _createClass(BasicAggregateMapView, [{
    key: "getFocusPoint",
    value: function getFocusPoint(val, components) {
      var focusPoint = {
        lat: 52.379189,
        lng: 4.899431
      };

      if (val.indexOf('MULTIPOLYGON') !== -1 || val.indexOf('MultiPolygon') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0][0][0].y),
          lng: parseFloat(components[0][0][0].x)
        };
      } else if (val.indexOf('POLYGON') !== -1 || val.indexOf('Polygon') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0][0].y),
          lng: parseFloat(components[0][0].x)
        };

        if (!focusPoint.lat || isNaN(focusPoint.lat) || !focusPoint.lng || isNaN(focusPoint.lng)) {
          focusPoint = {
            lat: parseFloat(components[0][1].y),
            lng: parseFloat(components[0][1].x)
          };
        }
      } else if (val.indexOf('MULTILINESTRING') !== -1 || val.indexOf('MultiLineString') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0][0].y),
          lng: parseFloat(components[0][0].x)
        };
      } else if (val.indexOf('LINESTRING') !== -1 || val.indexOf('LineString') !== -1) {
        focusPoint = {
          lat: parseFloat(components[0].y),
          lng: parseFloat(components[0].x)
        };
      }

      return focusPoint;
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var self = this;
      var val,
          outputDIV,
          coordinates,
          long,
          lat,
          data,
          coordinatesArr = [],
          weightArr = [],
          hintArr = [],
          shapesArr = [],
          focusPoint;
      var zoomLevel = 9;
      var simplifyPolyLines, simplifyTolerance, simplifyHighQuality;

      if (this.props.config && this.props.config.zoomLevel) {
        zoomLevel = this.props.config.zoomLevel;
      }

      if (this.props.zoomLevel) {
        zoomLevel = this.props.zoomLevel;
      }

      this.props.spec.instances.forEach(function (node, index) {
        if (!node) {
          return undefined; // stop processing this iteration
        }

        if (node.weight) {
          weightArr.push(node.weight);
        }

        if (node.hint) {
          hintArr.push(node.hint);
        }

        if (node.value.indexOf('POLYGON') !== -1 || node.value.indexOf('Polygon') !== -1 || node.value.indexOf('MULTIPOLYGON') !== -1 || node.value.indexOf('MultiPolygon') !== -1 || node.value.indexOf('LineString') !== -1 || node.value.indexOf('MultiLineString') !== -1) {
          var wkt = new _wicket.default.Wkt();
          wkt.read(node.value);

          if (wkt.components && wkt.components.length && wkt.components[0].length) {
            zoomLevel = 8;

            if (_this.props.zoomLevel) {
              zoomLevel = _this.props.zoomLevel;
            }

            try {
              if (!focusPoint) {
                focusPoint = self.getFocusPoint(node.value, wkt.components);
              }

              shapesArr.push(wkt.toJson());
            } catch (err) {
              console.log(err.message);
            }
          }
        } else {
          //default is a POINT
          if (node.value.indexOf('POINT') === -1) {
            //WKN point
            coordinates = node.value.split(' ');
            coordinates = [coordinates[1], coordinates[0]];
          } else {
            //non-WKN point
            val = node.value.replace('POINT(', '').replace(')', '');
            coordinates = val.split(' ');
          }

          try {
            long = parseFloat(coordinates[0]);
            lat = parseFloat(coordinates[1]);

            if (self.props.config && self.props.config.swapLongLat || self.props.swapLongLat) {
              long = parseFloat(coordinates[1]);
              lat = parseFloat(coordinates[0]);
            }

            if (isNaN(long) || isNaN(lat)) {//error
            } else {
              coordinatesArr.push({
                position: {
                  lat: lat,
                  lng: long
                },
                key: node.value
              });
            }
          } catch (err) {
            console.log(err.message);
          }
        }
      });
      var center;

      if (coordinatesArr.length) {
        center = {
          lat: coordinatesArr[0].position.lat,
          lng: coordinatesArr[0].position.lng
        };
      } else {
        //for polygons
        center = focusPoint;
        zoomLevel = 7;

        if (this.props.config && this.props.config.zoomLevel) {
          zoomLevel = this.props.config.zoomLevel;
        }

        if (this.props.zoomLevel) {
          zoomLevel = this.props.zoomLevel;
        }

        if (this.props.simplifyPolyLines) {
          simplifyPolyLines = this.props.simplifyPolyLines;
        }

        if (this.props.simplifyTolerance) {
          simplifyTolerance = this.props.simplifyTolerance;
        }

        if (this.props.simplifyHighQuality) {
          simplifyHighQuality = this.props.simplifyHighQuality;
        }
      }

      var mapHeight,
          mapWidth,
          multiColor = 0;

      if (this.props.config) {
        if (this.props.mapHeight) {
          mapHeight = this.props.mapHeight;
        }

        if (this.props.config.mapHeight) {
          mapHeight = this.props.config.mapHeight;
        }

        if (this.props.mapWidth) {
          mapWidth = this.props.mapWidth;
        }

        if (this.props.config.mapWidth) {
          mapWidth = this.props.config.mapWidth;
        }

        if (this.props.multiColor) {
          multiColor = this.props.multiColor;
        }

        if (this.props.config.multiColor) {
          multiColor = this.props.config.multiColor;
        }

        if (this.props.config.simplifyPolyLines) {
          simplifyPolyLines = this.props.config.simplifyPolyLines;
        }

        if (this.props.config.simplifyTolerance) {
          simplifyTolerance = this.props.config.simplifyTolerance;
        }

        if (this.props.config.simplifyHighQuality) {
          simplifyHighQuality = this.props.config.simplifyHighQuality;
        }
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "basicAggregateMapView"
      }, _react.default.createElement(_LeafletMapView.default, {
        key: "bamv",
        multiColor: multiColor,
        markers: coordinatesArr,
        geometry: shapesArr,
        hints: hintArr,
        weights: weightArr,
        zoomLevel: zoomLevel,
        center: center,
        mapWidth: mapWidth,
        mapHeight: mapHeight,
        simplifyPolyLines: simplifyPolyLines,
        simplifyHighQuality: simplifyHighQuality,
        simplifyTolerance: simplifyTolerance
      }));
    }
  }]);

  return BasicAggregateMapView;
}(_react.default.Component);

BasicAggregateMapView.propTypes = {
  /**
  Height of the Map
  */
  mapHeight: _propTypes.default.number,

  /**
  Width of the Map
  */
  mapWidth: _propTypes.default.number,

  /**
  If set, will use multiple colors when displaying polygons
  */
  multiColor: _propTypes.default.bool,

  /**
  Swap longitude and latitudes: default is POINT(long lat)
  */
  swapLongLat: _propTypes.default.bool,

  /**
  Default level of zoom on the map
  */
  zoomLevel: _propTypes.default.number,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicAggregateMapView;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 520:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServerConfigRepository = void 0;

var _GenericRepository = _interopRequireDefault(__webpack_require__(893));

var _ServerConfigQueryBuilder = __webpack_require__(1706);

var _UrlParser = __webpack_require__(1707);

var _DbContext = __webpack_require__(1708);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ServerConfigRepository = /*#__PURE__*/function () {
  function ServerConfigRepository(dbClient) {
    _classCallCheck(this, ServerConfigRepository);

    //classesDataMapper
    this.genericRepository = new _GenericRepository.default(dbClient // new ClassDataMapper()
    );
    this.serverConfigQueryBuilder = new _ServerConfigQueryBuilder.ServerConfigQueryBuilder();
    this.urlParser = new _UrlParser.UrlParser();
  }

  _createClass(ServerConfigRepository, [{
    key: "getSparqlEndpointAndGraphByDatasetId",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(datasetId) {
        var configRes, config, sparqlEndpoint, graph;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.genericRepository.fetchByQueryObject(this.serverConfigQueryBuilder.getConfigByDatasetId(datasetId));

              case 2:
                configRes = _context.sent;
                config = configRes[0];
                sparqlEndpoint = "".concat(config.protocol, "://").concat(config.host).concat(config.port != '' ? ":".concat(config.port) : '').concat(config.path);
                graph = config.graph;
                return _context.abrupt("return", new _DbContext.DbContext(datasetId, sparqlEndpoint, graph));

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getSparqlEndpointAndGraphByDatasetId(_x) {
        return _ref.apply(this, arguments);
      }

      return getSparqlEndpointAndGraphByDatasetId;
    }()
  }, {
    key: "getDatasetIdBySparqlEndpointAndGraph",
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(sparqlEndpoint, graph) {
        var _this$getHostAndPathB, host, sparqlPath, configRes, config;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this$getHostAndPathB = this.getHostAndPathBySparqlEndpoint(sparqlEndpoint), host = _this$getHostAndPathB.host, sparqlPath = _this$getHostAndPathB.sparqlPath;
                _context2.next = 3;
                return this.genericRepository.fetchByQueryObject(this.serverConfigQueryBuilder.getConfigBySparqlEndpointHostAndPathAndGraph({
                  host: host,
                  sparqlPath: sparqlPath,
                  graph: graph
                }));

              case 3:
                configRes = _context2.sent;
                config = configRes[0];
                return _context2.abrupt("return", config ? config.datasetId : undefined);

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getDatasetIdBySparqlEndpointAndGraph(_x2, _x3) {
        return _ref2.apply(this, arguments);
      }

      return getDatasetIdBySparqlEndpointAndGraph;
    }()
  }, {
    key: "getHostAndPathBySparqlEndpoint",
    value: function getHostAndPathBySparqlEndpoint(sparqlEndpoint) {
      var host = this.urlParser.getHost(sparqlEndpoint);
      var sparqlPath = this.urlParser.getPath(sparqlEndpoint);
      return {
        host: host,
        sparqlPath: sparqlPath
      };
    }
  }]);

  return ServerConfigRepository;
}();

exports.ServerConfigRepository = ServerConfigRepository;

/***/ }),

/***/ 521:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _actorInitSparql = __webpack_require__(522);

var _fetchSparqlEndpoint = __webpack_require__(2067);

var _busQueryOperation = __webpack_require__(21);

var _rdfDataFactory = __webpack_require__(35);

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var factory = new _rdfDataFactory.DataFactory();

var DbClient = /*#__PURE__*/function () {
  //db is SPARQL Endpoint in this case
  function DbClient(dbName, graph, options) {
    _classCallCheck(this, DbClient);

    this.dbName = dbName;
    this.graph = graph || 'default';
    this.options = options;
    this.sparqlQueryingEngine = (0, _actorInitSparql.newEngine)();
    this.updateQueryingEngine = new _fetchSparqlEndpoint.SparqlEndpointFetcher();
  }

  _createClass(DbClient, [{
    key: "executeQuery",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(query) {
        var bindings, comunicaParams, result;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                comunicaParams = Object.assign({
                  sources: [{
                    type: 'sparql',
                    value: this.dbName
                  }]
                }, this.graph && this.graph !== 'default' ? {
                  initialBindings: (0, _busQueryOperation.Bindings)({
                    '?graph': factory.namedNode(this.graph)
                  })
                } : {});
                _context.next = 4;
                return this.sparqlQueryingEngine.query(query, comunicaParams);

              case 4:
                result = _context.sent;
                _context.next = 7;
                return result.bindings();

              case 7:
                bindings = _context.sent;
                _context.next = 14;
                break;

              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](0);
                console.log('[!] DbClient.executeQuery error:', _context.t0);
                bindings = undefined;

              case 14:
                return _context.abrupt("return", bindings);

              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 10]]);
      }));

      function executeQuery(_x) {
        return _ref.apply(this, arguments);
      }

      return executeQuery;
    }() // this is needed as comunica doesn't support update yet

  }, {
    key: "updateQuery",
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(query) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.updateQueryingEngine.fetchUpdate(this.dbName, query));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function updateQuery(_x2) {
        return _ref2.apply(this, arguments);
      }

      return updateQuery;
    }()
  }, {
    key: "askQuery",
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(query) {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", this.updateQueryingEngine.fetchAsk(this.dbName, query));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function askQuery(_x3) {
        return _ref3.apply(this, arguments);
      }

      return askQuery;
    }()
  }]);

  return DbClient;
}();

exports.default = DbClient;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 551:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _general = __webpack_require__(59);

var _ResourceStore = _interopRequireDefault(__webpack_require__(1060));

var _fluxibleAddonsReact = __webpack_require__(79);

var _Resource = _interopRequireDefault(__webpack_require__(2073));

var _UserResource = _interopRequireDefault(__webpack_require__(2386));

var _PersonResource = _interopRequireDefault(__webpack_require__(2387));

var _OrgResource = _interopRequireDefault(__webpack_require__(2388));

var _CSVMappingResource = _interopRequireDefault(__webpack_require__(2389));

var _createProperty = _interopRequireDefault(__webpack_require__(2392));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _PrefixBasedInput = _interopRequireDefault(__webpack_require__(343));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ResourceReactor = /*#__PURE__*/function (_React$Component) {
  _inherits(ResourceReactor, _React$Component);

  function ResourceReactor(props) {
    var _this;

    _classCallCheck(this, ResourceReactor);

    _this = _possibleConstructorReturn(this, (ResourceReactor.__proto__ || Object.getPrototypeOf(ResourceReactor)).call(this, props));
    _this.state = {
      newPropURI: '',
      newObjetValue: ''
    };
    return _this;
  } //removes properties from an object


  _createClass(ResourceReactor, [{
    key: "configMinus",
    value: function configMinus(config, props) {
      var o = {};

      for (var p in config) {
        if (props.indexOf(p) === -1) {
          o[p] = config[p];
        }
      }

      return o;
    }
  }, {
    key: "handleNewProperty",
    value: function handleNewProperty(e) {
      var self = this;

      if (this.state.newPropURI && this.state.newObjetValue) {
        this.context.executeAction(_createProperty.default, {
          dataset: self.props.ResourceStore.datasetURI,
          resourceURI: self.props.ResourceStore.resourceURI,
          propertyURI: this.state.newPropURI,
          objectValue: this.state.newObjetValue
        });
      }
    }
  }, {
    key: "handleNewPropertyEdit",
    value: function handleNewPropertyEdit(v) {
      this.setState({
        newPropURI: v.trim()
      });
    }
  }, {
    key: "handleNewObjectValueEdit",
    value: function handleNewObjectValueEdit(v) {
      this.setState({
        newObjetValue: v.trim()
      });
    }
  }, {
    key: "render",
    value: function render() {
      // we use this to always force component remount
      var resourceComponentKey;

      if (this.props.RouteStore && this.props.RouteStore._currentNavigate && this.props.RouteStore._currentNavigate.url) {
        resourceComponentKey = this.props.RouteStore._currentNavigate.url;
        console.log(resourceComponentKey);
      }

      var datasetURI = this.props.ResourceStore.datasetURI;
      var properties = this.props.ResourceStore.properties;
      var resourceURI = this.props.ResourceStore.resourceURI;
      var resourceType = this.props.ResourceStore.resourceType;
      var title = this.props.ResourceStore.title;
      var currentCategory = this.props.ResourceStore.currentCategory;
      var propertyPath = this.props.ResourceStore.propertyPath;
      var config = this.props.ResourceStore.config;
      var error = this.props.ResourceStore.error;
      var resourceReactor;

      if (config && config.resourceReactor) {
        switch (config.resourceReactor[0]) {
          case 'Resource':
            resourceReactor = _react.default.createElement(_Resource.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              properties: properties,
              resource: resourceURI,
              resourceType: resourceType,
              title: title,
              currentCategory: currentCategory,
              propertyPath: propertyPath,
              config: this.configMinus(config, ['resourceReactor']),
              error: error,
              key: resourceComponentKey
            });
            break;

          case 'UserResource':
            resourceReactor = _react.default.createElement(_UserResource.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              properties: properties,
              resource: resourceURI,
              resourceType: resourceType,
              title: title,
              currentCategory: currentCategory,
              propertyPath: propertyPath,
              config: this.configMinus(config, ['resourceReactor']),
              error: error
            });
            break;

          case 'PersonResource':
            resourceReactor = _react.default.createElement(_PersonResource.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              properties: properties,
              resource: resourceURI,
              resourceType: resourceType,
              title: title,
              currentCategory: currentCategory,
              propertyPath: propertyPath,
              config: this.configMinus(config, ['resourceReactor']),
              error: error
            });
            break;

          case 'OrgResource':
            resourceReactor = _react.default.createElement(_OrgResource.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              properties: properties,
              resource: resourceURI,
              resourceType: resourceType,
              title: title,
              currentCategory: currentCategory,
              propertyPath: propertyPath,
              config: this.configMinus(config, ['resourceReactor']),
              error: error
            });
            break;

          case 'CSVMappingResource':
            resourceReactor = _react.default.createElement(_CSVMappingResource.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              properties: properties,
              resource: resourceURI,
              resourceType: resourceType,
              title: title,
              currentCategory: currentCategory,
              propertyPath: propertyPath,
              config: this.configMinus(config, ['resourceReactor']),
              error: error
            });
            break;

          default:
            resourceReactor = _react.default.createElement(_Resource.default, {
              enableAuthentication: _general.enableAuthentication,
              datasetURI: datasetURI,
              properties: properties,
              resource: resourceURI,
              resourceType: resourceType,
              title: title,
              currentCategory: currentCategory,
              propertyPath: propertyPath,
              config: this.configMinus(config, ['resourceReactor']),
              error: error
            });
        }
      } else {
        resourceReactor = _react.default.createElement(_Resource.default, {
          enableAuthentication: _general.enableAuthentication,
          datasetURI: datasetURI,
          properties: properties,
          resource: resourceURI,
          resourceType: resourceType,
          title: title,
          currentCategory: currentCategory,
          propertyPath: propertyPath,
          config: this.configMinus(config, ['resourceReactor']),
          error: error
        });
      }

      var newPropDIV = '';

      if (!error && config && config.allowPropertyNew && !config.readOnly && (config.userIsCreator || config.userIsEditor)) {
        newPropDIV = _react.default.createElement("div", {
          className: "ui fluid container ldr-padding-more"
        }, _react.default.createElement("div", {
          className: "ui grid"
        }, _react.default.createElement("div", {
          className: "ui column"
        }, _react.default.createElement("div", {
          className: "ui grey message form"
        }, _react.default.createElement(_PrefixBasedInput.default, {
          includeOnly: ['ldrProperties', 'properties'],
          noFocus: true,
          spec: {
            value: ''
          },
          onDataEdit: this.handleNewPropertyEdit.bind(this),
          placeholder: "Enter the URI of the property. You can use common prefixes e.g. foaf:name"
        }), _react.default.createElement(_PrefixBasedInput.default, {
          noFocus: true,
          spec: {
            value: ''
          },
          onDataEdit: this.handleNewObjectValueEdit.bind(this),
          placeholder: "Value of the property",
          onEnterPress: this.handleNewProperty.bind(this),
          allowActionByKey: true
        }), _react.default.createElement("button", {
          className: "fluid ui primary icon button",
          onClick: this.handleNewProperty.bind(this),
          style: {
            maxWidth: 300,
            margin: 'auto'
          }
        }, _react.default.createElement("i", {
          className: "icon square add"
        }), "Add Property/Value")))));
      }

      var itemTypes = '';

      if (Array.isArray(resourceType)) {
        itemTypes = resourceType.join(' ');
      } else {
        itemTypes = resourceType;
      }

      return _react.default.createElement("div", {
        ref: "resourceReactor",
        itemScope: true,
        itemType: itemTypes,
        itemID: resourceURI
      }, resourceReactor, newPropDIV);
    }
  }]);

  return ResourceReactor;
}(_react.default.Component);

ResourceReactor.contextTypes = {
  executeAction: _propTypes.default.func.isRequired,
  getUser: _propTypes.default.func
};
ResourceReactor = (0, _fluxibleAddonsReact.connectToStores)(ResourceReactor, [_ResourceStore.default], function (context, props) {
  return {
    ResourceStore: context.getStore(_ResourceStore.default).getState(),
    RouteStore: context.getStore('RouteStore')
  };
});
var _default = ResourceReactor;
exports.default = _default;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 552:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _BasicIndividualInput = _interopRequireDefault(__webpack_require__(553));

var _BasicTextareaInput = _interopRequireDefault(__webpack_require__(2085));

var _BasicIndividualDetailEdit = _interopRequireDefault(__webpack_require__(2086));

var _BasicOptionInput = _interopRequireDefault(__webpack_require__(2087));

var _DBpediaInput = _interopRequireDefault(__webpack_require__(2088));

var _PasswordInput = _interopRequireDefault(__webpack_require__(2090));

var _LanguageInput = _interopRequireDefault(__webpack_require__(2157));

var _BasicCalendarInput = _interopRequireDefault(__webpack_require__(2158));

var _PrefixBasedInput = _interopRequireDefault(__webpack_require__(343));

var _ToggleEdit = _interopRequireDefault(__webpack_require__(2198));

var _FileInput = _interopRequireDefault(__webpack_require__(646));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ObjectIEditor = /*#__PURE__*/function (_React$Component) {
  _inherits(ObjectIEditor, _React$Component);

  function ObjectIEditor() {
    _classCallCheck(this, ObjectIEditor);

    return _possibleConstructorReturn(this, (ObjectIEditor.__proto__ || Object.getPrototypeOf(ObjectIEditor)).apply(this, arguments));
  }

  _createClass(ObjectIEditor, [{
    key: "handleDataEdit",
    value: function handleDataEdit(value) {
      this.props.onDataEdit(value);
    }
  }, {
    key: "handleDetailDataEdit",
    value: function handleDetailDataEdit(detailData) {
      this.props.onDetailDataEdit(detailData);
    }
  }, {
    key: "handleEnterPress",
    value: function handleEnterPress() {
      this.props.onEnterPress();
    }
  }, {
    key: "render",
    value: function render() {
      var editor,
          editorConfig = '',
          extendedEditor,
          extendedEditorConfig = '';

      if (this.props.config) {
        if (this.props.config.extendedOEditor) {
          extendedEditorConfig = this.props.config.extendedOEditor[0];
        }

        if (this.props.config.objectIEditor) {
          editorConfig = this.props.config.objectIEditor[0];
        }
      }

      if (this.props.spec.extendedViewData) {
        //go to extended edit
        switch (extendedEditorConfig) {
          case 'BasicIndividualDetailEdit':
            extendedEditor = _react.default.createElement(_BasicIndividualDetailEdit.default, {
              spec: this.props.spec,
              config: this.props.config,
              onDataEdit: this.handleDataEdit.bind(this),
              onDetailDataEdit: this.handleDetailDataEdit.bind(this),
              onEnterPress: this.handleEnterPress.bind(this)
            });
            break;

          default:
            extendedEditor = _react.default.createElement(_BasicIndividualDetailEdit.default, {
              spec: this.props.spec,
              config: this.props.config,
              onDataEdit: this.handleDataEdit.bind(this),
              onDetailDataEdit: this.handleDetailDataEdit.bind(this),
              onEnterPress: this.handleEnterPress.bind(this)
            });
        }
      } //normal edit


      switch (editorConfig) {
        case 'BasicIndividualInput':
          editor = _react.default.createElement(_BasicIndividualInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this),
            allowActionByKey: true,
            onEnterPress: this.handleEnterPress.bind(this)
          });
          break;

        case 'BasicTextareaInput':
          editor = _react.default.createElement(_BasicTextareaInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this)
          });
          break;

        case 'ToggleEdit':
          editor = _react.default.createElement(_ToggleEdit.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this)
          });
          break;

        case 'PasswordInput':
          editor = _react.default.createElement(_PasswordInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this),
            allowActionByKey: true,
            onEnterPress: this.handleEnterPress.bind(this)
          });
          break;

        case 'DBpediaInput':
          editor = _react.default.createElement(_DBpediaInput.default, {
            asWikipedia: "1",
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this),
            allowActionByKey: true,
            onEnterPress: this.handleEnterPress.bind(this)
          });
          break;

        case 'LanguageInput':
          editor = _react.default.createElement(_LanguageInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this)
          });
          break;

        case 'BasicCalendarInput':
          editor = _react.default.createElement(_BasicCalendarInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this)
          });
          break;

        case 'BasicOptionInput':
          editor = _react.default.createElement(_BasicOptionInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this),
            allowActionByKey: true,
            onEnterPress: this.handleEnterPress.bind(this)
          });
          break;

        case 'PrefixBasedInput':
          editor = _react.default.createElement(_PrefixBasedInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this),
            allowActionByKey: true,
            onEnterPress: this.handleEnterPress.bind(this)
          });
          break;

        case 'FileInput':
          editor = _react.default.createElement(_FileInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this)
          });
          break;

        default:
          editor = _react.default.createElement(_BasicIndividualInput.default, {
            spec: this.props.spec,
            config: this.props.config,
            onDataEdit: this.handleDataEdit.bind(this),
            allowActionByKey: true,
            onEnterPress: this.handleEnterPress.bind(this)
          });
      } //check if it has a blank node value config


      var hideObject = 0;

      if (this.props.config && this.props.config.hasBlankNode && extendedEditor) {
        hideObject = 1;
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "objectIEditor"
      }, hideObject ? '' : _react.default.createElement("div", {
        className: "ui attached message"
      }, " ", editor, " "), extendedEditor);
    }
  }]);

  return ObjectIEditor;
}(_react.default.Component);

var _default = ObjectIEditor;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 553:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Default component to edit object values
*/
var BasicIndividualInput = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicIndividualInput, _React$Component);

  function BasicIndividualInput(props) {
    var _this;

    _classCallCheck(this, BasicIndividualInput);

    _this = _possibleConstructorReturn(this, (BasicIndividualInput.__proto__ || Object.getPrototypeOf(BasicIndividualInput)).call(this, props));
    var v = _this.props.spec.value;

    if (_this.props.spec.isDefault) {
      v = _this.createDefaultValue(_this.props.spec.valueType, _this.props.spec.dataType);
    }

    _this.state = {
      value: v
    };
    return _this;
  }

  _createClass(BasicIndividualInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.noFocus) {
        _reactDom.default.findDOMNode(this.refs.basicIndividualInput).focus();
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      //to initialize value in Property state
      this.props.onDataEdit(this.state.value);
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(evt) {
      if (this.props.allowActionByKey) {
        switch (evt.keyCode) {
          //case 9: // Tab
          case 13:
            // Enter
            this.props.onEnterPress();
            break;
        }
      }
    }
  }, {
    key: "getRandomNumber",
    value: function getRandomNumber() {
      return Math.round(+new Date() / 1000);
    }
  }, {
    key: "createDefaultValue",
    value: function createDefaultValue(valueType, dataType) {
      var dynamicDomain = 'http://example.com';

      if (this.props.config && this.props.config.dynamicResourceDomain) {
        dynamicDomain = this.props.config.dynamicResourceDomain[0];
      }

      if (this.props.config && this.props.config.defaultValue) {
        return this.props.config.defaultValue[0];
      } else {
        if (valueType === 'uri') {
          return dynamicDomain + '/' + this.getRandomNumber();
        } else {
          return 'exampleValue' + this.getRandomNumber();
        }
      }
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      this.props.onDataEdit(event.target.value.trim());
      this.setState({
        value: event.target.value
      });
    }
  }, {
    key: "render",
    value: function render() {
      var placeholder = ''; //placeholder can come from config or direct property

      if (this.props.config && this.props.config.placeholder) {
        placeholder = this.props.config.placeholder[0];
      } else {
        if (this.props.placeholder) {
          placeholder = this.props.placeholder;
        }
      }

      return _react.default.createElement("div", {
        className: "ui"
      }, _react.default.createElement("input", {
        ref: "basicIndividualInput",
        type: "text",
        value: this.state.value,
        placeholder: placeholder,
        onChange: this.handleChange.bind(this),
        onKeyDown: this.handleKeyDown.bind(this)
      }));
    }
  }]);

  return BasicIndividualInput;
}(_react.default.Component);

BasicIndividualInput.propTypes = {
  /**
  will disable auto-focus on the input box
  */
  noFocus: _propTypes.default.bool,

  /**
  will allow action by pressing enter or other keys
  */
  allowActionByKey: _propTypes.default.bool,

  /**
  the function which will be called when the content of input box changes
  */
  onDataEdit: _propTypes.default.func,

  /**
  the function to handle user enter key press
  */
  onEnterPress: _propTypes.default.func,

  /**
  placeholder for the inout box
  */
  placeholder: _propTypes.default.string,

  /**
  /**
  will be used as domain name when creating random URIs
  */
  dynamicResourceDomain: _propTypes.default.string,

  /**
  default value for the input box
  */
  defaultValue: _propTypes.default.string,

  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = BasicIndividualInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 583:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _odpReactorVisualframes = __webpack_require__(1114);

var _routeToResource = __webpack_require__(1117);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var defaultCollectionStyle = {
  collectionContainerWidth: {
    width: '150%' // set this width to 120, 130, 140% to increase padding between items

  }
};

var CollectionVisualFrame = /*#__PURE__*/function (_React$Component) {
  _inherits(CollectionVisualFrame, _React$Component);

  function CollectionVisualFrame() {
    _classCallCheck(this, CollectionVisualFrame);

    return _possibleConstructorReturn(this, (CollectionVisualFrame.__proto__ || Object.getPrototypeOf(CollectionVisualFrame)).apply(this, arguments));
  }

  _createClass(CollectionVisualFrame, [{
    key: "render",
    value: function render() {
      if (!this.props.patternInstance || !this.props.patternInstance.data) {
        return null;
      }

      var collection = this.props.patternInstance.data;
      console.log('Data:', collection);

      if (!collection || collection.length === 0) {
        return null;
      }

      var routeToCulturalProperty = function routeToCulturalProperty() {};

      var culturalProperty = collection[0].cProp;

      if (culturalProperty) {
        routeToCulturalProperty = (0, _routeToResource.routeToResource)(this.props.datasetId, culturalProperty);
      } // let propertyList = {};
      // if (!this.props.hideCulturalProperty) {
      //     propertyList['Cultural Property :'] = {
      //         uri: collection[0].cProp,
      //         onClick: () => {
      //             this.context.executeAction(navigateAction, {
      //                 url: `${PUBLIC_URL}/dataset/${encodeURIComponent(
      //                     this.props.dataset
      //                 )}/resource/${encodeURIComponent(
      //                     collection[0].cProp
      //                 )}`
      //             });
      //         }
      //     };
      // }
      // collection.forEach(c => {
      //     let label = c.meas.split('-').pop() + ':';
      //     label = label.charAt(0).toUpperCase() + label.slice(1);
      //     propertyList[label] = {
      //         label: `${c.value} ${c.unit}`
      //     };
      // });


      return _react.default.createElement("div", null, !this.props.isMosaicFrameView && _react.default.createElement("div", {
        className: "property-title"
      }, _react.default.createElement("div", {
        className: "ui horizontal list"
      }, _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("h3", {
        style: {
          color: '#4183c4',
          cursor: 'pointer'
        },
        onClick: function onClick() {
          routeToCulturalProperty();
        }
      }, collection[0].cPropLabel))), _react.default.createElement("div", {
        className: "ui dividing header"
      })), _react.default.createElement("div", {
        style: {
          display: 'flex',
          padding: 30,
          width: '100%',
          margin: 'auto'
        }
      }, _react.default.createElement("div", {
        style: {
          margin: 'auto'
        }
      }, _react.default.createElement(_odpReactorVisualframes.Depiction, {
        uri: culturalProperty,
        source: this.props.dbContext.sparqlEndpoint // style={defa}
        // style={this.props.styles.depiction}

      })), _react.default.createElement("div", {
        style: {
          margin: 'auto',
          marginLeft: 30
        }
      }, _react.default.createElement(_odpReactorVisualframes.Collection, {
        members: collection.map(function (member) {
          return {
            uri: member.meas,
            label: "".concat(member.meas.split('-').pop(), " : ").concat(member.value, " ").concat(member.unit),
            depiction: 'https://image.flaticon.com/icons/png/512/5/5095.png'
          };
        }),
        styles: defaultCollectionStyle
      }))));
    }
  }]);

  return CollectionVisualFrame;
}(_react.default.Component);

exports.default = CollectionVisualFrame;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 584:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _odpReactorVisualframes = __webpack_require__(1114);

var _routeToResource = __webpack_require__(1117);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

// const defaultPartWholeStyle = {
//     containerStyle: {
//         width: 700
//     },
//     littleItemStyle: {
//         width: 100
//     },
//     centerItemStyle: {
//         width: 500
//     }
// };
var PartOfVisualFrame = /*#__PURE__*/function (_React$Component) {
  _inherits(PartOfVisualFrame, _React$Component);

  function PartOfVisualFrame() {
    _classCallCheck(this, PartOfVisualFrame);

    return _possibleConstructorReturn(this, (PartOfVisualFrame.__proto__ || Object.getPrototypeOf(PartOfVisualFrame)).apply(this, arguments));
  }

  _createClass(PartOfVisualFrame, [{
    key: "render",
    value: function render() {
      var _this = this;

      if (!this.props.patternInstance || !this.props.patternInstance.data) {
        return null;
      }

      var data = this.props.patternInstance.data;

      if (data) {
        var whole = {
          uri: data[0].complexCProp,
          source: this.props.dbContext.sparqlEndpoint
        };
        var parts = data.map(function (part) {
          return {
            uri: part.cPropComponent,
            source: _this.props.dbContext.sparqlEndpoint
          };
        });
        parts = [].concat(_toConsumableArray(new Set(parts))); //clean duplicate values

        var routeToDatasetResource = function routeToDatasetResource(resourceUri) {
          (0, _routeToResource.routeToResource)(_this.props.dbContext.datasetId, resourceUri);
        }; // const getResource = resourceURI => {
        //     this.context.executeAction(navigateAction, {
        //         url: `${PUBLIC_URL}/dataset/${encodeURIComponent(
        //             this.props.dataset
        //         )}/resource/${encodeURIComponent(resourceURI)}`
        //     });
        // };
        // let propertyList = {};
        // let c = 1;
        // data.map(part => {
        //     propertyList[`Component ${c} :`] = {
        //         uri: part.cPropComponent,
        //         onClick: () => {
        //             getResource(part.cPropComponent);
        //         }
        //     };
        //     c++;
        // });


        return _react.default.createElement("div", null, _react.default.createElement("div", {
          style: {
            textAlign: 'center',
            margin: 'auto'
          }
        }, _react.default.createElement(_odpReactorVisualframes.PartWhole, {
          parts: parts,
          whole: whole,
          onResourceClick: routeToDatasetResource // styles={
          //     defaultPartWholeStyle
          // }

        })));
      }
    }
  }]);

  return PartOfVisualFrame;
}(_react.default.Component);

exports.default = PartOfVisualFrame;
module.exports = exports.default;

/***/ }),

/***/ 585:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(console) {

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TimeIndexedTypedLocationVisualFrame = /*#__PURE__*/function (_React$Component) {
  _inherits(TimeIndexedTypedLocationVisualFrame, _React$Component);

  function TimeIndexedTypedLocationVisualFrame() {
    _classCallCheck(this, TimeIndexedTypedLocationVisualFrame);

    return _possibleConstructorReturn(this, (TimeIndexedTypedLocationVisualFrame.__proto__ || Object.getPrototypeOf(TimeIndexedTypedLocationVisualFrame)).apply(this, arguments));
  }

  _createClass(TimeIndexedTypedLocationVisualFrame, [{
    key: "render",
    value: function render() {
      /* 
         We need to check if env is BROWSER as leaflet require window object to
         work and avoid app crashing in server rendering.
         TimeIndexedTypedLocation pattern imports leaflet
          _______________________________________________________________________
      */
      if (true) {
        if (!this.props.patternInstance || !this.props.patternInstance.data) {
          return null;
        }

        var _require = __webpack_require__(2225),
            TimeIndexedTypedLocation = _require.TimeIndexedTypedLocation;

        console.log('TimeIndexedTypedLocationVisualFrame props state', this.props, this.state);
        var titls = this.props.patternInstance.data;

        if (titls && titls.length > 0) {
          // const getResource = resourceURI => {
          //     this.context.executeAction(navigateAction, {
          //         url: `${PUBLIC_URL}/dataset/${encodeURIComponent(
          //             this.props.dataset
          //         )}/resource/${encodeURIComponent(resourceURI)}`
          //     });
          // };
          // const culturalPropertyURI = titls[0]
          //     ? titls[0].culturalProperty
          //     : '';
          // let propertyList = {};
          // if (!this.props.hideCulturalProperty) {
          //     propertyList['Cultural property :'] = {
          //         label: titls[0].cPropLabel,
          //         onClick: () => {
          //             getResource(culturalPropertyURI);
          //         }
          //     };
          // }
          // console.log('TITLS to put in table:', titls);
          // titls.map((titl, index) => {
          //     let number = titls.length > 1 ? index + 1 : '';
          //     if (titl.addressLabel && titl.addressLabel !== '') {
          //         propertyList[`Address ${number}:`] = {
          //             label: titl.addressLabel,
          //             index: number
          //         };
          //     }
          //     if (titl.locationType && titl.locationType !== '') {
          //         propertyList[`Location Type ${number}:`] = {
          //             label: titl.locationTypeLabel,
          //             onClick: () => {
          //                 getResource(titl.locationType);
          //             },
          //             index: number
          //         };
          //     }
          //     if (titl.long && titl.long !== '') {
          //         propertyList[`Longitude ${number}:`] = {
          //             label: titl.long,
          //             index: number
          //         };
          //     }
          //     if (titl.lat && titl.lat !== '') {
          //         propertyList[`Latitude ${number}:`] = {
          //             label: titl.lat,
          //             index: number
          //         };
          //     }
          //     if (titl.startTime && titl.startTime !== '')
          //         propertyList[`Start Time ${number}:`] = {
          //             label: titl.startTime,
          //             index: number
          //         };
          //     if (titl.endTime && titl.endTime !== '') {
          //         propertyList[`End Time ${number}:`] = {
          //             label: titl.endTime,
          //             index: number
          //         };
          //     }
          // });
          // console.log('Property List:', propertyList);
          try {
            titls.sort(function (a, b) {
              if (a.locationTypeLabel.includes('precedente')) {
                return -1;
              }

              if (a.locationTypeLabel.includes('attuale')) {
                return 1;
              }

              return 0;
            });
          } catch (e) {
            console.log('Error sorting values');
          }

          var childStyle = {
            flex: '1 0 45%'
          };
          return _react.default.createElement("div", {
            style: {
              display: 'flex',
              justifyContent: 'space-evenly',
              flexWrap: 'wrap',
              margin: 'auto'
            }
          }, _react.default.createElement("div", {
            style: childStyle
          }, _react.default.createElement(TimeIndexedTypedLocation, {
            timeIndexedTypedLocations: titls,
            onObjectClick: function onObjectClick() {// getResource(culturalPropertyURI);
            }
          })));
        } else {
          return null; // <div style={{ textAlign: 'center' }}>
          //     <CustomLoader></CustomLoader>
          // </div>
        }
      } else {}
    }
  }]);

  return TimeIndexedTypedLocationVisualFrame;
}(_react.default.Component);

exports.default = TimeIndexedTypedLocationVisualFrame;
module.exports = exports.default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(13)))

/***/ }),

/***/ 587:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reactTester = exports.ReactComponentTester = void 0;

var _enzyme = __webpack_require__(1121);

var _enzymeAdapterReact = _interopRequireDefault(__webpack_require__(2329));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact.default()
}); //enzyme - react 16 hooks support

var ReactComponentTester = /*#__PURE__*/function () {
  function ReactComponentTester() {
    _classCallCheck(this, ReactComponentTester);
  }

  _createClass(ReactComponentTester, [{
    key: "itRendersWithoutExploding",
    value: function itRendersWithoutExploding(component, name) {
      describe("<".concat(name, " />"), function () {
        it('renders without explode', function () {
          (0, _enzyme.shallow)(component);
        });
      });
    }
  }]);

  return ReactComponentTester;
}();

exports.ReactComponentTester = ReactComponentTester;
var reactTester = new ReactComponentTester();
exports.reactTester = reactTester;

/***/ }),

/***/ 59:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

__webpack_require__(1271).config();

var _default = {
  //full page title
  appFullTitle: ["ODP Reactor"],
  //short page title
  appShortTitle: ["ODP Reactor"],
  //Default Dataset under observation, if not set , will consider all existing graph names
  defaultDatasetURI: [""],
  //will prevent access if not logged in
  enableAuthentication: 0,
  //graph that stores users data, must be loaded beforehand
  authDatasetURI: ["http://virtuoso.localhost/users"],
  //will allow super users to confirm and activate regiastered users
  enableUserConfirmation: 0,
  //if enabled will allow a recaptcha box in the registration form
  //note: if it is enabled, you need to set the key parameteres for recaptcha in the  server.js file
  useGoogleRecaptcha: 0,
  //the domain name under which basic dynamic resources and user resources will be defined
  baseResourceDomain: ["http://virtuoso.localhost/"],
  //will enable email notifications
  enableEmailNotifications: 0,
  //will put all update actions in log folder
  enableLogs: 0,
  //if provided will track the users on your LD-R instance
  googleAnalyticsID: "",
  //if set, will use the configs stored in a triple store
  enableDynamicServerConfiguration: 1,
  enableDynamicReactorConfiguration: 1,
  enableDynamicFacetsConfiguration: 1,
  //if set, wil allow users to create new datasets
  //only works if enableDynamicReactorConfiguration is set to 1 and triple store allows update qureies
  enableAddingNewDatasets: 1,
  //allows users to annotate datasets using NLP APIs
  enableDatasetAnnotation: 1,
  //allows users to save and import a SPARQL query from/to the system: WYSIWYQ concept
  enableQuerySaveImport: 1,
  //graph that stores your configurations
  configDatasetURI: ["http://odpreactor.arco.istc.cnr.it/configuration" || false],
  //will enable/disable auto config
  enableAutomaticConfiguration: 0,
  //the path to the upload folder
  uploadFolder: ["./uploaded"],
  //will enable csv imports
  enableCSVImport: 1,
  //graph that stores your mapping configurations for imprting other formats such as CSV
  mappingsDatasetURI: ["http://ld-r.org/mappings"],
  //by default dataset will be rendered by DatasetReactor instead of FacetedBrowser
  enableFacetedBrowser: false
};
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 626:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleRouter = __webpack_require__(34);

var _general = __webpack_require__(59);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var Nav = /*#__PURE__*/function (_React$Component) {
  _inherits(Nav, _React$Component);

  function Nav() {
    _classCallCheck(this, Nav);

    return _possibleConstructorReturn(this, (Nav.__proto__ || Object.getPrototypeOf(Nav)).apply(this, arguments));
  }

  _createClass(Nav, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var currentComp = this.refs.defaultNavbar;
      $(currentComp).find('.ui.dropdown').dropdown();
    }
  }, {
    key: "showHelpModal",
    value: function showHelpModal() {
      /*global $*/
      $('.ui.modal').modal('show');
    }
  }, {
    key: "render",
    value: function render() {
      var user = this.context.getUser(); // console.log(user);

      var userMenu;

      var configMenu = _react.default.createElement("a", {
        href: "".concat(PUBLIC_URL, "/browse/") + encodeURIComponent(_general.configDatasetURI),
        className: "ui item link",
        title: "Configuration Manager"
      }, _react.default.createElement("i", {
        className: "ui black settings icon inverted"
      }));

      if (_general.enableAuthentication) {
        if (user) {
          userMenu = _react.default.createElement("div", {
            className: "ui right dropdown item"
          }, user.accountName, " ", _react.default.createElement("i", {
            className: "dropdown icon"
          }), _react.default.createElement("div", {
            className: "menu"
          }, _react.default.createElement(_fluxibleRouter.NavLink, {
            className: "item",
            routeName: "resource",
            href: "".concat(PUBLIC_URL, "/dataset/") + encodeURIComponent(user.datasetURI) + '/resource/' + encodeURIComponent(user.id)
          }, "Profile"), parseInt(user.isSuperUser) ? _react.default.createElement(_fluxibleRouter.NavLink, {
            className: "item",
            routeName: "users",
            href: "".concat(PUBLIC_URL, "/users")
          }, "Users List") : '', _react.default.createElement("a", {
            href: "".concat(PUBLIC_URL, "/logout"),
            className: "item"
          }, "Logout")));
        } else {
          userMenu = _react.default.createElement("div", {
            className: "ui right item"
          }, ' ', _react.default.createElement("a", {
            className: "ui mini circular teal button",
            href: "".concat(PUBLIC_URL, "/login")
          }, "Sign-in"), ' ', "\xA0", ' ', _react.default.createElement("a", {
            href: "".concat(PUBLIC_URL, "/register"),
            className: "ui mini circular yellow button"
          }, "Register"), ' ');
          configMenu = '';
        }
      }

      var navbarColor = 'blue';

      if (this.props.loading) {
        navbarColor = 'grey';
      }

      return _react.default.createElement("div", null, _react.default.createElement("div", {
        id: "navbar",
        className: "ui fluid container",
        ref: "defaultNavbar"
      }, _react.default.createElement("nav", {
        className: 'ui menu inverted grid' + navbarColor,
        style: {
          backgroundColor: 'rgba(0,0,0,.87)'
        }
      }, _react.default.createElement(_fluxibleRouter.NavLink, {
        routeName: "home",
        className: "brand item",
        href: "".concat(PUBLIC_URL, "/")
      }, this.props.loading ? _react.default.createElement("img", {
        src: "".concat(PUBLIC_URL, "/assets/img/loader.gif"),
        alt: "loading...",
        style: {
          height: 30,
          width: 30
        }
      }) : _react.default.createElement("img", {
        style: {
          height: 22,
          width: 22
        },
        className: "ui mini image",
        src: "".concat(PUBLIC_URL, "/assets/img/ld-reactor.gif"),
        alt: "ld-reactor"
      })), _react.default.createElement("a", {
        className: "item",
        href: "".concat(PUBLIC_URL, "/about")
      }, "About ", _general.appShortTitle, ' '), _react.default.createElement("a", {
        className: "item",
        href: "".concat(PUBLIC_URL, "/datasets")
      }, "Knowledge Graphs"), _react.default.createElement("div", {
        className: "right menu"
      }, _react.default.createElement("div", {
        className: "item link",
        onClick: this.showHelpModal
      }, _react.default.createElement("i", {
        className: "small help circle icon"
      })), _general.enableDynamicReactorConfiguration || _general.enableDynamicServerConfiguration || _general.enableDynamicfacetsConfiguration ? configMenu : '', _react.default.createElement("a", {
        href: "https://github.com/Christian-Nja/odp-reactor",
        className: "ui item link"
      }, _react.default.createElement("i", {
        className: "github circle icon"
      }), " Github"), userMenu))));
    }
  }]);

  return Nav;
}(_react.default.Component);

Nav.contextTypes = {
  getUser: _propTypes.default.func
};
var _default = Nav;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 635:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var HelpModal = /*#__PURE__*/function (_React$Component) {
  _inherits(HelpModal, _React$Component);

  function HelpModal() {
    _classCallCheck(this, HelpModal);

    return _possibleConstructorReturn(this, (HelpModal.__proto__ || Object.getPrototypeOf(HelpModal)).apply(this, arguments));
  }

  _createClass(HelpModal, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "ui modal"
      }, _react.default.createElement("i", {
        className: "close icon"
      }), _react.default.createElement("div", {
        className: "header"
      }, "Help: About Icons"), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("div", {
        className: "description"
      }, _react.default.createElement("div", {
        className: "ui divided list"
      }, _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big circle info icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "More information on properties"), _react.default.createElement("div", {
        className: "description"
      }, "Mouseover on this icon allows you to see what values are expected for the property."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big blue edit icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Edit value"), _react.default.createElement("div", {
        className: "description"
      }, "Clicking on this icon allows you to edit the current value of the property."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big green save icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Save value"), _react.default.createElement("div", {
        className: "description"
      }, "Clicking on this icon will save the inserted value for property."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big blue undo icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Undo value"), _react.default.createElement("div", {
        className: "description"
      }, "Clicking on this icon will undo the value of a property."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big red trash alternate outline icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Delete a value"), _react.default.createElement("div", {
        className: "description"
      }, " If a property has multiple values, you can use this icon to delete a value."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big blue unhide icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "See more details"), _react.default.createElement("div", {
        className: "description"
      }, " Clicking on this icon allows you to see and edit other sub-properties of a value (if existed)."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big blue hide icon"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Hide details"), _react.default.createElement("div", {
        className: "description"
      }, " Clicking on this icon hides the sub-properties of a value (if existed)."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big blue icon add circle"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Add details"), _react.default.createElement("div", {
        className: "description"
      }, " If a property value allows value extension, clicking on this icon will enable users to add more details on the value."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big blue icon add square"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, "Add another value"), _react.default.createElement("div", {
        className: "description"
      }, " If a property allows multiple values, you can use this icon to add another values to the property. The system automatically generates a default value for the property. You then need to change the inserted default value."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("i", {
        className: "big red icon cancel square"
      }), _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, " Cancel value"), _react.default.createElement("div", {
        className: "description"
      }, " Clicking on this icon cancels adding new values to a property."))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, " Resource "), _react.default.createElement("div", {
        className: "description"
      }, " ", _react.default.createElement("i", {
        className: "big icon black cube"
      }), " Read Only Access ", _react.default.createElement("i", {
        className: "big icon green cube"
      }), " Write Access ", _react.default.createElement("i", {
        className: "big icon yellow cube"
      }), " Partial Write Access ", _react.default.createElement("i", {
        className: "big icon green superscript"
      }), " Clone "))), _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("div", {
        className: "content"
      }, _react.default.createElement("a", {
        className: "header"
      }, " Dataset "), _react.default.createElement("div", {
        className: "description"
      }, " ", _react.default.createElement("i", {
        className: "big icon orange theme"
      }), " has Dynamic Config ", _react.default.createElement("i", {
        className: "big icon brown theme"
      }), " has both Dynamic & Static Config ")))))));
    }
  }]);

  return HelpModal;
}(_react.default.Component);

var _default = HelpModal;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 636:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var Home = /*#__PURE__*/function (_React$Component) {
  _inherits(Home, _React$Component);

  function Home() {
    _classCallCheck(this, Home);

    return _possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).apply(this, arguments));
  }

  _createClass(Home, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "credits"
      }, _react.default.createElement("div", {
        className: "ui fluid container ldr-padding",
        ref: "about"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui row"
      }, _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ui segment content"
      }, _react.default.createElement("h2", {
        className: "ui header"
      }, "ODPReactor", ' '), _react.default.createElement("div", {
        style: {
          fontSize: 20,
          margin: 20
        }
      }, _react.default.createElement("ul", null, _react.default.createElement("li", {
        className: "about-li"
      }, "ODP Reactor is a knowledge graph visualiser based on", ' ', _react.default.createElement("a", {
        href: "http://ontologydesignpatterns.org/wiki/Main_Page",
        target: "_blank"
      }, "Ontology Design Patterns")), _react.default.createElement("li", {
        className: "about-li"
      }, "To trigger the ODP reaction in the visualisation, your knowledge graph must include", ' ', _react.default.createElement("a", {
        href: "http://ontologydesignpatterns.org/wiki/images/0/0a/Paper-09.pdf",
        target: "_blank"
      }, "OPLa"), ' ', "annotations"), _react.default.createElement("li", {
        className: "about-li"
      }, "ODP Reactor is developed by", ' ', _react.default.createElement("a", {
        href: "http://stlab.istc.cnr.it/stlab/",
        target: "_blank"
      }, "STLab")), _react.default.createElement("li", {
        className: "about-li"
      }, "ODP Reactor extends", _react.default.createElement("a", {
        href: "http://ld-r.org",
        target: "_blank"
      }, ' ', "Ld-r", ' '), "developped at", ' ', _react.default.createElement("a", {
        href: "https://www.vu.nl/en",
        target: "_blank"
      }, "VU"), "."))), _react.default.createElement("br", null)))), _react.default.createElement("div", {
        className: "ui row"
      }, _react.default.createElement("div", {
        className: "ui fluid grid container"
      }, _react.default.createElement("div", {
        className: "two column row"
      }, _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/screenshot_patterns.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Visualise large knowledge graphs in one page and be able to grasp at first sight what type of data it encodes")), _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/time_indexed_typed_location_detailed.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Visualise data based on the context of your interests (location -", '>', " maps, collection -", '>', " sets, structure -", '>', " components)"))), _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/list_layout.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Choose among different layouts the one that better fits your needs")), _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/geog_filter.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Apply context-aware filters to refine your search")))))))));
    }
  }]);

  return Home;
}(_react.default.Component);

module.exports = Home;

/***/ }),

/***/ 637:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var About = /*#__PURE__*/function (_React$Component) {
  _inherits(About, _React$Component);

  function About() {
    _classCallCheck(this, About);

    return _possibleConstructorReturn(this, (About.__proto__ || Object.getPrototypeOf(About)).apply(this, arguments));
  }

  _createClass(About, [{
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "credits"
      }, _react.default.createElement("div", {
        className: "ui fluid container ldr-padding",
        ref: "about"
      }, _react.default.createElement("div", {
        className: "ui grid"
      }, _react.default.createElement("div", {
        className: "ui row"
      }, _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ui segment content"
      }, _react.default.createElement("h2", {
        className: "ui header"
      }, "About", ' ', _react.default.createElement("a", {
        href: "http://stlab.istc.cnr.it/stlab/",
        target: "_blank",
        style: {
          marginLeft: 0
        }
      }, _react.default.createElement("img", {
        className: "ui centered little image",
        src: "http://stlab.istc.cnr.it/stlab/wp-content/uploads/2016/04/STLabLogo-h80.png"
      }))), _react.default.createElement("div", {
        style: {
          fontSize: 20,
          margin: 20
        }
      }, _react.default.createElement("ul", null, _react.default.createElement("li", {
        className: "about-li"
      }, "ODP Reactor is a knowledge graph visualiser based on", ' ', _react.default.createElement("a", {
        href: "http://ontologydesignpatterns.org/wiki/Main_Page",
        target: "_blank"
      }, "Ontology Design Patterns")), _react.default.createElement("li", {
        className: "about-li"
      }, "To trigger the ODP reaction in the visualisation, your knowledge graph must include", ' ', _react.default.createElement("a", {
        href: "http://ontologydesignpatterns.org/wiki/images/0/0a/Paper-09.pdf",
        target: "_blank"
      }, "OPLa"), ' ', "annotations"), _react.default.createElement("li", {
        className: "about-li"
      }, "ODP Reactor is developed by", ' ', _react.default.createElement("a", {
        href: "http://stlab.istc.cnr.it/stlab/",
        target: "_blank"
      }, "STLab")), _react.default.createElement("li", {
        className: "about-li"
      }, "ODP Reactor extends", _react.default.createElement("a", {
        href: "http://ld-r.org",
        target: "_blank"
      }, ' ', "Ld-r", ' '), "developped at", ' ', _react.default.createElement("a", {
        href: "https://www.vu.nl/en",
        target: "_blank"
      }, "VU"), "."))), _react.default.createElement("br", null)))), _react.default.createElement("div", {
        className: "ui row"
      }, _react.default.createElement("div", {
        className: "ui fluid grid container"
      }, _react.default.createElement("div", {
        className: "two column row"
      }, _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/screenshot_patterns.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Visualise large knowledge graphs in one page and be able to grasp at first sight what type of data it encodes")), _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/time_indexed_typed_location_detailed.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Visualise data based on the context of your interests (location -", '>', " maps, collection -", '>', " sets, structure -", '>', " components)"))), _react.default.createElement("div", {
        className: "column"
      }, _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/list_layout.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Choose among different layouts the one that better fits your needs")), _react.default.createElement("div", {
        className: "ldr-padding"
      }, _react.default.createElement("img", {
        style: {
          width: '100%'
        },
        src: "".concat(PUBLIC_URL, "/assets/img/tool-image/geog_filter.png")
      }), _react.default.createElement("p", {
        className: "about-img-desc"
      }, "Apply context-aware filters to refine your search")))))))));
    }
  }]);

  return About;
}(_react.default.Component);

var _default = About;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 638:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ApplicationStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(ApplicationStore, _BaseStore);

  function ApplicationStore(dispatcher) {
    var _this;

    _classCallCheck(this, ApplicationStore);

    _this = _possibleConstructorReturn(this, (ApplicationStore.__proto__ || Object.getPrototypeOf(ApplicationStore)).call(this, dispatcher));
    _this.pageTitle = '';
    _this.loading = 0;
    return _this;
  }

  _createClass(ApplicationStore, [{
    key: "updatePageTitle",
    value: function updatePageTitle(payload) {
      this.pageTitle = payload.pageTitle;
      this.emitChange();
    }
  }, {
    key: "loaderOn",
    value: function loaderOn() {
      this.loading = 1;
      this.emitChange();
    }
  }, {
    key: "loaderOff",
    value: function loaderOff() {
      this.loading = 0;
      this.emitChange();
    }
  }, {
    key: "getPageTitle",
    value: function getPageTitle() {
      return this.pageTitle;
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        pageTitle: this.pageTitle,
        loading: this.loading
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.pageTitle = state.pageTitle;
      this.loading = state.loading;
    }
  }]);

  return ApplicationStore;
}(_addons.BaseStore);

ApplicationStore.storeName = 'ApplicationStore'; // PR open in dispatchr to remove this need

ApplicationStore.handlers = {
  'UPDATE_PAGE_TITLE': 'updatePageTitle',
  'LOADING_DATA': 'loaderOn',
  'LOADED_DATA': 'loaderOff'
};
var _default = ApplicationStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 644:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadUsersList;

var _general = __webpack_require__(59);

function loadUsersList(context, payload, done) {
  context.dispatch('LOADING_DATA', {});
  context.service.read('admin.userslist', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('LOAD_USERS_LIST_FAILURE', err);
    } else {
      context.dispatch('LOAD_USERS_LIST_SUCCESS', res);
    }

    context.dispatch('UPDATE_PAGE_TITLE', {
      pageTitle: _general.appFullTitle + ' | Users' || false
    });
    context.dispatch('LOADED_DATA', {});
    done();
  });
}

module.exports = exports.default;

/***/ }),

/***/ 645:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getEnvState;

var _general = __webpack_require__(59);

function getEnvState(context, payload, done) {
  context.dispatch('LOADING_DATA', {});
  context.service.read('resource.properties', {
    resource: payload.stateURI,
    dataset: _general.configDatasetURI[0]
  }, {
    timeout: 40 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_ENV_STATE_FAILURE', err);
    } else {
      var res2 = res;
      res2.id = payload.id;
      context.dispatch('UPDATE_ENV_STATE', res2);
    }

    context.dispatch('LOADED_DATA', {});
    done(null, res);
  });
}

module.exports = exports.default;

/***/ }),

/***/ 646:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _reactDom = _interopRequireDefault(__webpack_require__(27));

var _classnames = _interopRequireDefault(__webpack_require__(10));

var _reactDropzone = _interopRequireDefault(__webpack_require__(2404));

var _superagent = _interopRequireDefault(__webpack_require__(1287));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';
/*----config
    accepted mime-types
    maximum File size in bytes
    file name prefix
------------*/

/**
A file upload box to allow uploading files
*/

var FileInput = /*#__PURE__*/function (_React$Component) {
  _inherits(FileInput, _React$Component);

  function FileInput() {
    var _this;

    _classCallCheck(this, FileInput);

    _this = _possibleConstructorReturn(this, (FileInput.__proto__ || Object.getPrototypeOf(FileInput)).call(this));
    _this.state = {
      status: 0,
      progress: 0,
      filePath: ''
    }; //status 0: start, 1: uploading, 2: uploaded

    return _this;
  }

  _createClass(FileInput, [{
    key: "getRandomNumber",
    value: function getRandomNumber() {
      return Math.round(+new Date() / 1000);
    }
  }, {
    key: "getFormatFromName",
    value: function getFormatFromName(name) {
      var tmp = name.split('.');
      return tmp[tmp.length - 1];
    }
  }, {
    key: "onDrop",
    value: function onDrop(files) {
      var _this2 = this;

      var self = this;
      var filePrefixName = this.props.config && this.props.config.fileNamePrefix ? this.props.config.fileNamePrefix : 'file';
      var req, fname;
      files.forEach(function (file) {
        fname = filePrefixName + _this2.getRandomNumber() + '.' + _this2.getFormatFromName(file.name);
        req = _superagent.default.post('/upload/' + encodeURIComponent(fname));
        req.attach(fname, file);
      });
      req.on('progress', function (e) {
        //console.log('Percentage done: ', e.percent);
        self.setState({
          status: 1,
          progress: e.percent
        });
      }).end(function (err, res) {
        //console.log(err,res);
        var filePath = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + '/uploaded/' + fname;
        self.setState({
          status: 2,
          progress: 100,
          filePath: filePath
        });
        self.props.onDataEdit(filePath);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var dropzoneRef;
      var acceptedMimeTypes = this.props.config && this.props.config.acceptedMimeTypes ? this.props.config.acceptedMimeTypes : '';
      var maxFileSize = this.props.config && this.props.config.maxFileSize ? Number(this.props.config.maxFileSize) : 157286400; //150MB default

      return _react.default.createElement("div", {
        ref: "fileInput"
      }, !this.state.status ? _react.default.createElement("div", {
        className: "dropzone"
      }, _react.default.createElement(_reactDropzone.default, {
        style: {
          width: '100%',
          height: '200px',
          borderWidth: '2px',
          borderStyle: 'dashed',
          borderRadius: '5px'
        },
        ref: function ref(node) {
          dropzoneRef = node;
        },
        accept: acceptedMimeTypes,
        maxSize: maxFileSize,
        multiple: false,
        onDrop: this.onDrop.bind(this)
      }, function (_ref) {
        var getRootProps = _ref.getRootProps,
            getInputProps = _ref.getInputProps,
            isDragActive = _ref.isDragActive;
        return _react.default.createElement("div", _extends({
          style: {
            width: '100%',
            height: '200px',
            borderWidth: '2px',
            borderStyle: 'dashed',
            borderRadius: '5px'
          }
        }, getRootProps(), {
          className: (0, _classnames.default)('dropzone', {
            'dropzone--isActive': isDragActive
          })
        }), _react.default.createElement("input", getInputProps()), isDragActive ? _react.default.createElement("p", null, "Drop your CSV file here...") : _react.default.createElement("p", null, "Try dropping your CSV file here, or ", _react.default.createElement("b", null, "click"), " to select files to upload."));
      })) : null, this.state.status === 1 ? _react.default.createElement("div", {
        className: "progress"
      }, _react.default.createElement("div", {
        className: "ui active inline loader"
      }), ' ', this.state.progress, "% uploaded. Waiting for the next action to start...") : null, this.state.status === 2 ? _react.default.createElement("div", {
        className: "uploaded"
      }, "File was successfully uploaded at", ' ', _react.default.createElement("a", {
        href: this.state.filePath
      }, this.state.filePath), ".") : null);
    }
  }]);

  return FileInput;
}(_react.default.Component);

var _default = FileInput;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 648:
/***/ (function(module, exports) {

module.exports = {
  list: {
    'aair': 'http://xmlns.notu.be/aair#',
    'arco': '<https://w3id.org/arco/ontology/arco/>',
    'ldr': 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#',
    'aapi': 'http://rdf.alchemyapi.com/rdf/v1/s/aapi-schema#',
    'abc': 'http://www.metadata.net/harmony/ABCSchemaV5Commented.rdf#',
    'ac': 'http://umbel.org/umbel/ac/',
    'acc': 'http://purl.org/NET/acc#',
    'acl': 'http://www.w3.org/ns/auth/acl#',
    'acm': 'http://www.rkbexplorer.com/ontologies/acm#',
    'act': 'http://www.w3.org/2007/rif-builtin-action#',
    'ad': 'http://schemas.talis.com/2005/address/schema#',
    'address': 'http://schemas.talis.com/2005/address/schema#',
    'admin': 'http://webns.net/mvcb/',
    'admingeo': 'http://data.ordnancesurvey.co.uk/ontology/admingeo/',
    'af': 'http://purl.org/ontology/af/',
    'affy': 'http://www.affymetrix.com/community/publications/affymetrix/tmsplice#',
    'afn': 'http://jena.hpl.hp.com/ARQ/function#',
    'agent': 'http://eulersharp.sourceforge.net/2003/03swap/agent#',
    'agents': 'http://eulersharp.sourceforge.net/2003/03swap/agent#',
    'agetec': 'http://www.agetec.org/',
    'aifb': 'http://www.aifb.kit.edu/id/',
    'aiiso': 'http://purl.org/vocab/aiiso/schema#',
    'aims': 'http://aims.fao.org/aos/common/',
    'air': 'http://dig.csail.mit.edu/TAMI/2007/amord/air#',
    'airport': 'http://www.daml.org/2001/10/html/airport-ont#',
    'akt': 'http://www.aktors.org/ontology/portal#',
    'akts': 'http://www.aktors.org/ontology/support#',
    'am': 'http://vocab.deri.ie/am#',
    'anca': 'http://users.utcluj.ro/~raluca/rdf_ontologies_ralu/ralu_modified_ontology_pizzas2_0#',
    'aneo': 'http://akonadi-project.org/ontologies/aneo#',
    'ann': 'http://www.w3.org/2000/10/annotation-ns#',
    'ao': 'http://purl.org/ontology/ao/core#',
    'arch': 'http://purl.org/archival/vocab/arch#',
    'artstor': 'http://simile.mit.edu/2003/10/ontologies/artstor#',
    'ass': 'http://uptheasset.org/ontology#',
    'atom': 'http://www.w3.org/2005/Atom/',
    'atomix': 'http://buzzword.org.uk/rdf/atomix#',
    'atomowl': 'http://bblfish.net/work/atom-owl/2006-06-06/#',
    'audio': 'http://purl.org/media/audio#',
    'awol': 'http://bblfish.net/work/atom-owl/2006-06-06/#',
    'b2rpubchem': 'http://bio2rdf.org/ns/ns/ns/pubchem#',
    'bcnbio': 'http://datos.bcn.cl/ontologies/bcn-biographies#',
    'bcncon': 'http://datos.bcn.cl/ontologies/bcn-congress#',
    'bcngeo': 'http://datos.bcn.cl/ontologies/bcn-geographics#',
    'bcnnorms': 'http://datos.bcn.cl/ontologies/bcn-norms#',
    'bib': 'http://zeitkunst.org/bibtex/0.1/bibtex.owl#',
    'biblio': 'http://purl.org/net/biblio#',
    'bibo': 'http://purl.org/ontology/bibo/',
    'bibtex': 'http://purl.oclc.org/NET/nknouf/ns/bibtex#',
    'bill': 'http://www.rdfabout.com/rdf/schema/usbill/',
    'bio': 'http://purl.org/vocab/bio/0.1/',
    'bio2rdf': 'http://bio2rdf.org/',
    'biocore': 'http://bio2rdf.org/core#',
    'biol': 'http://purl.org/NET/biol/ns#',
    'biordf': 'http://purl.org/net/biordfmicroarray/ns#',
    'bioskos': 'http://eulersharp.sourceforge.net/2003/03swap/bioSKOSSchemes#',
    'blt': 'http://www.bl.uk/schemas/bibliographic/blterms#',
    'book': 'http://purl.org/NET/book/vocab#',
    'bookmark': 'http://www.w3.org/2002/01/bookmark#',
    'botany': 'http://purl.org/NET/biol/botany#',
    'bsbm': 'http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/',
    'c4dm': 'http://purl.org/NET/c4dm/event.owl#',
    'c4n': 'http://vocab.deri.ie/c4n#',
    'c4o': 'http://purl.org/spar/c4o/',
    'cal': 'http://www.w3.org/2002/12/cal/ical#',
    'campsite': 'http://www.openlinksw.com/campsites/schema#',
    'card': 'http://www.ashutosh.com/test/',
    'care': 'http://eulersharp.sourceforge.net/2003/03swap/care#',
    'cbase': 'http://ontologycentral.com/2010/05/cb/vocab#',
    'cc': 'http://creativecommons.org/ns#',
    'ccard': 'http://purl.org/commerce/creditcard#',
    'cco': 'http://purl.org/ontology/cco/core#',
    'ccom': 'http://purl.org/ontology/cco/mappings#',
    'cdm': 'http://purl.org/twc/ontology/cdm.owl#',
    'ceo': 'http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#',
    'cert': 'http://www.w3.org/ns/auth/cert#',
    'cfp': 'http://sw.deri.org/2005/08/conf/cfp.owl#',
    'chebi': 'http://bio2rdf.org/chebi:',
    'chord': 'http://purl.org/ontology/chord/',
    'cito': 'http://purl.org/spar/cito/',
    'cld': 'http://purl.org/cld/terms/',
    'climb': 'http://climb.dataincubator.org/vocabs/climb/',
    'clineva': 'http://www.agfa.com/w3c/2009/clinicalEvaluation#',
    'clinproc': 'http://www.agfa.com/w3c/2009/clinicalProcedure#',
    'cmo': 'http://purl.org/twc/ontologies/cmo.owl#',
    'cmp': 'http://www.ontologydesignpatterns.org/cp/owl/componency.owl#',
    'cnt': 'http://www.w3.org/2011/content#',
    'co': 'http://rhizomik.net/ontologies/copyrightonto.owl#',
    'code': 'http://telegraphis.net/ontology/measurement/code#',
    'coeus': 'http://bioinformatics.ua.pt/coeus/',
    'coin': 'http://purl.org/court/def/2009/coin#',
    'com': 'http://purl.org/commerce#',
    'commerce': 'http://search.yahoo.com/searchmonkey/commerce/',
    'common': 'http://www.w3.org/2007/uwa/context/common.owl#',
    'commons': 'http://commons.psi.enakting.org/def/',
    'compass': 'http://purl.org/net/compass#',
    'con': 'http://www.w3.org/2000/10/swap/pim/contact#',
    'conserv': 'http://conserv.deri.ie/ontology#',
    'contact': 'http://www.w3.org/2000/10/swap/pim/contact#',
    'content': 'http://purl.org/rss/1.0/modules/content/',
    'conv': 'http://purl.org/twc/vocab/conversion/',
    'conversion': 'http://purl.org/twc/vocab/conversion/',
    'coo': 'http://purl.org/coo/ns#',
    'copyright': 'http://rhizomik.net/ontologies/copyrightonto.owl#',
    'cordis': 'http://cordis.europa.eu/projects/',
    'core': 'http://vivoweb.org/ontology/core#',
    'coref': 'http://www.rkbexplorer.com/ontologies/coref#',
    'cos': 'http://www.inria.fr/acacia/corese#',
    'countries': 'http://eulersharp.sourceforge.net/2003/03swap/countries#',
    'courseware': 'http://courseware.rkbexplorer.com/ontologies/courseware#',
    'cpm': 'http://catalogus-professorum.org/cpm/',
    'cpv': 'http://purl.org/weso/cpv/',
    'crm': 'http://www.cidoc-crm.org/cidoc-crm/',
    'crypto': 'http://www.w3.org/2000/10/swap/crypto#',
    'cs': 'http://purl.org/vocab/changeset/schema#',
    'ct': 'http://data.linkedct.org/resource/linkedct/',
    'ctag': 'http://commontag.org/ns#',
    'cube': 'http://purl.org/linked-data/cube#',
    'custom': 'http://www.openrdf.org/config/sail/custom#',
    'cv': 'http://rdfs.org/resume-rdf/',
    'cvbase': 'http://purl.org/captsolo/resume-rdf/0.2/base#',
    'cyc': 'http://sw.opencyc.org/concept/',
    'cycann': 'http://sw.cyc.com/CycAnnotations_v1#',
    'd2rq': 'http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#',
    'dady': 'http://purl.org/NET/dady#',
    'daia': 'http://purl.org/ontology/daia/',
    'dailymed': 'http://www4.wiwiss.fu-berlin.de/dailymed/resource/dailymed/',
    'daml': 'http://www.daml.org/2001/03/daml+oil#',
    'dawgt': 'http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#',
    'days': 'http://ontologi.es/days#',
    'dayta': 'http://dayta.me/resource#',
    'dblp': 'http://dblp.uni-trier.de/rdf/schema-2015-01-26#',
    'dbo': 'http://dbpedia.org/ontology/',
    'dbp': 'http://dbpedia.org/property/',
    'dbpedia': 'http://dbpedia.org/resource/',
    'dbpediaowl': 'http://dbpedia.org/owl/',
    'dbpp': 'http://dbpedia.org/property/',
    'dbpprop': 'http://dbpedia.org/property/',
    'dbprop': 'http://dbpedia.org/property/',
    'dbptmpl': 'http://dbpedia.org/resource/Template:',
    'dbr': 'http://dbpedia.org/resource/',
    'dc': 'http://purl.org/dc/elements/1.1/',
    'dc11': 'http://purl.org/dc/elements/1.1/',
    'dcam': 'http://purl.org/dc/dcam/',
    'dcat': 'http://www.w3.org/ns/dcat#',
    'dcmit': 'http://purl.org/dc/dcmitype/',
    'dcmitype': 'http://purl.org/dc/dcmitype/',
    'dcn': 'http://www.w3.org/2007/uwa/context/deliverycontext.owl#',
    'dcq': 'http://purl.org/dc/qualifiers/1.0/',
    'dct': 'http://purl.org/dc/terms/',
    'dcterm': 'http://purl.org/dc/terms/',
    'dcterms': 'http://purl.org/dc/terms/',
    'dctype': 'http://purl.org/dc/dcmitype/',
    'ddc': 'http://purl.org/NET/decimalised#',
    'ddl': 'http://purl.org/vocab/riro/ddl#',
    'decl': 'http://www.linkedmodel.org/1.0/schema/decl#',
    'derecho': 'http://purl.org/derecho#',
    'dgfoaf': 'http://west.uni-koblenz.de/ontologies/2010/07/dgfoaf.owl#',
    'dgtwc': 'http://data-gov.tw.rpi.edu/2009/data-gov-twc.rdf#',
    'dir': 'http://schemas.talis.com/2005/dir/schema#',
    'disease': 'http://www.agfa.com/w3c/2009/humanDisorder#',
    'diseasome': 'http://www4.wiwiss.fu-berlin.de/diseasome/resource/diseasome/',
    'dnr': 'http://www.dotnetrdf.org/configuration#',
    'doac': 'http://ramonantonio.net/doac/0.1/#',
    'doap': 'http://usefulinc.com/ns/doap#',
    'doc': 'http://www.w3.org/2000/10/swap/pim/doc#',
    'doclist': 'http://www.junkwork.net/xml/DocumentList#',
    'drug': 'http://www.agfa.com/w3c/2009/drugTherapy#',
    'drugbank': 'http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugbank/',
    'dtype': 'http://www.linkedmodel.org/schema/dtype#',
    'dul': 'http://www.loa-cnr.it/ontologies/DUL.owl#',
    'dummy': 'http://hello.com/',
    'dv': 'http://rdf.data-vocabulary.org/#',
    'ean': 'http://openean.kaufkauf.net/id/',
    'earl': 'http://www.w3.org/ns/earl#',
    'eat': 'http://www.awesomesauce.net/urmom/',
    'eco': 'http://www.ebusiness-unibw.org/ontologies/eclass/5.1.4/#',
    'ecs': 'http://rdf.ecs.soton.ac.uk/ontology/ecs#',
    'edam': 'http://purl.bioontology.org/ontology/EDAM/',
    'edm': 'http://www.europeana.eu/schemas/edm/',
    'eg': 'http://eulergui.sourceforge.net/engine.owl#',
    'elog': 'http://eulersharp.sourceforge.net/2003/03swap/log-rules#',
    'enc': 'http://www.w3.org/2001/04/xmlenc#',
    'environ': 'http://eulersharp.sourceforge.net/2003/03swap/environment#',
    'es': 'http://eulersharp.sourceforge.net/2003/03swap/log-rules#',
    'esd': 'http://def.esd.org.uk/',
    'eu': 'http://eulersharp.sourceforge.net/2003/03swap/log-rules#',
    'eui': 'http://institutions.publicdata.eu/#',
    'event': 'http://purl.org/NET/c4dm/event.owl#',
    'events': 'http://eulersharp.sourceforge.net/2003/03swap/event#',
    'evopat': 'http://ns.aksw.org/Evolution/',
    'evset': 'http://dsnotify.org/vocab/eventset/0.1/',
    'ex': 'http://example.org/',
    'exif': 'http://www.w3.org/2003/12/exif/ns#',
    'eye': 'http://jena.hpl.hp.com/Eyeball#',
    'ezcontext': 'http://ontologies.ezweb.morfeo-project.org/ezcontext/ns#',
    'eztag': 'http://ontologies.ezweb.morfeo-project.org/eztag/ns#',
    'fab': 'http://purl.org/fab/ns#',
    'fabio': 'http://purl.org/spar/fabio/',
    'factbook': 'http://wifo5-04.informatik.uni-mannheim.de/factbook/ns#',
    'fb': 'http://rdf.freebase.com/ns/',
    'fc': 'http://www.freeclass.eu/freeclass_v1#',
    'fct': 'http://openlinksw.com/services/facets/1.0/',
    'fec': 'http://www.rdfabout.com/rdf/schema/usfec/',
    'fed': 'http://www.openrdf.org/config/sail/federation#',
    'fingal': 'http://vocab.deri.ie/fingal#',
    'fn': 'http://www.ontologydesignpatterns.org/ont/framenet/tbox/',
    'foaf': 'http://xmlns.com/foaf/0.1/',
    'formats': 'http://www.w3.org/ns/formats/',
    'frbr': 'http://purl.org/vocab/frbr/core#',
    'frbrcore': 'http://purl.org/vocab/frbr/core#',
    'frbre': 'http://purl.org/vocab/frbr/extended#',
    'freebase': 'http://rdf.freebase.com/ns/',
    'fresnel': 'http://www.w3.org/2004/09/fresnel#',
    'frir': 'http://purl.org/twc/ontology/frir.owl#',
    'game': 'http://data.totl.net/game/',
    'gazetteer': 'http://data.ordnancesurvey.co.uk/ontology/50kGazetteer/',
    'gbv': 'http://purl.org/ontology/gbv/',
    'gc': 'http://www.oegov.org/core/owl/gc#',
    'gd': 'http://rdf.data-vocabulary.org/#',
    'gelo': 'http://krauthammerlab.med.yale.edu/ontologies/gelo#',
    'gen': 'http://www.w3.org/2006/gen/ont#',
    'genab': 'http://eulersharp.sourceforge.net/2003/03swap/genomeAbnormality#',
    'geo': 'http://www.w3.org/2003/01/geo/wgs84_pos#',
    'geodata': 'http://sws.geonames.org/',
    'geoes': 'http://geo.linkeddata.es/ontology/',
    'geographis': 'http://telegraphis.net/ontology/geography/geography#',
    'geonames': 'http://www.geonames.org/ontology#',
    'geospecies': 'http://rdf.geospecies.org/ont/geospecies#',
    'geovocab': 'http://geovocab.org/',
    'gesis': 'http://lod.gesis.org/lodpilot/ALLBUS/vocab.rdf#',
    'giving': 'http://ontologi.es/giving#',
    'gml': 'http://www.opengis.net/ont/gml#',
    'gn': 'http://www.geonames.org/ontology#',
    'go': 'http://purl.org/obo/owl/GO#',
    'gob': 'http://purl.org/ontology/last-fm/',
    'gold': 'http://purl.org/linguistics/gold/',
    'govtrackus': 'http://www.rdfabout.com/rdf/usgov/geo/us/',
    'govwild': 'http://govwild.org/0.6/GWOntology.rdf/',
    'gpt': 'http://purl.org/vocab/riro/gpt#',
    'gr': 'http://purl.org/goodrelations/v1#',
    'granatum': 'http://chem.deri.ie/granatum/',
    'grddl': 'http://www.w3.org/2003/g/data-view#',
    'greg': 'http://kasei.us/about/foaf.xrdf#',
    'gridworks': 'http://purl.org/net/opmv/types/gridworks#',
    'gv': 'http://rdf.data-vocabulary.org/#',
    'h5': 'http://buzzword.org.uk/rdf/h5#',
    'hard': 'http://www.w3.org/2007/uwa/context/hardware.owl#',
    'harrisons': 'http://harrisons.cc/',
    'hartigprov': 'http://purl.org/net/provenance/ns#',
    'hcard': 'http://purl.org/uF/hCard/terms/',
    'hcterms': 'http://purl.org/uF/hCard/terms/',
    'healthcare': 'http://www.agfa.com/w3c/2009/healthCare#',
    'hemogram': 'http://www.agfa.com/w3c/2009/hemogram#',
    'hints2005': 'http://purl.org/twc/cabig/model/HINTS2005-1.owl#',
    'hlisting': 'http://sindice.com/hlisting/0.1/',
    'hospital': 'http://www.agfa.com/w3c/2009/hospital#',
    'httph': 'http://www.w3.org/2007/ont/httph#',
    'httpvoc': 'http://www.w3.org/2006/http#',
    'human': 'http://eulersharp.sourceforge.net/2003/03swap/human#',
    'humanbody': 'http://eulersharp.sourceforge.net/2003/03swap/humanBody#',
    'iao': 'http://purl.obolibrary.org/obo/iao.owl#',
    'ibis': 'http://purl.org/ibis#',
    'ical': 'http://www.w3.org/2002/12/cal/ical#',
    'imm': 'http://schemas.microsoft.com/imm/',
    'imreg': 'http://www.w3.org/2004/02/image-regions#',
    'infection': 'http://www.agfa.com/w3c/2009/infectiousDisorder#',
    'ir': 'http://www.ontologydesignpatterns.org/cp/owl/informationrealization.owl#',
    'ire': 'http://www.ontologydesignpatterns.org/cpont/ire.owl#',
    'iron': 'http://purl.org/ontology/iron#',
    'irrl': 'http://www.ontologydesignpatterns.org/cp/owl/informationobjectsandrepresentationlanguages.owl#',
    'irw': 'http://www.ontologydesignpatterns.org/ont/web/irw.owl#',
    'is': 'http://purl.org/ontology/is/core#',
    'isi': 'http://purl.org/ontology/is/inst/',
    'isq': 'http://purl.org/ontology/is/quality/',
    'ist': 'http://purl.org/ontology/is/types/',
    'iswc': 'http://annotation.semanticweb.org/2004/iswc#',
    'java': 'http://www.w3.org/2007/uwa/context/java.owl#',
    'jdbc': 'http://d2rq.org/terms/jdbc/',
    'kb': 'http://deductions.sf.net/ontology/knowledge_base.owl#',
    'kontakt': 'http://richard.cyganiak.de/',
    'kw': 'http://kwantu.net/kw/',
    'kwijibo': 'http://kwijibo.talis.com/',
    'label': 'http://purl.org/net/vocab/2004/03/label#',
    'lang': 'http://ontologi.es/lang/core#',
    'languages': 'http://eulersharp.sourceforge.net/2003/03swap/languages#',
    'lark1': 'http://users.utcluj.ro/~raluca/ontology/Ontology1279614123500.owl#',
    'lastfm': 'http://purl.org/ontology/last-fm/',
    'ldap': 'http://purl.org/net/ldap/',
    'lfm': 'http://purl.org/ontology/last-fm/',
    'lfn': 'http://www.dotnetrdf.org/leviathan#',
    'lgd': 'http://linkedgeodata.org/triplify/',
    'lgdo': 'http://linkedgeodata.org/ontology/',
    'lgv': 'http://linkedgeodata.org/ontology/',
    'lib': 'http://purl.org/library/',
    'lifecycle': 'http://purl.org/vocab/lifecycle/schema#',
    'like': 'http://ontologi.es/like#',
    'lingvoj': 'http://www.lingvoj.org/ontology#',
    'link': 'http://www.w3.org/2006/link#',
    'linkedct': 'http://data.linkedct.org/vocab/',
    'linkedmdb': 'http://data.linkedmdb.org/sparql/',
    'list': 'http://www.w3.org/2000/10/swap/list#',
    'loc': 'http://www.w3.org/2007/uwa/context/location.owl#',
    'lod2': 'http://lod2.eu/schema/',
    'lodac': 'http://lod.ac/ns/lodac#',
    'lode': 'http://linkedevents.org/ontology/',
    'log': 'http://www.w3.org/2000/10/swap/log#',
    'lom': 'http://ltsc.ieee.org/rdf/lomv1p0/lom#',
    'lomvoc': 'http://ltsc.ieee.org/rdf/lomv1p0/vocabulary#',
    'lotico': 'http://www.lotico.com/resource/',
    'loticoowl': 'http://www.lotico.com/ontology/',
    'lp': 'http://launchpad.net/rdf/launchpad#',
    'lt': 'http://diplomski.nelakolundzija.org/LTontology.rdf#',
    'lvont': 'http://lexvo.org/ontology#',
    'lx': 'http://purl.org/NET/lx#',
    'ma': 'http://www.w3.org/ns/ma-ont#',
    'madsrdf': 'http://www.loc.gov/mads/rdf/v1#',
    'malignneo': 'http://www.agfa.com/w3c/2009/malignantNeoplasm#',
    'math': 'http://www.w3.org/2000/10/swap/math#',
    'media': 'http://purl.org/media#',
    'meetup': 'http://www.lotico.com/meetup/',
    'mei': 'http://www.music-encoding.org/ns/mei/',
    'memo': 'http://ontologies.smile.deri.ie/2009/02/27/memo#',
    'meta': 'http://www.openrdf.org/rdf/2009/metadata#',
    'meteo': 'http://purl.org/ns/meteo#',
    'mf': 'http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#',
    'mit': 'http://purl.org/ontology/mo/mit#',
    'mo': 'http://purl.org/ontology/mo/',
    'moat': 'http://moat-project.org/ns#',
    'money': 'http://purl.org/net/rdf-money/',
    'movie': 'http://data.linkedmdb.org/resource/movie/',
    'ms': 'http://purl.org/obo/owl/MS#',
    'mte': 'http://nl.ijs.si/ME/owl/',
    'mtecore': 'http://purl.org/olia/mte/multext-east.owl#',
    'mu': 'http://mu.semte.ch/vocabularies/core/',
    'muo': 'http://purl.oclc.org/NET/muo/muo#',
    'music': 'http://musicontology.com/',
    'musim': 'http://purl.org/ontology/similarity/',
    'mygrid': 'http://www.mygrid.org.uk/ontology#',
    'myspace': 'http://purl.org/ontology/myspace#',
    'myspo': 'http://purl.org/ontology/myspace#',
    'mysql': 'http://web-semantics.org/ns/mysql/',
    'name': 'http://example.org/name#',
    'nao': 'http://www.semanticdesktop.org/ontologies/2007/08/15/nao#',
    'ncal': 'http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#',
    'nco': 'http://www.semanticdesktop.org/ontologies/2007/03/22/nco#',
    'ne': 'http://umbel.org/umbel/ne/',
    'net': 'http://www.w3.org/2007/uwa/context/network.owl#',
    'nexif': 'http://www.semanticdesktop.org/ontologies/2007/05/10/nexif#',
    'nfo': 'http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#',
    'ngeo': 'http://geovocab.org/geometry#',
    'nid3': 'http://www.semanticdesktop.org/ontologies/2007/05/10/nid3#',
    'nie': 'http://www.semanticdesktop.org/ontologies/2007/01/19/nie#',
    'nmo': 'http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#',
    'nndsr': 'http://semanticdiet.com/schema/usda/nndsr/',
    'nocal': 'http://vocab.deri.ie/nocal#',
    'nrl': 'http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#',
    'nsa': 'http://multimedialab.elis.ugent.be/organon/ontologies/ninsuna#',
    'nt': 'http://ns.inria.fr/nicetag/2010/09/09/voc#',
    'nuts': 'http://nuts.psi.enakting.org/id/BE335/doc/',
    'nytimes': 'http://data.nytimes.com/elements/',
    'oat': 'http://openlinksw.com/schemas/oat/',
    'oauth': 'http://demiblog.org/vocab/oauth#',
    'obj': 'http://www.openrdf.org/rdf/2009/object#',
    'obo': 'http://purl.obolibrary.org/obo/',
    'oboro': 'http://obofoundry.org/ro/ro.owl#',
    'oboso': 'http://purl.org/obo/owl/SO#',
    'oc': 'http://opencoinage.org/rdf/',
    'odp': 'http://ontologydesignpatterns.org/',
    'og': 'http://opengraphprotocol.org/schema/',
    'ogp': 'http://ogp.me/ns#',
    'ok': 'http://okkam.org/terms#',
    'okkam': 'http://models.okkam.org/ENS-core-vocabulary#',
    'olia': 'http://purl.org/olia/olia.owl#',
    'olo': 'http://purl.org/ontology/olo/core#',
    'omb': 'http://purl.org/ontomedia/ext/common/being#',
    'omc': 'http://purl.org/ontomedia/ext/common/bestiary#',
    'ome': 'http://purl.org/ontomedia/core/expression#',
    'omm': 'http://purl.org/ontomedia/core/media#',
    'omp': 'http://purl.org/ontomedia/ext/common/profession#',
    'omt': 'http://purl.org/ontomedia/ext/common/trait#',
    'oo': 'http://purl.org/openorg/',
    'openlinks': 'http://www.openlinksw.com/schemas/virtrdf#',
    'opensearch': 'http://a9.com/-/spec/opensearch/1.1/',
    'oper': 'http://sweet.jpl.nasa.gov/2.0/mathOperation.owl#',
    'opm': 'http://openprovenance.org/ontology#',
    'opmv': 'http://purl.org/net/opmv/ns#',
    'opo': 'http://online-presence.net/opo/ns#',
    'opus': 'http://lsdis.cs.uga.edu/projects/semdis/opus#',
    'opwn': 'http://www.ontologyportal.org/WordNet.owl#',
    'ore': 'http://www.openarchives.org/ore/terms/',
    'org': 'http://www.w3.org/ns/org#',
    'organism': 'http://eulersharp.sourceforge.net/2003/03swap/organism#',
    'organiz': 'http://eulersharp.sourceforge.net/2003/03swap/organization#',
    'os': 'http://www.w3.org/2000/10/swap/os#',
    'osag': 'http://www.ordnancesurvey.co.uk/ontology/AdministrativeGeography/v2.0/AdministrativeGeography.rdf#',
    'osgb': 'http://data.ordnancesurvey.co.uk/id/',
    'osoc': 'http://web-semantics.org/ns/opensocial#',
    'osukdt': 'http://www.ordnancesurvey.co.uk/ontology/Datatypes.owl#',
    'out': 'http://ontologies.hypios.com/out#',
    'ov': 'http://open.vocab.org/terms/',
    'overheid': 'http://standaarden.overheid.nl/owms/',
    'owl': 'http://www.w3.org/2002/07/owl#',
    'owlim': 'http://www.ontotext.com/trree/owlim#',
    'owls': 'http://www.daml.org/services/owl-s/1.2/Service.owl#',
    'owlse': 'http://www.daml.org/services/owl-s/1.2/generic/Expression.owl#',
    'p20': 'http://zbw.eu/beta/p20/vocab/',
    'p3p': 'http://www.w3.org/2002/01/p3prdfv1#',
    'payment': 'http://reference.data.gov.uk/def/payment#',
    'pbo': 'http://purl.org/ontology/pbo/core#',
    'pc': 'http://purl.org/procurement/public-contracts#',
    'pdo': 'http://ontologies.smile.deri.ie/pdo#',
    'pgterms': 'http://www.gutenberg.org/2009/pgterms/',
    'phil': 'http://philosurfical.open.ac.uk/ontology/philosurfical.owl#',
    'phss': 'http://ns.poundhill.com/phss/1.0/',
    'pimo': 'http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#',
    'ping': 'http://purl.org/net/pingback/',
    'place': 'http://purl.org/ontology/places/',
    'play': 'http://uriplay.org/spec/ontology/#',
    'plink': 'http://buzzword.org.uk/rdf/personal-link-types#',
    'pmlj': 'http://inference-web.org/2.0/pml-justification.owl#',
    'pmlp': 'http://inference-web.org/2.0/pml-provenance.owl#',
    'pmlr': 'http://inference-web.org/2.0/pml-relation.owl#',
    'pmlt': 'http://inference-web.org/2.0/pml-trust.owl#',
    'pmt': 'http://tipsy.googlecode.com/svn/trunk/vocab/pmt#',
    'pns': 'http://data.press.net/ontology/stuff/',
    'po': 'http://purl.org/ontology/po/',
    'pobo': 'http://purl.obolibrary.org/obo/',
    'pois': 'http://purl.oclc.org/POIS/vcblr#',
    'politico': 'http://www.rdfabout.com/rdf/schema/politico/',
    'pom': 'http://maven.apache.org/POM/4.0.0#',
    'pos': 'http://www.w3.org/2003/01/geo/wgs84_pos#',
    'posh': 'http://poshrdf.org/ns/posh/',
    'postcode': 'http://data.ordnancesurvey.co.uk/id/postcodeunit/',
    'powder': 'http://www.w3.org/2007/05/powder#',
    'ppo': 'http://vocab.deri.ie/ppo#',
    'pr': 'http://purl.org/ontology/prv/core#',
    'prism': 'http://prismstandard.org/namespaces/basic/2.0/',
    'prissma': 'http://ns.inria.fr/prissma/v1#',
    'prj': 'http://purl.org/stuff/project/',
    'product': 'http://purl.org/commerce/product#',
    'profiling': 'http://ontologi.es/profiling#',
    'prog': 'http://purl.org/prog/',
    'prot': 'http://www.proteinontology.info/po.owl#',
    'protege': 'http://protege.stanford.edu/system#',
    'protons': 'http://proton.semanticweb.org/2005/04/protons#',
    'prov': 'http://www.w3.org/ns/prov#',
    'provenir': 'http://knoesis.wright.edu/provenir/provenir.owl#',
    'prv': 'http://purl.org/net/provenance/ns#',
    'prvr': 'http://purl.org/ontology/prv/rules#',
    'prvtypes': 'http://purl.org/net/provenance/types#',
    'ps': 'https://w3id.org/payswarm#',
    'psh': 'http://psh.techlib.cz/skos/',
    'psych': 'http://purl.org/vocab/psychometric-profile/',
    'pto': 'http://www.productontology.org/id/',
    'ptr': 'http://www.w3.org/2009/pointers#',
    'puc': 'http://purl.org/NET/puc#',
    'puelia': 'http://kwijibo.talis.com/vocabs/puelia#',
    'push': 'http://www.w3.org/2007/uwa/context/push.owl#',
    'qb': 'http://purl.org/linked-data/cube#',
    'qdoslf': 'http://foaf.qdos.com/lastfm/schema/',
    'quak': 'http://dev.w3.org/cvsweb/2000/quacken/vocab#',
    'quantities': 'http://eulersharp.sourceforge.net/2003/03swap/quantitiesExtension#',
    'qudt': 'http://qudt.org/1.1/schema/qudt#',
    'r2r': 'http://www4.wiwiss.fu-berlin.de/bizer/r2r/',
    'rail': 'http://ontologi.es/rail/vocab#',
    'rdacarrier': 'http://rdvocab.info/termList/RDACarrierType/',
    'rdacontent': 'http://rdvocab.info/termList/RDAContentType/',
    'rdamedia': 'http://rdvocab.info/termList/RDAMediaType/',
    'rdb': 'http://www.dbs.cs.uni-duesseldorf.de/RDF/relational#',
    'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
    'rdfa': 'http://www.w3.org/ns/rdfa#',
    'rdfdata': 'http://rdf.data-vocabulary.org/rdf.xml#',
    'rdfdf': 'http://www.openlinksw.com/virtrdf-data-formats#',
    'rdfg': 'http://www.w3.org/2004/03/trix/rdfg-1/',
    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
    'rdo': 'http://purl.org/rdo/ns#',
    're': 'http://www.w3.org/2000/10/swap/reason#',
    'rec': 'http://purl.org/ontology/rec/core#',
    'reco': 'http://purl.org/reco#',
    'ref': 'http://purl.org/vocab/relationship/',
    'rei': 'http://www.w3.org/2004/06/rei#',
    'rel': 'http://purl.org/vocab/relationship/',
    'remus': 'http://www.semanticweb.org/ontologies/2010/6/Ontology1279614123500.owl#',
    'rep': 'http://www.openrdf.org/config/repository#',
    'req': 'http://purl.org/req/',
    'res': 'http://www.w3.org/2005/sparql-results#',
    'resex': 'http://resex.rkbexplorer.com/ontologies/resex#',
    'resist': 'http://www.rkbexplorer.com/ontologies/resist#',
    'resource': 'http://purl.org/vocab/resourcelist/schema#',
    'rev': 'http://purl.org/stuff/rev#',
    'rich': 'http://rdf.data-vocabulary.org/',
    'rif': 'http://www.w3.org/2007/rif#',
    'rnews': 'http://iptc.org/std/rNews/2011-10-07#',
    'ro': 'http://purl.org/wf4ever/ro#',
    'room': 'http://vocab.deri.ie/rooms#',
    'rooms': 'http://vocab.deri.ie/rooms#',
    'rpubl': 'http://rinfo.lagrummet.se/ns/2008/11/rinfo/publ#',
    'rr': 'http://www.w3.org/ns/r2rml#',
    'rsa': 'http://www.w3.org/ns/auth/rsa#',
    'rss': 'http://purl.org/rss/1.0/',
    'rulz': 'http://purl.org/NET/rulz#',
    'rv': 'http://wifo-ravensburg.de/semanticweb.rdf#',
    's2s': 'http://escience.rpi.edu/ontology/sesf/s2s/4/0/',
    's3db': 'http://www.s3db.org/core#',
    's4ac': 'http://ns.inria.fr/s4ac/v2#',
    'sail': 'http://www.openrdf.org/config/sail#',
    'sawsdl': 'http://www.w3.org/ns/sawsdl#',
    'saxon': 'http://saxon.sf.net/',
    'sc': 'http://purl.org/science/owl/sciencecommons/',
    'schema': 'http://schema.org/',
    'sco': 'http://purl.org/ontology/sco#',
    'scot': 'http://rdfs.org/scot/ns#',
    'scovo': 'http://purl.org/NET/scovo#',
    'scowt': 'http://purl.org/weso/ontologies/scowt#',
    'scsv': 'http://purl.org/NET/schema-org-csv#',
    'scv': 'http://purl.org/NET/scovo#',
    'sd': 'http://www.w3.org/ns/sparql-service-description#',
    'sdl': 'http://purl.org/vocab/riro/sdl#',
    'sdmx': 'http://purl.org/linked-data/sdmx#',
    'sdmxdim': 'http://purl.org/linked-data/sdmx/2009/dimension#',
    'search': 'http://sindice.com/vocab/search#',
    'sec': 'https://w3id.org/security#',
    'sede': 'http://eventography.org/sede/0.1/',
    'semtweet': 'http://semantictweet.com/',
    'sesame': 'http://www.openrdf.org/schema/sesame#',
    'session': 'http://redfoot.net/2005/session#',
    'shv': 'http://ns.aksw.org/spatialHierarchy/',
    'sider': 'http://www4.wiwiss.fu-berlin.de/sider/resource/sider/',
    'sig': 'http://purl.org/signature#',
    'sim': 'http://purl.org/ontology/similarity/',
    'sindice': 'http://vocab.sindice.net/',
    'sio': 'http://semanticscience.org/resource/',
    'sioc': 'http://rdfs.org/sioc/ns#',
    'sioca': 'http://rdfs.org/sioc/actions#',
    'sioct': 'http://rdfs.org/sioc/types#',
    'sioctypes': 'http://rdfs.org/sioc/types#',
    'sism': 'http://purl.oclc.org/NET/sism/0.1/',
    'sit': 'http://www.ontologydesignpatterns.org/cp/owl/situation.owl#',
    'skip': 'http://skipforward.net/skipforward/resource/',
    'skiresort': 'http://www.openlinksw.com/ski_resorts/schema#',
    'skos': 'http://www.w3.org/2004/02/skos/core#',
    'skosxl': 'http://www.w3.org/2008/05/skos-xl#',
    'sl': 'http://www.semanlink.net/2001/00/semanlink-schema#',
    'sm': 'http://topbraid.org/sparqlmotion#',
    'smf': 'http://topbraid.org/sparqlmotionfunctions#',
    'smiley': 'http://www.smileyontology.com/ns#',
    'sml': 'http://topbraid.org/sparqlmotionlib#',
    'so': 'http://purl.org/ontology/symbolic-music/',
    'soap': 'http://www.w3.org/2003/05/soap-envelope/',
    'soft': 'http://www.w3.org/2007/uwa/context/software.owl#',
    'sp': 'http://spinrdf.org/sp#',
    'space': 'http://purl.org/net/schemas/space/',
    'spacerel': 'http://data.ordnancesurvey.co.uk/ontology/spatialrelations/',
    'span': 'http://www.ifomis.org/bfo/1.1/span#',
    'sparql': 'http://ontologi.es/sparql#',
    'spatial': 'http://geovocab.org/spatial#',
    'spc': 'http://purl.org/ontomedia/core/space#',
    'spin': 'http://spinrdf.org/spin#',
    'spl': 'http://spinrdf.org/spl#',
    'sport': 'http://www.bbc.co.uk/ontologies/sport/',
    'sr': 'http://www.openrdf.org/config/repository/sail#',
    'sso': 'http://nlp2rdf.lod2.eu/schema/sso/',
    'states': 'http://www.w3.org/2005/07/aaa#',
    'status': 'http://ontologi.es/status#',
    'steel': 'http://ontorule-project.eu/resources/steel-30#',
    'str': 'http://nlp2rdf.lod2.eu/schema/string/',
    'string': 'http://www.w3.org/2000/10/swap/string#',
    'sv': 'http://schemas.talis.com/2005/service/schema#',
    'swanag': 'http://purl.org/swan/1.2/agents/',
    'swanci': 'http://purl.org/swan/1.2/citations/',
    'swanco': 'http://purl.org/swan/1.2/swan-commons/',
    'swande': 'http://purl.org/swan/1.2/discourse-elements/',
    'swandr': 'http://purl.org/swan/1.2/discourse-relationships/',
    'swanpav': 'http://purl.org/swan/1.2/pav/',
    'swanq': 'http://purl.org/swan/1.2/qualifiers/',
    'swanqs': 'http://purl.org/swan/1.2/qualifiers/',
    'swc': 'http://data.semanticweb.org/ns/swc/ontology#',
    'swh': 'http://plugin.org.uk/swh-plugins/',
    'swid': 'http://semanticweb.org/id/',
    'swivt': 'http://semantic-mediawiki.org/swivt/1.0#',
    'swp': 'http://www.w3.org/2004/03/trix/swp-2/',
    'swrc': 'http://swrc.ontoware.org/ontology#',
    'swrl': 'http://www.w3.org/2003/11/swrl#',
    'swrlb': 'http://www.w3.org/2003/11/swrlb#',
    'sysont': 'http://ns.ontowiki.net/SysOnt/',
    'tag': 'http://www.holygoat.co.uk/owl/redwood/0.1/tags/',
    'tags': 'http://www.holygoat.co.uk/owl/redwood/0.1/tags/',
    'tarot': 'http://data.totl.net/tarot/card/',
    'taxo': 'http://purl.org/rss/1.0/modules/taxonomy/',
    'tblcard': 'http://www.w3.org/People/Berners-Lee/card#',
    'tdb': 'http://jena.hpl.hp.com/2008/tdb#',
    'teach': 'http://linkedscience.org/teach/ns#',
    'tei': 'http://www.tei-c.org/ns/1.0/',
    'telix': 'http://purl.org/telix#',
    'telmap': 'http://purl.org/telmap/',
    'test': 'http://test2.example.com/',
    'test2': 'http://this.invalid/test2#',
    'theatre': 'http://purl.org/theatre#',
    'ti': 'http://www.ontologydesignpatterns.org/cp/owl/timeinterval.owl#',
    'time': 'http://www.w3.org/2006/time#',
    'timeline': 'http://purl.org/NET/c4dm/timeline.owl#',
    'tio': 'http://purl.org/tio/ns#',
    'tl': 'http://purl.org/NET/c4dm/timeline.owl#',
    'tmo': 'http://www.semanticdesktop.org/ontologies/2008/05/20/tmo#',
    'tmpl': 'http://purl.org/restdesc/http-template#',
    'toby': 'http://tobyinkster.co.uk/#',
    'trackback': 'http://madskills.com/public/xml/rss/module/trackback/',
    'transmed': 'http://www.w3.org/2001/sw/hcls/ns/transmed/',
    'tripfs': 'http://purl.org/tripfs/2010/02#',
    'tripfs2': 'http://purl.org/tripfs/2010/06#',
    'ttl': 'http://www.w3.org/2008/turtle#',
    'txn': 'http://lod.taxonconcept.org/ontology/txn.owl#',
    'tzont': 'http://www.w3.org/2006/timezone#',
    'ufmedia': 'http://purl.org/microformat/hmedia/',
    'ui': 'http://www.w3.org/ns/ui#',
    'umbel': 'http://umbel.org/umbel#',
    'umbelrc': 'http://umbel.org/umbel/rc/',
    'uni': 'http://purl.org/weso/uni/uni.html#',
    'uniprot': 'http://purl.uniprot.org/core/',
    'unit': 'http://qudt.org/vocab/unit#',
    'units': 'http://eulersharp.sourceforge.net/2003/03swap/unitsExtension#',
    'user': 'http://schemas.talis.com/2005/user/schema#',
    'usgov': 'http://www.rdfabout.com/rdf/schema/usgovt/',
    'uta': 'http://uptheasset.org/ontology#',
    'vaem': 'http://www.linkedmodel.org/schema/vaem#',
    'vann': 'http://purl.org/vocab/vann/',
    'vcard': 'http://www.w3.org/2006/vcard/ns#',
    'vcard2006': 'http://www.w3.org/2006/vcard/ns#',
    'vcardx': 'http://buzzword.org.uk/rdf/vcardx#',
    'vdpp': 'http://data.lirmm.fr/ontologies/vdpp#',
    'video': 'http://purl.org/media/video#',
    'visko': 'http://trust.utep.edu/visko/ontology/visko-operator-v3.owl#',
    'viskoo': 'http://trust.utep.edu/visko/ontology/visko-operator-v3.owl#',
    'viskov': 'http://trust.utep.edu/visko/ontology/visko-view-v3.owl#',
    'vitro': 'http://vitro.mannlib.cornell.edu/ns/vitro/public#',
    'vivo': 'http://vivoweb.org/ontology/core#',
    'voaf': 'http://purl.org/vocommons/voaf#',
    'voag': 'http://voag.linkedmodel.org/schema/voag#',
    'void': 'http://rdfs.org/ns/void#',
    'vote': 'http://www.rdfabout.com/rdf/schema/vote/',
    'vs': 'http://www.w3.org/2003/06/sw-vocab-status/ns#',
    'vso': 'http://purl.org/vso/ns#',
    'vsto': 'http://escience.rpi.edu/ontology/vsto/2/0/vsto.owl#',
    'w3con': 'http://www.w3.org/2000/10/swap/pim/contact#',
    'w3p': 'http://prov4j.org/w3p/',
    'wai': 'http://purl.org/wai#',
    'wairole': 'http://www.w3.org/2005/01/wai-rdf/GUIRoleTaxonomy#',
    'wao': 'http://webtlab.it.uc3m.es/2010/10/WebAppsOntology#',
    'water': 'http://escience.rpi.edu/ontology/semanteco/2/0/water.owl#',
    'wdr': 'http://www.w3.org/2007/05/powder#',
    'wdrs': 'http://www.w3.org/2007/05/powder-s#',
    'web': 'http://www.w3.org/2007/uwa/context/web.owl#',
    'webtlab': 'http://webtlab.it.uc3m.es/',
    'wf': 'http://www.w3.org/2005/01/wf/flow#',
    'wgs': 'http://www.w3.org/2003/01/geo/wgs84_pos#',
    'wgs84': 'http://www.w3.org/2003/01/geo/wgs84_pos#',
    'wgspos': 'http://www.w3.org/2003/01/geo/wgs84_pos#',
    'whois': 'http://www.kanzaki.com/ns/whois#',
    'wisski': 'http://wiss-ki.eu/',
    'wlp': 'http://weblab-project.org/core/model/property/processing/',
    'wm': 'http://ns.inria.fr/webmarks#',
    'wn': 'http://xmlns.com/wordnet/1.6/',
    'wn20schema': 'http://www.w3.org/2006/03/wn/wn20/schema/',
    'wnschema': 'http://www.cogsci.princeton.edu/~wn/schema/',
    'wo': 'http://purl.org/ontology/wo/',
    'wordmap': 'http://purl.org/net/ns/wordmap#',
    'wordnet': 'http://purl.org/vocabularies/princeton/wordnet/schema#',
    'wot': 'http://xmlns.com/wot/0.1/',
    'wsc': 'http://www.openk.org/wscaim.owl#',
    'wv': 'http://vocab.org/waiver/terms/',
    'xbrli': 'http://www.xbrl.org/2003/instance#',
    'xch': 'http://oanda2rdf.appspot.com/xch/',
    'xen': 'http://buzzword.org.uk/rdf/xen#',
    'xesam': 'http://freedesktop.org/standards/xesam/1.0/core#',
    'xf': 'http://www.w3.org/2002/xforms/',
    'xfn': 'http://gmpg.org/xfn/11#',
    'xfnv': 'http://vocab.sindice.com/xfn#',
    'xforms': 'http://www.w3.org/2002/xforms/',
    'xhe': 'http://buzzword.org.uk/rdf/xhtml-elements#',
    'xhtml': 'http://www.w3.org/1999/xhtml#',
    'xhtmlvocab': 'http://www.w3.org/1999/xhtml/vocab/',
    'xhv': 'http://www.w3.org/1999/xhtml/vocab#',
    'xl': 'http://langegger.at/xlwrap/vocab#',
    'xlink': 'http://www.w3.org/1999/xlink/',
    'xro': 'http://purl.org/xro/ns#',
    'xsd': 'http://www.w3.org/2001/XMLSchema#',
    'xsl': 'http://www.w3.org/1999/XSL/Transform#',
    'xt': 'http://purl.org/twc/vocab/cross-topix#',
    'xtypes': 'http://purl.org/xtypes/',
    'ya': 'http://blogs.yandex.ru/schema/foaf/',
    'yago': 'http://yago-knowledge.org/resource/',
    'yoda': 'http://purl.org/NET/yoda#',
    'zbwext': 'http://zbw.eu/namespaces/zbw-extensions/',
    'zem': 'http://s.zemanta.com/ns#',
    'zoology': 'http://purl.org/NET/biol/zoology#',
    'daiaserv': 'http://purl.org/ontology/daia/Service/',
    'vvo': 'http://purl.org/vvo/ns#',
    'vsw': 'http://verticalsearchworks.com/ontology/',
    'gnd': 'http://d-nb.info/gnd/',
    'grs': 'http://www.georss.org/georss/',
    'htir': 'http://www.w3.org/2011/http#',
    'infosys': 'http://www.infosys.com/',
    'muto': 'http://purl.org/muto/core#',
    'omapi': 'http://purl.org/omapi/0.2/#',
    'prf': 'http://www.openmobilealliance.org/tech/profiles/UAPROF/ccppschema-20021212#',
    'webbox': 'http://webbox.ecs.soton.ac.uk/ns#',
    'calli': 'http://callimachusproject.org/rdf/2009/framework#',
    'dwc': 'http://rs.tdwg.org/dwc/terms/',
    'eunis': 'http://eunis.eea.europa.eu/rdf/species-schema.rdf#',
    'georss': 'http://www.georss.org/georss/',
    'pna': 'http://data.press.net/ontology/asset/',
    'swpatho': 'http://swpatho.ag-nbi.de/context/meta.owl#',
    'voidp': 'http://www.enakting.org/provenance/voidp/',
    'arecipe': 'http://purl.org/amicroformat/arecipe/',
    'cis': 'http://purl.org/NET/cloudisus#',
    'datafaqs': 'http://purl.org/twc/vocab/datafaqs#',
    'db': 'http://dbpedia.org/',
    'ends': 'http://labs.mondeca.com/vocab/endpointStatus#',
    'identity': 'http://purl.org/twc/ontologies/identity.owl#',
    'italy': 'http://data.kasabi.com/dataset/italy/schema/',
    'jita': 'http://aims.fao.org/aos/jita/',
    'moby': 'http://www.mygrid.org.uk/mygrid-moby-service#',
    'np': 'http://www.nanopub.org/nschema#',
    'ocd': 'http://dati.camera.it/ocd/',
    'places': 'http://purl.org/ontology/places#',
    'protegedc': 'http://protege.stanford.edu/plugins/owl/dc/protege-dc.owl#',
    'transit': 'http://vocab.org/transit/terms/',
    'vsr': 'http://purl.org/twc/vocab/vsr#',
    'wfdesc': 'http://purl.org/wf4ever/wfdesc#',
    'wikipedia': 'http://www.systemone.at/2006/03/wikipedia#',
    'aerols': 'http://xmlns.com/aerols/0.1/',
    'carfo': 'http://purl.org/carfo#',
    'cerif': 'http://spi-fm.uca.es/neologism/cerif#',
    'cheminf': 'http://www.semanticweb.org/ontologies/cheminf.owl#',
    'cts2': 'http://schema.omg.org/spec/CTS2/1.0/',
    'example': 'http://www.example.org/rdf#',
    'func': 'http://www.w3.org/2007/rif-builtin-function#',
    'geom': 'http://geovocab.org/geometry#',
    'gldp': 'http://www.w3.org/ns/people#',
    'goef': 'http://purl.org/twc/vocab/goef#',
    'hg': 'http://www.holygoat.co.uk/owl/redwood/0.1/tags/',
    'ipad': 'http://www.padinthecity.com/',
    'isbd': 'http://iflastandards.info/ns/isbd/elements/',
    'kupkb': 'http://www.e-lico.eu/data/kupkb/',
    'lexvo': 'http://lexvo.org/ontology#',
    'lr': 'http://linkedrecipes.org/schema/',
    'lv': 'http://purl.org/lobid/lv#',
    'marcrel': 'http://id.loc.gov/vocabulary/relators/',
    'metalex': 'http://www.metalex.eu/schema/1.0#',
    'mohammad': 'http://manesht.ir/',
    'npg': 'http://ns.nature.com/terms/',
    'nsogi': 'http://prefix.cc/nsogi:',
    'oac': 'http://www.openannotation.org/ns/',
    'ogorg': 'http://opengraph.org/schema/',
    'omv': 'http://omv.ontoware.org/2005/05/ontology#',
    'onssprel': 'http://www.ordnancesurvey.co.uk/ontology/SpatialRelations/v0.2/SpatialRelations.owl#',
    'ospost': 'http://data.ordnancesurvey.co.uk/ontology/postcode/',
    'pay': 'http://reference.data.gov.uk/def/payment#',
    'pf': 'http://jena.hpl.hp.com/ARQ/property#',
    'pne': 'http://data.press.net/ontology/event/',
    'prism21': 'http://prismstandard.org/namespaces/basic/2.1/',
    'pro': 'http://purl.org/hpi/patchr#',
    'prviv': 'http://purl.org/net/provenance/integrity#',
    'ql': 'http://www.w3.org/2004/ql#',
    'r2rml': 'http://www.w3.org/ns/r2rml#',
    'rating': 'http://www.tvblob.com/ratings/#',
    'recipe': 'http://linkedrecipes.org/schema/',
    'scufl2': 'http://ns.taverna.org.uk/2010/scufl2#',
    'ssn': 'http://purl.oclc.org/NET/ssnx/ssn#',
    'vapour': 'http://vapour.sourceforge.net/vocab.rdf#',
    'vsws': 'http://verticalsearchworks.com/ontology/synset#',
    'wbc': 'http://worldbank.270a.info/classification/',
    'wbp': 'http://worldbank.270a.info/property/',
    'wkd': 'http://schema.wolterskluwer.de/',
    'wp': 'http://vocabularies.wikipathways.org/',
    'wscaim': 'http://www.openk.org/wscaim.owl#',
    'xkos': 'http://rdf-vocabulary.ddialliance.org/xkos#',
    'd2r': 'http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#',
    'efo': 'http://www.ebi.ac.uk/efo/',
    'enhancer': 'http://stanbol.apache.org/ontology/enhancer/enhancer#',
    'fcm': 'http://eulersharp.sourceforge.net/2006/02swap/fcm#',
    'fise': 'http://fise.iks-project.eu/ontology/',
    'fl': 'http://eulersharp.sourceforge.net/2003/03swap/fl-rules#',
    'fls': 'http://lukasblaho.sk/football_league_schema#',
    'oboe': 'http://ecoinformatics.org/oboe/oboe.1.0/oboe-core.owl#',
    'pccz': 'http://purl.org/procurement/public-contracts-czech#',
    'rdrel': 'http://rdvocab.info/RDARelationshipsWEMI/',
    'rec54': 'http://www.w3.org/2001/02pd/rec54.rdf#',
    'acco': 'http://purl.org/acco/ns#',
    'admssw': 'http://purl.org/adms/sw/',
    'aers': 'http://aers.data2semantics.org/resource/',
    'arg': 'http://rdfs.org/sioc/argument#',
    'br': 'http://vocab.deri.ie/br#',
    'cao': 'http://purl.org/makolab/caont/',
    'cogs': 'http://vocab.deri.ie/cogs#',
    'dive': 'http://scubadive.networld.to/dive.rdf#',
    'dpl': 'http://dbpedialite.org/things/',
    'eprints': 'http://eprints.org/ontology/',
    'eumida': 'http://data.kasabi.com/dataset/eumida/terms/',
    'germplasm': 'http://purl.org/germplasm/terms#',
    'intervals': 'http://reference.data.gov.uk/def/intervals/',
    'lctr': 'http://data.linkedct.org/vocab/resource/',
    'lemon': 'http://lemon-model.net/lemon#',
    'library': 'http://purl.org/library/',
    'life': 'http://life.deri.ie/schema/',
    'marl': 'http://www.gsi.dit.upm.es/ontologies/marl/ns#',
    'muni': 'http://vocab.linkeddata.es/urbanismo-infraestructuras/territorio#',
    'ncbitaxon': 'http://purl.org/obo/owl/NCBITaxon#',
    'no': 'http://km.aifb.kit.edu/projects/numbers/number#',
    'npgd': 'http://ns.nature.com/datasets/',
    'npgg': 'http://ns.nature.com/graphs/',
    'npgx': 'http://ns.nature.com/extensions/',
    'open': 'http://open.vocab.org/terms/',
    'pav': 'http://purl.org/pav/',
    'pkmn': 'http://pokedex.dataincubator.org/pkm/',
    'pml': 'http://provenanceweb.org/ns/pml#',
    'poder': 'http://poderopedia.com/vocab/',
    'pol': 'http://escience.rpi.edu/ontology/semanteco/2/0/pollution.owl#',
    'r4ta': 'http://ns.inria.fr/ratio4ta/v1#',
    'rda': 'http://www.rdaregistry.info/',
    'rdagr1': 'http://rdvocab.info/Elements/',
    'rssynd': 'http://web.resource.org/rss/1.0/modules/syndication/',
    'sdgp': 'http://stats.data-gov.ie/property/',
    'set': 'http://www.w3.org/2000/10/swap/set#',
    'sgv': 'http://www.w3.org/TR/SVG/',
    'spif': 'http://spinrdf.org/spif#',
    'tcga': 'http://purl.org/tcga/core#',
    'mpeg7': 'http://rhizomik.net/ontologies/2005/03/Mpeg7-2001.owl#',
    'myprefix': 'http://myprefix.org/',
    'ngeoi': 'http://vocab.lenka.no/geo-deling#',
    'okg': 'http://openknowledgegraph.org/ontology/',
    'flow': 'http://www.w3.org/2005/01/wf/flow#',
    'osmsemnet': 'http://spatial.ucd.ie/2012/08/osmsemnet/',
    'wfprov': 'http://purl.org/wf4ever/wfprov#',
    'category': 'http://dbpedia.org/resource/Category:',
    'ero': 'http://purl.obolibrary.org/obo/',
    'interval': 'http://reference.data.gov.uk/def/intervals/',
    'adms': 'http://www.w3.org/ns/adms#',
    'aersv': 'http://aers.data2semantics.org/vocab/',
    'agg': 'http://purl.org/twc/health/vocab/aggregate/',
    'apivc': 'http://purl.org/linked-data/api/vocab#',
    'arpfo': 'http://vocab.ouls.ox.ac.uk/projectfunding#',
    'asn': 'http://purl.org/ASN/schema/core/',
    'atomrdf': 'http://atomowl.org/ontologies/atomrdf#',
    'b2bo': 'http://purl.org/b2bo#',
    'bd': 'http://www.bigdata.com/rdf#',
    'bing': 'http://bing.com/schema/media/',
    'biopax': 'http://www.biopax.org/release/biopax-level3.owl#',
    'bne': 'http://datos.bne.es/resource/',
    'bp': 'http://open-services.net/ns/basicProfile#',
    'bte': 'http://purl.org/twc/vocab/between-the-edges/',
    'cidoccrm': 'http://purl.org/NET/cidoc-crm/core#',
    'daisy': 'http://www.daisy.org/z3998/2012/vocab/',
    'dce': 'http://purl.org/dc/elements/1.1/',
    'dco': 'http://info.deepcarbon.net/schema#',
    'dcr': 'http://www.isocat.org/ns/dcr.rdf#',
    'disco': 'http://rdf-vocabulary.ddialliance.org/discovery#',
    'dita': 'http://purl.org/dita/ns#',
    'dnb': 'http://d-nb.info/gnd/',
    'dsp': 'http://purl.org/metainfo/terms/dsp#',
    'dssn': 'http://purl.org/net/dssn/',
    'ekaw': 'http://data.semanticweb.org/conference/ekaw/2012/complete/',
    'ens': 'http://models.okkam.org/ENS-core-vocabulary.owl#',
    'eseduc': 'http://www.purl.org/ontologia/eseduc#',
    'fd': 'http://foodable.co/ns/',
    'food': 'http://purl.org/foodontology#',
    'fos': 'http://futurios.org/fos/spec/',
    'gawd': 'http://gawd.atlantides.org/terms/',
    'genea': 'http://www.owl-ontologies.com/generations.owl#',
    'geocontext': 'http://www.geocontext.org/publ/2013/vocab#',
    'gsp': 'http://www.opengis.net/ont/geosparql#',
    'gxa': 'http://www.ebi.ac.uk/gxa/',
    'health': 'http://purl.org/twc/health/vocab/',
    'hgnc': 'http://bio2rdf.org/hgnc:',
    'icaltzd': 'http://www.w3.org/2002/12/cal/icaltzd#',
    'idemo': 'http://rdf.insee.fr/def/demo#',
    'igeo': 'http://rdf.insee.fr/def/geo#',
    'jjd': 'http://www.joshuajeeson.com/',
    'kdo': 'http://kdo.render-project.eu/kdo#',
    'l4a': 'http://labels4all.info/ns/',
    'laposte': 'http://data.lirmm.fr/ontologies/laposte#',
    'ldp': 'http://www.w3.org/ns/ldp#',
    'lex': 'http://purl.org/lex#',
    'lyou': 'http://purl.org/linkingyou/',
    'marshall': 'http://sites.google.com/site/xgmaitc/',
    'md': 'http://www.w3.org/ns/md#',
    'nxp': 'http://purl.org/nxp/schema/v1/',
    'oa': 'http://www.w3.org/ns/oa#',
    'oarj': 'http://opendepot.org/reference/linked/1.0/',
    'oax': 'http://www.w3.org/ns/openannotation/extensions/',
    'osn': 'http://spatial.ucd.ie/lod/osn/',
    'owltime': 'http://www.w3.org/TR/owl-time#',
    'particip': 'http://purl.org/vocab/participation/schema#',
    'person': 'http://www.w3.org/ns/person#',
    'photoshop': 'http://ns.adobe.com/photoshop/1.0/',
    'pingback': 'http://purl.org/net/pingback/',
    'prefix': 'http://prefix.cc/',
    'pronom': 'http://reference.data.gov.uk/technical-registry/',
    'qa': 'http://www.mit.jyu.fi/ai/TRUST_Ontologies/QA.owl#',
    'qud': 'http://qudt.org/1.1/schema/qudt#',
    'rad': 'http://www.w3.org/ns/rad#',
    'rov': 'http://www.w3.org/ns/regorg#',
    'ssso': 'http://purl.org/ontology/ssso#',
    'strdf': 'http://strdf.di.uoa.gr/ontology#',
    'tisc': 'http://observedchange.com/tisc/ns#',
    'uco': 'http://purl.org/uco/ns#',
    'viaf': 'http://viaf.org/ontology/1.1/#',
    'visit': 'http://purl.org/net/vocab/2004/07/visit#',
    'w3po': 'http://purl.org/provenance/w3p/w3po#',
    'wn20': 'http://www.w3.org/2006/03/wn/wn20/',
    'xmls': 'http://www.w3.org/2001/XMLSchema#',
    'agls': 'http://www.agls.gov.au/agls/terms/',
    'agrelon': 'http://d-nb.info/standards/elementset/agrelon#',
    'aigp': 'http://swat.cse.lehigh.edu/resources/onto/aigp.owl#',
    'aos': 'http://rdf.muninn-project.org/ontologies/appearances#',
    'api': 'http://purl.org/linked-data/api/vocab#',
    'being': 'http://purl.org/ontomedia/ext/common/being#',
    'bf': 'http://bibframe.org/vocab/',
    'bif': 'http://www.openlinksw.com/schemas/bif#',
    'biotop': 'http://purl.org/biotop/biotop.owl#',
    'biro': 'http://purl.org/spar/biro/',
    'cb': 'http://cbasewrap.ontologycentral.com/vocab#',
    'cgov': 'http://reference.data.gov.uk/def/central-government/',
    'city': 'http://datos.localidata.com/def/City#',
    'cold': 'http://purl.org/configurationontology#',
    'coll': 'http://purl.org/co/',
    'comm': 'http://vocab.resc.info/communication#',
    'coun': 'http://www.daml.org/2001/09/countries/iso-3166-ont#',
    'cpa': 'http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#',
    'crsw': 'http://courseware.rkbexplorer.com/ontologies/courseware#',
    'csp': 'http://vocab.deri.ie/csp#',
    'ctorg': 'http://purl.org/ctic/infraestructuras/organizacion#',
    'dbtont': 'http://dbtropes.org/ont/',
    'dcite': 'http://purl.org/spar/datacite/',
    'dcndl': 'http://ndl.go.jp/dcndl/terms/',
    'deo': 'http://purl.org/spar/deo/',
    'dl': 'http://ontology.ip.rm.cnr.it/ontologies/DOLCE-Lite#',
    'doco': 'http://purl.org/spar/doco/',
    'dqm': 'http://purl.org/dqm-vocabulary/v1/dqm#',
    'dr': 'http://purl.org/swan/2.0/discourse-relationships/',
    'drm': 'http://vocab.data.gov/def/drm#',
    'ds': 'http://purl.org/ctic/dcat#',
    'dso': 'http://purl.org/ontology/dso#',
    'ecos': 'http://kmm.lboro.ac.uk/ecos/1.0#',
    'edgar': 'http://edgarwrap.ontologycentral.com/vocab/edgar#',
    'elec': 'http://purl.org/ctic/sector-publico/elecciones#',
    'emp': 'http://purl.org/ctic/empleo/oferta#',
    'ep': 'http://eprints.org/ontology/',
    'fcp': 'http://www.newmedialab.at/fcp/',
    'fowl': 'http://www.w3.org/TR/2003/PR-owl-guide-20031209/food#',
    'gadm': 'http://gadm.geovocab.org/ontology#',
    'gastro': 'http://www.ebsemantics.net/gastro#',
    'geod': 'http://vocab.lenka.no/geo-deling#',
    'geosp': 'http://rdf.geospecies.org/ont/geospecies#',
    'gnm': 'http://www.geonames.org/ontology/mappings/',
    'graffle': 'http://purl.org/twc/vocab/vsr/graffle#',
    'graves': 'http://rdf.muninn-project.org/ontologies/graves#',
    'gso': 'http://www.w3.org/2006/gen/ont#',
    'infor': 'http://www.ontologydesignpatterns.org/cp/owl/informationrealization.owl#',
    'inno': 'http://purl.org/innovation/ns#',
    'iol': 'http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#',
    'itsmo': 'http://ontology.it/itsmo/v1#',
    'lcy': 'http://purl.org/vocab/lifecycle/schema#',
    'lh': 'http://vocab.inf.ed.ac.uk/library/holdings#',
    'lingvo': 'http://www.lingvoj.org/ontology#',
    'lmm1': 'http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#',
    'lmm2': 'http://www.ontologydesignpatterns.org/ont/lmm/LMM_L2.owl#',
    'lsc': 'http://linkedscience.org/lsc/ns#',
    'mads': 'http://www.loc.gov/mads/rdf/v1#',
    'mds': 'http://doc.metalex.eu/id/',
    'meb': 'http://rdf.myexperiment.org/ontologies/base/',
    'mil': 'http://rdf.muninn-project.org/ontologies/military#',
    'mime': 'http://purl.org/NET/mediatypes/',
    'moac': 'http://observedchange.com/moac/ns#',
    'mrel': 'http://id.loc.gov/vocabulary/relators/',
    'msr': 'http://www.telegraphis.net/ontology/measurement/measurement#',
    'mvco': 'http://purl.oclc.org/NET/mvco.owl#',
    'ntag': 'http://ns.inria.fr/nicetag/2010/09/09/voc#',
    'nyt': 'http://data.nytimes.com/',
    'obsm': 'http://rdf.geospecies.org/methods/observationMethod#',
    'odapp': 'http://vocab.deri.ie/odapp#',
    'odpart': 'http://www.ontologydesignpatterns.org/cp/owl/participation.owl#',
    'odv': 'http://reference.data.gov.uk/def/organogram/',
    'oecc': 'http://www.oegov.org/core/owl/cc#',
    'ontopic': 'http://www.ontologydesignpatterns.org/ont/dul/ontopic.owl#',
    'opl': 'http://openlinksw.com/schema/attribution#',
    'opmo': 'http://openprovenance.org/model/opmo#',
    'oprovo': 'http://openprovenance.org/ontology#',
    'ordf': 'http://purl.org/NET/ordf/',
    'osadm': 'http://data.ordnancesurvey.co.uk/ontology/admingeo/',
    'osgeom': 'http://data.ordnancesurvey.co.uk/ontology/geometry/',
    'osp': 'http://data.lirmm.fr/ontologies/osp#',
    'osr': 'http://dati.senato.it/osr/',
    'osspr': 'http://data.ordnancesurvey.co.uk/ontology/spatialrelations/',
    'ostop': 'http://www.ordnancesurvey.co.uk/ontology/Topography/v0.1/Topography.owl#',
    'part': 'http://purl.org/vocab/participation/schema#',
    'passim': 'http://data.lirmm.fr/ontologies/passim#',
    'prvt': 'http://purl.org/net/provenance/types#',
    'pso': 'http://purl.org/spar/pso/',
    'ptop': 'http://www.ontotext.com/proton/protontop#',
    'pwo': 'http://purl.org/spar/pwo/',
    'quty': 'http://www.telegraphis.net/ontology/measurement/quantity#',
    'raul': 'http://vocab.deri.ie/raul#',
    'rdafrbr': 'http://rdvocab.info/uri/schema/FRBRentitiesRDA/',
    'rdag1': 'http://rdvocab.info/Elements/',
    'rdag3': 'http://rdvocab.info/ElementsGr3/',
    'rdarel': 'http://rdvocab.info/RDARelationshipsWEMI/',
    'semio': 'http://www.lingvoj.org/semio#',
    'seq': 'http://www.ontologydesignpatterns.org/cp/owl/sequence.owl#',
    'situ': 'http://www.ontologydesignpatterns.org/cp/owl/situation.owl#',
    'snarm': 'http://rdf.myexperiment.org/ontologies/snarm/',
    'spt': 'http://spitfire-project.eu/ontology/ns/',
    'swpo': 'http://sw-portal.deri.org/ontologies/swportal#',
    'tao': 'http://vocab.deri.ie/tao#',
    'te': 'http://www.w3.org/2006/time-entry#',
    'tis': 'http://www.ontologydesignpatterns.org/cp/owl/timeindexedsituation.owl#',
    'trait': 'http://contextus.net/ontology/ontomedia/ext/common/trait#',
    'turismo': 'http://idi.fundacionctic.org/cruzar/turismo#',
    'tvc': 'http://www.essepuntato.it/2012/04/tvc/',
    'vocab': 'http://rdf.ontology2.com/vocab#',
    'vrank': 'http://purl.org/voc/vrank#',
    'wlo': 'http://purl.org/ontology/wo/',
    'wsl': 'http://www.wsmo.org/ns/wsmo-lite#',
    'xmp': 'http://ns.adobe.com/xap/1.0/',
    'zoomaterms': 'http://rdf.ebi.ac.uk/vocabulary/zooma/',
    'dcm': 'http://dcm.com/',
    'gnvc': 'http://purl.org/gc/',
    'occult': 'http://data.totl.net/occult/',
    'pizza': 'http://www.co-ode.org/ontologies/pizza/pizza.owl#',
    'role': 'http://purl.org/vocab/participation/schema#',
    'algo': 'http://securitytoolbox.appspot.com/securityAlgorithms#',
    'bsb': 'http://opacplus.bsb-muenchen.de/title/',
    'centrifuge': 'http://purl.org/twc/vocab/centrifuge#',
    'cex': 'http://purl.org/weso/computex/ontology#',
    'cf': 'http://mmisw.org/ont/cf/parameter/',
    'cidoc': 'http://erlangen-crm.org/current/',
    'crtv': 'http://open-services.net/ns/crtv#',
    'dbc': 'http://dbpedia.org/resource/Category:',
    'dbnary': 'http://kaiko.getalp.org/dbnary#',
    'dbpr': 'http://dbpedia.org/resource/',
    'dbt': 'http://dbpedia.org/resource/Template:',
    'dctypes': 'http://purl.org/dc/dcmitype/',
    'dis': 'http://stanbol.apache.org/ontology/disambiguation/disambiguation#',
    'dvia': 'http://data.eurecom.fr/ontology/dvia#',
    'ebu': 'http://semantic.eurobau.com/eurobau-utility.owl#',
    'ecb': 'http://ecb.270a.info/class/1.0/',
    'ecpo': 'http://purl.org/ontology/ecpo#',
    'exterms': 'http://www.example.org/terms/',
    'frapo': 'http://purl.org/cerif/frapo/',
    'geof': 'http://www.opengis.net/def/function/geosparql/',
    'geofla': 'http://data.ign.fr/ontologies/geofla#',
    'gfo': 'http://www.onto-med.de/ontologies/gfo.owl#',
    'hifm': 'http://purl.org/net/hifm/data#',
    'httpm': 'http://www.w3.org/2011/http-methods#',
    'iot': 'http://www.linkedthings.com/iot/',
    'itsrdf': 'http://www.w3.org/2005/11/its/rdf#',
    'kbp': 'http://tackbp.org/2013/ontology#',
    'l4lod': 'http://ns.inria.fr/l4lod/v2/',
    'laabs': 'http://dbpedia.org/resource/',
    'locwd': 'http://purl.org/locwd/schema#',
    'mods': 'http://www.loc.gov/mods/v3#',
    'namespaces': 'https://vg.no/',
    'nif': 'http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#',
    'nsl': 'http://purl.org/ontology/storyline/',
    'odcs': 'http://opendata.cz/infrastructure/odcleanstore/',
    'oecd': 'http://oecd.270a.info/dataset/',
    'omn': 'http://open-multinet.info/ontology/omn#',
    'opmw': 'http://www.opmw.org/ontology/',
    'oslc': 'http://open-services.net/ns/core#',
    'pam': 'http://prismstandard.org/namespaces/pam/2.0/',
    'penn': 'http://purl.org/olia/penn.owl#',
    'pkgsrc': 'http://pkgsrc.co/schema#',
    'ple': 'http://pleiades.stoa.org/places/',
    'poste': 'http://data.lirmm.fr/ontologies/poste#',
    'premis': 'http://multimedialab.elis.ugent.be/users/samcoppe/ontologies/Premis/premis.owl#',
    'prolog': 'http://eulersharp.sourceforge.net/2003/03swap/prolog#',
    'qrl': 'http://www.aifb.kit.edu/project/ld-retriever/qrl#',
    'qvoc': 'http://mlode.nlp2rdf.org/quranvocab#',
    'radion': 'http://www.w3.org/ns/radion#',
    'rdarole': 'http://rdvocab.info/roles/',
    'rdf123': 'http://rdf123.umbc.edu/ns/',
    'reve': 'http://data.eurecom.fr/ontology/reve#',
    'rlno': 'http://rdflivenews.aksw.org/ontology/',
    'rlnr': 'http://rdflivenews.aksw.org/resource/',
    'rlog': 'http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#',
    'roevo': 'http://purl.org/wf4ever/roevo#',
    'roterms': 'http://purl.org/wf4ever/roterms#',
    'sci': 'http://data.scientology.org/ns/',
    'sem': 'http://www.ontologydesignpatterns.org/cp/owl/semiotics.owl#',
    'site': 'http://ns.ontowiki.net/SysOnt/Site/',
    'stac': 'http://securitytoolbox.appspot.com/stac#',
    'stats': 'http://purl.org/rdfstats/stats#',
    'wf4ever': 'http://purl.org/wf4ever/wf4ever#',
    'wfm': 'http://purl.org/net/wf-motifs#',
    'wfs': 'http://schemas.opengis.net/wfs/',
    'wikterms': 'http://wiktionary.dbpedia.org/terms/',
    'wl': 'http://www.wsmo.org/ns/wsmo-lite#',
    'won': 'http://purl.org/webofneeds/model#',
    'worldbank': 'http://worldbank.270a.info/dataset/',
    'lldr': 'http://purl.oclc.org/NET/lldr/ns#',
    'up': 'http://users.ugent.be/~tdenies/up/',
    'fea': 'http://vocab.data.gov/def/fea#',
    'penis': 'http://penis.to/#',
    'scms': 'http://ns.aksw.org/scms/annotations/',
    'sdo': 'http://schema.org/',
    'wapp': 'http://ns.rww.io/wapp#',
    'alchemy': 'http://rdf.alchemyapi.com/rdf/v1/s/aapi-schema#',
    'archdesc': 'http://archdesc.info/archEvent#',
    'cosmo': 'http://purl.org/ontology/cosmo#',
    'cro': 'http://rhizomik.net/ontologies/copyrightonto.owl#',
    'dbpo': 'http://dbpedia.org/ontology/',
    'dt': 'http://dbpedia.org/datatype/',
    'frbrer': 'http://iflastandards.info/ns/fr/frbr/frbrer/',
    'frsad': 'http://iflastandards.info/ns/fr/frsad/',
    'gndo': 'http://d-nb.info/standards/elementset/gnd#',
    'icane': 'http://www.icane.es/opendata/vocab#',
    'ludo': 'http://vocab.ox.ac.uk/ludo#',
    'oj': 'http://ontojob.at/',
    'oliasystem': 'http://purl.org/olia/system.owl#',
    'orca': 'http://geni-orca.renci.org/owl/topology.owl#',
    'saif': 'http://wwwiti.cs.uni-magdeburg.de/~srahman/',
    'sdmxa': 'http://purl.org/linked-data/sdmx/2009/attribute#',
    'sdmxd': 'http://purl.org/linked-data/sdmx/2009/dimension#',
    'stream': 'http://dbpedia.org/ontology/Stream/',
    'tsioc': 'http://rdfs.org/sioc/types#',
    'twaapi': 'http://purl.org/twc/vocab/aapi-schema#',
    'wd': 'http://www.wikidata.org/entity/',
    'who': 'http://www.who.int/vocab/ontology#',
    'wikidata': 'http://www.wikidata.org/entity/',
    'cdtype': 'http://purl.org/cld/cdtype/',
    'fincaselaw': 'http://purl.org/finlex/schema/oikeus/',
    'finlaw': 'http://purl.org/finlex/schema/laki/',
    'amalgame': 'http://purl.org/vocabularies/amalgame#',
    'camelot': 'http://vocab.ox.ac.uk/camelot#',
    'conf': 'http://richard.cyganiak.de/2007/pubby/config.rdf#',
    'crv': 'http://purl.org/twc/vocab/datacarver#',
    'csm': 'http://purl.org/csm/1.0#',
    'curr': 'https://w3id.org/cc#',
    'dbrc': 'http://dbpedia.org/resource/Category:',
    'dbyago': 'http://dbpedia.org/class/yago/',
    'frad': 'http://iflastandards.info/ns/fr/frad/',
    'gq': 'http://genomequest.com/',
    'hxl': 'http://hxl.humanitarianresponse.info/ns/#',
    'mp': 'http://jicamaro.info/mp#',
    'ogbd': 'http://www.ogbd.fr/2012/ontologie#',
    'olad': 'http://openlad.org/vocab#',
    'ox': 'http://vocab.ox.ac.uk/projectfunding#',
    'pat': 'http://purl.org/hpi/patchr#',
    'pext': 'http://www.ontotext.com/proton/protonext#',
    'qb4o': 'http://purl.org/olap#',
    'refe': 'http://orion.tw.rpi.edu/~xgmatwc/refe/',
    'swperson': 'http://data.semanticweb.org/person/',
    'ub': 'http://www.lehigh.edu/~zhp2/2004/0401/univ-bench.owl#',
    'bbc': 'http://www.bbc.co.uk/ontologies/news/',
    'bibframe': 'http://bibframe.org/vocab/',
    'bm': 'http://bio2rdf.org/',
    'emoca': 'http://ns.inria.fr/emoca#',
    'emotion': 'http://ns.inria.fr/emoca#',
    'limoo': 'http://purl.org/LiMo/0.1/',
    'mged': 'http://mged.sourceforge.net/ontologies/MGEDOntology.owl#',
    'mocanal': 'http://www.semanticweb.org/asow/ontologies/2013/9/untitled-ontology-36#',
    'muldicat': 'http://iflastandards.info/ns/muldicat#',
    'nidm': 'http://nidm.nidash.org/',
    'paia': 'http://purl.org/ontology/paia#',
    'pubmed': 'http://bio2rdf.org/pubmed_vocabulary:',
    'service': 'http://purl.org/ontology/service#',
    'tr': 'http://www.thomsonreuters.com/',
    'aat': 'http://vocab.getty.edu/aat/',
    'accom': 'http://purl.org/acco/ns#',
    'acrt': 'http://privatealpha.com/ontology/certification/1#',
    'agrd': 'http://agrinepaldata.com/',
    'agro': 'http://agrinepaldata.com/vocab/',
    'app': 'http://jmvanel.free.fr/ontology/software_applications.n3#',
    'asgv': 'http://aims.fao.org/aos/agrovoc/',
    'aws': 'http://purl.oclc.org/NET/ssnx/meteo/aws#',
    'babelnet': 'http://babelnet.org/2.0/',
    'basic': 'http://def.seegrid.csiro.au/isotc211/iso19103/2005/basic#',
    'bbccms': 'http://www.bbc.co.uk/ontologies/cms/',
    'bbccore': 'http://www.bbc.co.uk/ontologies/coreconcepts/',
    'bbcprov': 'http://www.bbc.co.uk/ontologies/provenance/',
    'bco': 'http://purl.obolibrary.org/obo/bco.owl#',
    'bevon': 'http://rdfs.co/bevon/',
    'bihap': 'http://bihap.kb.gov.tr/ontology/',
    'bis': 'http://bis.270a.info/dataset/',
    'bk': 'http://www.provbook.org/ns/#',
    'bwb': 'http://doc.metalex.eu/bwb/ontology/',
    'call': 'http://webofcode.org/wfn/call:',
    'citof': 'http://www.essepuntato.it/2013/03/cito-functions#',
    'cjr': 'http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/callejero#',
    'cmd': 'http://clarin.eu/cmd#',
    'cmdi': 'http://www.clarin.eu/cmd/',
    'cmdm': 'http://infra.clarin.eu/cmd/',
    'contsem': 'http://contsem.unizar.es/def/sector-publico/contratacion#',
    'csv': 'http://vocab.sindice.net/csv/',
    'dbpedia2': 'http://dbpedia.org/property/',
    'dbug': 'http://ontologi.es/doap-bugs#',
    'dcoid': 'http://dx.deepcarbon.net/',
    'defns': 'http://www.openarchives.org/OAI/2.0/',
    'delta': 'http://www.w3.org/2004/delta#',
    'diag': 'http://www.loc.gov/zing/srw/diagnostic/',
    'dicom': 'http://purl.org/healthcarevocab/v1#',
    'dn': 'http://purl.org/datanode/ns/',
    'dogont': 'http://elite.polito.it/ontologies/dogont.owl#',
    'dpd': 'http://www.kanzaki.com/ns/dpd#',
    'dq': 'http://def.seegrid.csiro.au/isotc211/iso19115/2003/dataquality#',
    'dsn': 'http://purl.org/dsnotify/vocab/eventset/',
    'ebucore': 'http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#',
    'ec': 'http://eulergui.sourceforge.net/contacts.owl.n3#',
    'ecrm': 'http://erlangen-crm.org/current/',
    'employee': 'http://www.employee.com/data#',
    'erce': 'http://xxefe.de/',
    'esadm': 'http://vocab.linkeddata.es/datosabiertos/def/sector-publico/territorio#',
    'escjr': 'http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/callejero#',
    'estatwrap': 'http://ontologycentral.com/2009/01/eurostat/ns#',
    'estrn': 'http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/transporte#',
    'eurlex': 'http://eur-lex.publicdata.eu/ontology/',
    'evident': 'http://purl.org/net/evident#',
    'ext': 'http://def.seegrid.csiro.au/isotc211/iso19115/2003/extent#',
    'fam': 'http://vocab.fusepool.info/fam#',
    'fao': 'http://fao.270a.info/dataset/',
    'fbgeo': 'http://rdf.freebase.com/ns/location/geocode/',
    'fcs': 'http://clarin.eu/fcs/resource#',
    'fma': 'http://sig.uw.edu/fma#',
    'form': 'http://deductions-software.com/ontologies/forms.owl.ttl#',
    'fp3': 'http://vocab.fusepool.info/fp3#',
    'frb': 'http://frb.270a.info/dataset/',
    'friends': 'http://www.openarchives.org/OAI/2.0/friends/',
    'ftcontent': 'http://www.ft.com/ontology/content/',
    'gaf': 'http://groundedannotationframework.org/',
    'gcis': 'http://data.globalchange.gov/gcis.owl#',
    'geop': 'http://aims.fao.org/aos/geopolitical.owl#',
    'geos': 'http://www.telegraphis.net/ontology/geography/geography#',
    'geosparql': 'http://www.opengis.net/ont/geosparql#',
    'geovoid': 'http://purl.org/geovocamp/ontology/geovoid/',
    'gf': 'http://def.seegrid.csiro.au/isotc211/iso19109/2005/feature#',
    'gm': 'http://def.seegrid.csiro.au/isotc211/iso19107/2003/geometry#',
    'gts': 'http://resource.geosciml.org/ontology/timescale/gts#',
    'gvp': 'http://vocab.getty.edu/ontology#',
    'h2o': 'http://def.seegrid.csiro.au/isotc211/iso19150/-2/2012/basic#',
    'hdo': 'http://www.samos.gr/ontologies/helpdeskOnto.owl#',
    'hlygt': 'http://www.holygoat.co.uk/owl/redwood/0.1/tags/',
    'hr': 'http://iserve.kmi.open.ac.uk/ns/hrests#',
    'hydra': 'http://www.w3.org/ns/hydra/core#',
    'ignf': 'http://data.ign.fr/def/ignf#',
    'ilap': 'http://data.posccaesar.org/ilap/',
    'imf': 'http://imf.270a.info/dataset/',
    'irstea': 'http://ontology.irstea.fr/',
    'irsteaont': 'http://ontology.irstea.fr/weather/ontology#',
    'iso': 'http://purl.org/iso25964/skos-thes#',
    'isothes': 'http://purl.org/iso25964/skos-thes#',
    'itm': 'http://spi-fm.uca.es/spdef/models/genericTools/itm/1.0#',
    'jp1': 'http://rdf.muninn-project.org/ontologies/jp1/',
    'kai': 'http://kai.uni-kiel.de/',
    'keys': 'http://purl.org/NET/c4dm/keys.owl#',
    'kml': 'http://www.opengis.net/kml/2.2#',
    'koly': 'http://www.ensias.ma/',
    'l2sp': 'http://www.linked2safety-project.eu/properties/',
    'language': 'http://id.loc.gov/vocabulary/iso639-1/',
    'lda': 'http://purl.org/linked-data/api/vocab#',
    'pldr': 'http://purl.oclc.org/NET/ldr/ns#',
    'lexcz': 'http://purl.org/lex/cz#',
    'lexicon': 'http://www.example.org/lexicon#',
    'lexinfo': 'http://www.lexinfo.net/ontology/2.0/lexinfo#',
    'lfov': 'https://w3id.org/legal_form#',
    'li': 'http://def.seegrid.csiro.au/isotc211/iso19115/2003/lineage#',
    'lime': 'http://art.uniroma2.it/ontologies/lime#',
    'limo': 'http://www.purl.org/limo-ontology/limo#',
    'ling': 'http://purl.org/voc/ling/',
    'lio': 'http://purl.org/net/lio#',
    'lmf': 'http://www.lexinfo.net/lmf#',
    'locah': 'http://data.archiveshub.ac.uk/def/',
    'location': 'http://sw.deri.org/2006/07/location/loc#',
    'locn': 'http://www.w3.org/ns/locn#',
    'lofv': 'http://purl.org/legal_form/vocab#',
    'loted': 'http://loted.eu/ontology#',
    'mammal': 'http://lod.taxonconcept.org/ontology/p01/Mammalia/index.owl#',
    'maso': 'http://securitytoolbox.appspot.com/MASO#',
    'mb': 'http://dbtune.org/musicbrainz/resource/instrument/',
    'metadata': 'http://purl.oreilly.com/ns/meta/',
    'mm': 'http://linkedmultimedia.org/sparql-mm/ns/1.0.0/function#',
    'mmt': 'http://linkedmultimedia.org/sparql-mm/functions/temporal#',
    'msm': 'http://iserve.kmi.open.ac.uk/ns/msm#',
    'mt': 'http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#',
    'my': 'http://www.mobile.com/model/',
    'naval': 'http://rdf.muninn-project.org/ontologies/naval#',
    'navm': 'https://w3id.org/navigation_menu#',
    'ndl': 'http://schemas.ogf.org/nml/2013/05/base#',
    'nxs': 'http://www.neclimateus.org/',
    'oad': 'http://lod.xdams.org/reload/oad/',
    'oan': 'http://data.lirmm.fr/ontologies/oan/',
    'od': 'http://purl.org/twc/vocab/opendap#',
    'odapps': 'http://semweb.mmlab.be/ns/odapps#',
    'odrl': 'http://www.w3.org/ns/odrl/2/',
    'odrs': 'http://schema.theodi.org/odrs#',
    'of': 'http://owlrep.eu01.aws.af.cm/fridge#',
    'oh': 'http://semweb.mmlab.be/ns/oh#',
    'oils': 'http://lemon-model.net/oils#',
    'olac': 'http://www.language-archives.org/OLAC/1.0/',
    'olac11': 'http://www.language-archives.org/OLAC/1.1/',
    'olca': 'http://www.lingvoj.org/olca#',
    'om': 'http://opendata.caceres.es/def/ontomunicipio#',
    'omdoc': 'http://omdoc.org/ontology/',
    'onisep': 'http://rdf.onisep.fr/resource/',
    'ont': 'http://purl.org/net/ns/ontology-annot#',
    'ontosec': 'http://www.semanticweb.org/ontologies/2008/11/OntologySecurity.owl#',
    'onyx': 'http://www.gsi.dit.upm.es/ontologies/onyx/ns#',
    'op': 'http://environment.data.gov.au/def/op#',
    'openskos': 'http://openskos.org/xmlns#',
    'oplacl': 'http://www.openlinksw.com/ontology/acl#',
    'oplprod': 'http://www.openlinksw.com/ontology/products#',
    'oplres': 'http://www.openlinksw.com/ontology/restrictions#',
    'origins': 'http://origins.link/',
    'oslo': 'http://purl.org/oslo/ns/localgov#',
    'parl': 'http://reference.data.gov.uk/def/parliament/',
    'pattern': 'http://www.essepuntato.it/2008/12/pattern#',
    'pco': 'http://purl.org/procurement/public-contracts#',
    'physo': 'http://merlin.phys.uni.lodz.pl/onto/physo/physo.owl#',
    'pic': 'http://www.ipaw.info/ns/picaso#',
    'pkm': 'http://www.ontotext.com/proton/protonkm#',
    'plo': 'http://purl.org/net/po#',
    'pnc': 'http://data.press.net/ontology/classification/',
    'pni': 'http://data.press.net/ontology/identifier/',
    'pnt': 'http://data.press.net/ontology/tag/',
    'pproc': 'http://contsem.unizar.es/def/sector-publico/pproc#',
    'provone': 'http://purl.org/provone#',
    'psys': 'http://www.ontotext.com/proton/protonsys#',
    'purl': 'http://purl.org/dc/terms/',
    'pvcs': 'http://purl.org/twc/vocab/pvcs#',
    'qu': 'http://purl.oclc.org/NET/ssnx/qu/qu#',
    'rdaa': 'http://rdaregistry.info/Elements/a/',
    'rdac': 'http://rdaregistry.info/Elements/c/',
    'rdae': 'http://rdaregistry.info/Elements/e/',
    'rdag2': 'http://rdvocab.info/ElementsGr2/',
    'rdai': 'http://rdaregistry.info/Elements/i/',
    'rdam': 'http://rdaregistry.info/Elements/m/',
    'rdarel2': 'http://metadataregistry.org/uri/schema/RDARelationshipsGR2/',
    'rdau': 'http://rdaregistry.info/Elements/u/',
    'rdaw': 'http://rdaregistry.info/Elements/w/',
    'rdl': 'http://data.posccaesar.org/rdl/',
    'reegle': 'http://reegle.info/schema#',
    'roadmap': 'http://mappings.roadmap.org/',
    'rso': 'http://www.researchspace.org/ontology/',
    'ru': 'http://purl.org/imbi/ru-meta.owl#',
    'ruto': 'http://rdfunit.aksw.org/ns/core#',
    'rvl': 'http://purl.org/rvl/',
    'sad': 'http://vocab.deri.ie/sad#',
    'sam': 'http://def.seegrid.csiro.au/isotc211/iso19156/2011/sampling#',
    'sao': 'http://salt.semanticauthoring.org/ontologies/sao#',
    'sbench': 'http://swat.cse.lehigh.edu/onto/univ-bench.owl#',
    'scip': 'http://lod.taxonconcept.org/ontology/sci_people.owl#',
    'scoro': 'http://purl.org/spar/scoro/',
    'security': 'http://securitytoolbox.appspot.com/securityMain#',
    'ses': 'http://lod.taxonconcept.org/ses/',
    'sf': 'http://www.opengis.net/ont/sf#',
    'shex': 'http://www.w3.org/2013/ShEx/ns#',
    'shw': 'http://paul.staroch.name/thesis/SmartHomeWeather.owl#',
    'siocserv': 'http://rdfs.org/sioc/services#',
    'skos08': 'http://www.w3.org/2008/05/skos#',
    'spcm': 'http://spi-fm.uca.es/spdef/models/deployment/spcm/1.0#',
    'spdx': 'http://spdx.org/rdf/terms#',
    'spfood': 'http://kmi.open.ac.uk/projects/smartproducts/ontologies/food.owl#',
    'sql': 'http://ns.inria.fr/ast/sql#',
    'sro': 'http://salt.semanticauthoring.org/ontologies/sro#',
    'sru': 'http://www.loc.gov/zing/srw/',
    'stanford': 'http://purl.org/olia/stanford.owl#',
    'static': 'http://vocab-ld.org/vocab/static-ld#',
    'stories': 'http://purl.org/ontology/stories/',
    'swpm': 'http://spi-fm.uca.es/spdef/models/deployment/swpm/1.0#',
    'swrcfe': 'http://www.morelab.deusto.es/ontologies/swrcfe#',
    'tac': 'http://ns.bergnet.org/tac/0.1/triple-access-control#',
    'tavprov': 'http://ns.taverna.org.uk/2012/tavernaprov/',
    'taxon': 'http://purl.org/biodiversity/taxon/',
    'tddo': 'http://databugger.aksw.org/ns/core#',
    'tgn': 'http://vocab.getty.edu/tgn/',
    'thors': 'http://resource.geosciml.org/ontology/timescale/thors#',
    'tm': 'http://def.seegrid.csiro.au/isotc211/iso19108/2002/temporal#',
    'topo': 'http://data.ign.fr/def/topo#',
    'travel': 'http://www.co-ode.org/roberts/travel.owl#',
    'trig': 'http://www.w3.org/2004/03/trix/rdfg-1/',
    'tw': 'http://tw.rpi.edu/schema/',
    'uis': 'http://uis.270a.info/dataset/',
    'ulan': 'http://vocab.getty.edu/ulan/',
    'un': 'http://www.w3.org/2007/ont/unit#',
    'unspsc': 'http://ontoview.org/schema/unspsc/1#',
    'uri4uri': 'http://uri4uri.net/vocab#',
    'va': 'http://code-research.eu/ontology/visual-analytics#',
    'vext': 'http://ldf.fi/void-ext#',
    'vgo': 'http://purl.org/net/VideoGameOntology#',
    'videogame': 'http://purl.org/net/vgo#',
    'vin': 'http://www.w3.org/TR/2003/PR-owl-guide-20031209/wine#',
    'viso': 'http://purl.org/viso/',
    'vmm': 'http://spi-fm.uca.es/spdef/models/genericTools/vmm/1.0#',
    'voidext': 'http://rdfs.org/ns/void-ext#',
    'voidwh': 'http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl#',
    'vra': 'http://simile.mit.edu/2003/10/ontologies/vraCore3#',
    'wfn': 'http://webofcode.org/wfn/',
    'whisky': 'http://vocab.org/whisky/terms/',
    'wi': 'http://purl.org/ontology/wi/core#',
    'wiki': 'http://en.wikipedia.org/wiki/',
    'wikim': 'http://spi-fm.uca.es/spdef/models/genericTools/wikim/1.0#',
    'wikimedia': 'http://upload.wikimedia.org/wikipedia/commons/f/f6/',
    'wn30': 'http://purl.org/vocabularies/princeton/wn30/',
    'xml': 'http://www.w3.org/XML/1998/namespace/',
    'xsi': 'http://www.w3.org/2001/XMLSchema-instance#',
    'xslopm': 'http://purl.org/net/opmv/types/xslt#',
    'zr': 'http://explain.z3950.org/dtd/2.0/',
    'abs': 'http://abs.270a.info/dataset/',
    'article': 'http://ogp.me/ns/article#',
    'cdc': 'http://www.contextdatacloud.org/resource/',
    'opencyc': 'http://sw.opencyc.org/concept/',
    'smg': 'http://ns.cerise-project.nl/energy/def/cim-smartgrid#',
    'opllic': 'http://www.openlinksw.com/ontology/licenses#',
    'affymetrix': 'http://bio2rdf.org/affymetrix_vocabulary:',
    'airs': 'https://raw.githubusercontent.com/airs-linked-data/lov/latest/src/airs_vocabulary.ttl#',
    'aktivesa': 'http://sa.aktivespace.org/ontologies/aktivesa#',
    'amsl': 'http://vocab.ub.uni-leipzig.de/amsl/',
    'as': 'http://www.w3.org/ns/activitystreams#',
    'bag': 'http://lod.geodan.nl/vocab/bag#',
    'beth': 'http://www.google.com/',
    'bfo': 'http://www.ifomis.org/bfo/1.1#',
    'bgcat': 'http://bg.dbpedia.org/resource/?????????:',
    'bgdbp': 'http://bg.dbpedia.org/property/',
    'bgdbr': 'http://bg.dbpedia.org/resource/',
    'bgn': 'http://bibliograph.net/schemas/',
    'bibrm': 'http://vocab.ub.uni-leipzig.de/bibrm/',
    'bmo': 'http://collection.britishmuseum.org/id/ontology/',
    'bn': 'http://babelnet.org/rdf/',
    'bner': 'http://datos.bne.es/resource/',
    'bnf': 'http://www.w3.org/2000/10/swap/grammar/bnf#',
    'bridge': 'http://purl.org/vocommons/bridge#',
    'bsym': 'http://bsym.bloomberg.com/sym/',
    'bv': 'http://purl.org/vocommons/bv#',
    'c9d': 'http://purl.org/twc/vocab/conversion/',
    'caplibacl': 'http://schemas.capita-libraries.co.uk/2015/acl/schema#',
    'cart': 'http://purl.org/net/cartCoord#',
    'cbo': 'http://comicmeta.org/cbo/',
    'ccrel': 'http://creativecommons.org/ns#',
    'cff': 'http://purl.oclc.org/NET/ssnx/cf/cf-feature#',
    'changeset': 'http://purl.org/vocab/changeset/schema#',
    'chembl': 'http://rdf.ebi.ac.uk/terms/chembl#',
    'cl': 'http://advene.org/ns/cinelab/',
    'clirio': 'http://clirio.kaerle.com/clirio.owl#',
    'company': 'http://intellimind.io/ns/company#',
    'condition': 'http://www.kinjal.com/condition:',
    'cpant': 'http://purl.org/NET/cpan-uri/terms#',
    'cpsv': 'http://purl.org/vocab/cpsv#',
    'crmdig': 'http://www.ics.forth.gr/isl/CRMext/CRMdig.rdfs/',
    'cwl': 'https://w3id.org/cwl/cwl#',
    'cwork': 'http://www.bbc.co.uk/ontologies/creativework/',
    'd0': 'http://ontologydesignpatterns.org/ont/wikipedia/d0.owl#',
    'd2d': 'http://rdfns.org/d2d/',
    'dannet': 'http://www.wordnet.dk/owl/instance/2009/03/instances/',
    'daq': 'http://purl.org/eis/vocab/daq#',
    'date': 'http://contextus.net/ontology/ontomedia/misc/date#',
    'dbcat': 'http://dbpedia.org/resource/Category:',
    'dcs': 'http://ontologi.es/doap-changeset#',
    'decision': 'https://decision-ontology.googlecode.com/svn/trunk/decision.owl#',
    'demlab': 'http://www.demcare.eu/ontologies/demlab.owl#',
    'deps': 'http://ontologi.es/doap-deps#',
    'dgfr': 'http://colin.maudry.com/ontologies/dgfr#',
    'dicera': 'http://semweb.mmlab.be/ns/dicera#',
    'dm2e': 'http://onto.dm2e.eu/schemas/dm2e/',
    'doas': 'http://deductions-software.com/ontologies/doas.owl.ttl#',
    'dpc': 'http://hospee.org/ontologies/dpc/',
    'ecc': 'https://ns.eccenca.com/',
    'eccrev': 'https://vocab.eccenca.com/revision/',
    'ecgl': 'http://schema.geolink.org/',
    'ecglview': 'http://schema.geolink.org/view/',
    'eclap': 'http://www.eclap.eu/schema/eclap/',
    'edgarcik': 'http://edgarwrap.ontologycentral.com/cik/',
    'emtr': 'http://purl.org/NET/ssnext/electricmeters#',
    'esaloj': 'http://vocab.linkeddata.es/datosabiertos/def/turismo/alojamiento#',
    'esapar': 'http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/aparcamiento#',
    'esco': 'http://data.europa.eu/esco/model#',
    'escom': 'http://vocab.linkeddata.es/datosabiertos/def/comercio/tejidoComercial#',
    'esdir': 'http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/direccionPostal#',
    'esequip': 'http://vocab.linkeddata.es/datosabiertos/def/urbanismo-infraestructuras/equipamiento#',
    'espresup': 'http://vocab.linkeddata.es/datosabiertos/def/hacienda/presupuestos#',
    'essglobal': 'http://purl.org/essglobal/vocab/v1.0/',
    'estrf': 'http://vocab.linkeddata.es/datosabiertos/def/transporte/trafico#',
    'ev': 'http://www.w3.org/2001/xml-events/',
    'faldo': 'http://biohackathon.org/resource/faldo#',
    'faq': 'http://www.openlinksw.com/ontology/faq#',
    'fdbp': 'http://fr.dbpedia.org/property/',
    'figigii': 'http://www.omg.org/spec/FIGI/GlobalInstrumentIdentifiers/',
    'fluidops': 'http://www.fluidops.com/',
    'galaksiya': 'http://ontoloji.galaksiya.com/vocab/',
    'geojson': 'http://ld.geojson.org/vocab#',
    'gl': 'http://schema.geolink.org/',
    'glview': 'http://schema.geolink.org/dev/view/',
    'gov': 'http://gov.genealogy.net/ontology.owl#',
    'gpml': 'http://vocabularies.wikipathways.org/gpml#',
    'gtfs': 'http://vocab.gtfs.org/terms#',
    'guo': 'http://purl.org/hpi/guo#',
    'ha': 'http://sensormeasurement.appspot.com/ont/home/homeActivity#',
    'hasneto': 'http://hadatac.org/ont/hasneto#',
    'holding': 'http://purl.org/ontology/holding#',
    'hp': 'http://pictogram.tokyo/vocabulary#',
    'ic': 'http://imi.ipa.go.jp/ns/core/rdf#',
    'imind': 'http://schema.intellimind.ns/symbology#',
    'insdc': 'http://ddbj.nig.ac.jp/ontologies/sequence#',
    'isocat': 'http://www.isocat.org/datcat/',
    'itcat': 'http://th-brandenburg.de/ns/itcat#',
    'jerm': 'http://www.mygrid.org.uk/ontology/JERMOntology#',
    'kegg': 'http://bio2rdf.org/ns/kegg#',
    'lawd': 'http://lawd.info/ontology/',
    'lc': 'http://semweb.mmlab.be/ns/linkedconnections#',
    'lcdr': 'http://ns.lucid-project.org/revision/',
    'lden': 'http://www.linklion.org/lden/',
    'ldvm': 'http://linked.opendata.cz/ontology/ldvm/',
    'lemonuby': 'http://lemon-model.net/lexica/uby/',
    'lindt': 'http://purl.org/NET/lindt#',
    'ljkl': 'http://teste.com/',
    'll': 'http://lodlaundromat.org/resource/',
    'llm': 'http://lodlaundromat.org/metrics/ontology/',
    'llo': 'http://lodlaundromat.org/ontology/',
    'llont': 'http://www.linklion.org/ontology#',
    'lmx': 'http://www.w3.org/XML/1998/namespace/',
    'lpeu': 'http://purl.org/linkedpolitics/vocabulary/eu/plenary/',
    'ls': 'http://linkedspending.aksw.org/instance/',
    'lsd': 'http://linkedwidgets.org/statisticaldata/ontology/',
    'lso': 'http://linkedspending.aksw.org/ontology/',
    'lsqv': 'http://lsq.aksw.org/vocab#',
    'luc': 'http://www.ontotext.com/owlim/lucene#',
    'lw': 'http://linkedwidgets.org/ontologies/',
    'mbgd': 'http://mbgd.genome.ad.jp/owl/mbgd.owl#',
    'mexalgo': 'http://mex.aksw.org/mex-algo#',
    'mexcore': 'http://mex.aksw.org/mex-core#',
    'mexperf': 'http://mex.aksw.org/mex-perf#',
    'mexv': 'http://mex.aksw.org/mex-algo#',
    'mico': 'http://www.mico-project.eu/ns/platform/1.0/schema#',
    'minim': 'http://purl.org/minim/minim#',
    'mmd': 'http://musicbrainz.org/ns/mmd-1.0#',
    'mmf': 'http://linkedmultimedia.org/sparql-mm/ns/1.0.0/function#',
    'mtlo': 'http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#',
    'ncit': 'http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#',
    'nerd': 'http://nerd.eurecom.fr/ontology#',
    'newsevents': 'http://www.aifb.uni-karlsruhe.de/WBS/uhe/ontologies#',
    'nex': 'http://www.nexml.org/2009/',
    'npdv': 'http://sws.ifi.uio.no/vocab/npd#',
    'oae': 'http://www.ics.forth.gr/isl/oae/core#',
    'oboinowl': 'http://www.geneontology.org/formats/oboInOwl#',
    'odbc': 'http://www.openlinksw.com/ontology/odbc#',
    'odo': 'http://ocean-data.org/schema/',
    'ofrd': 'http://purl.org/opdm/refrigerator#',
    'omnfed': 'http://open-multinet.info/ontology/omn-federation#',
    'omnlife': 'http://open-multinet.info/ontology/omn-lifecycle#',
    'onc': 'http://www.ics.forth.gr/isl/oncm/core#',
    'onto': 'http://www.ontotext.com/',
    'opengov': 'http://www.w3.org/opengov#',
    'oplcb': 'http://www.openlinksw.com/schemas/crunchbase#',
    'oplcert': 'http://www.openlinksw.com/schemas/cert#',
    'oplecrm': 'http://www.openlinksw.com/ontology/ecrm#',
    'oplmkt': 'http://www.openlinksw.com/ontology/market#',
    'ops': 'http://vocabularies.bridgedb.org/ops#',
    'oss': 'http://opendata.caceres.es/def/ontosemanasanta#',
    'owsom': 'https://onlinesocialmeasures.wordpress.com/',
    'oxi': 'http://omerxi.com/ontologies/core.owl.ttl#',
    'phdd': 'http://rdf-vocabulary.ddialliance.org/phdd#',
    'piero': 'http://reactionontology.org/piero/',
    'pim': 'http://www.w3.org/ns/pim/space#',
    'pod': 'https://project-open-data.cio.gov/v1.1/schema/#',
    'quantity': 'http://qudt.org/schema/quantity#',
    'r4r': 'http://guava.iis.sinica.edu.tw/r4r/',
    'ramon': 'http://rdfdata.eionet.europa.eu/ramon/ontology/',
    'rdabf': 'http://rdaregistry.info/termList/bookFormat/',
    'rdabm': 'http://rdaregistry.info/termList/RDABaseMaterial/',
    'rdacc': 'http://rdaregistry.info/termList/RDAColourContent/',
    'rdacct': 'http://rdaregistry.info/termList/CollTitle/',
    'rdaco': 'http://rdaregistry.info/termList/RDAContentType/',
    'rdact': 'http://rdaregistry.info/termList/RDACarrierType/',
    'rdaemm': 'http://rdaregistry.info/termList/emulsionMicro/',
    'rdafmn': 'http://rdaregistry.info/termList/MusNotation/',
    'rdafnm': 'http://rdaregistry.info/termList/FormNoteMus/',
    'rdafnv': 'http://rdaregistry.info/termList/noteForm/',
    'rdafr': 'http://rdaregistry.info/termList/frequency/',
    'rdafs': 'http://rdaregistry.info/termList/fontSize/',
    'rdaftn': 'http://rdaregistry.info/termList/TacNotation/',
    'rdagd': 'http://rdaregistry.info/termList/gender/',
    'rdagrp': 'http://rdaregistry.info/termList/groovePitch/',
    'rdagw': 'http://rdaregistry.info/termList/grooveWidth/',
    'rdami': 'http://rdaregistry.info/termList/modeIssue/',
    'rdamt': 'http://rdaregistry.info/termList/RDAMediaType/',
    'rdapmt': 'http://rdaregistry.info/termList/prodTactile/',
    'rdapo': 'http://rdaregistry.info/termList/RDAPolarity/',
    'rdarm': 'http://registry.info/termList/recMedium/',
    'rdarr': 'http://rdaregistry.info/termList/RDAReductionRatio/',
    'rdasco': 'http://rdaregistry.info/termList/soundCont/',
    'rdasoi': 'http://rdaregistry.info/termList/statIdentification/',
    'rdatc': 'http://rdaregistry.info/termList/trackConfig/',
    'rdatr': 'http://rdaregistry.info/termList/typeRec/',
    'rdaz': 'http://rdaregistry.info/Elements/z/',
    'religion': 'http://rdf.muninn-project.org/ontologies/religion#',
    'remetca': 'http://www.purl.org/net/remetca#',
    'rml': 'http://semweb.mmlab.be/ns/rml#',
    'rmo': 'http://eatld.et.tu-dresden.de/rmo#',
    'rofch': 'http://rdaregistry.info/termList/rofch/',
    'rofem': 'http://rdaregistry.info/termList/rofem/',
    'rofer': 'http://rdaregistry.info/termList/rofer/',
    'rofet': 'http://rdaregistry.info/termList/rofet/',
    'rofhf': 'http://rdaregistry.info/termList/rofhf/',
    'rofid': 'http://rdaregistry.info/termList/rofid/',
    'rofim': 'http://rdaregistry.info/termList/rofim/',
    'rofin': 'http://rdaregistry.info/termList/rofin/',
    'rofit': 'http://rdaregistry.info/termList/rofit/',
    'rofrm': 'http://rdaregistry.info/termList/rofrm/',
    'rofrr': 'http://rdaregistry.info/termList/rofrr/',
    'rofrt': 'http://rdaregistry.info/termList/rofrt/',
    'rs': 'http://spektrum.ctu.cz/ontologies/radio-spectrum#',
    'rvdata': 'http://data.rvdata.us/',
    'sakthi': 'http://infotech.nitk.ac.in/research-scholars/sakthi-murugan-r/',
    'san': 'http://www.irit.fr/recherches/MELODI/ontologies/SAN.owl#',
    'saws': 'http://purl.org/saws/ontology#',
    'seas': 'http://purl.org/NET/seas#',
    'sh': 'http://www.w3.org/ns/shacl#',
    'shoah': 'http://dati.cdec.it/lod/shoah/',
    'soc': 'http://purl.org/net/hdlipcores/ontology/soc#',
    'st': 'http://semweb.mmlab.be/ns/stoptimes#',
    'sw': 'http://linkedwidgets.org/statisticalwidget/ontology/',
    'tadirah': 'http://tadirah.dariah.eu/vocab/',
    'td5': 'http://td5.org/#',
    'traffic': 'http://www.sensormeasurement.appspot.com/ont/transport/traffic#',
    'ubiq': 'http://server.ubiqore.com/ubiq/core#',
    'um': 'http://intelleo.eu/ontologies/user-model/ns/',
    'uneskos': 'http://purl.org/voc/uneskos#',
    'vacseen1': 'http://www.semanticweb.org/parthasb/ontologies/2014/6/vacseen1/',
    'vag': 'http://www.essepuntato.it/2013/10/vagueness/',
    'verb': 'http://w3id.org/verb/',
    'vidont': 'http://vidont.org/',
    'vstoi': 'http://hadatac.org/ont/vstoi#',
    'wb': 'http://data.worldbank.org/',
    'webservice': 'http://www.openlinksw.com/ontology/webservices#',
    'wn31': 'http://wordnet-rdf.princeton.edu/wn31/',
    'wno': 'http://wordnet-rdf.princeton.edu/ontology#',
    'wro': 'http://purl.org/net/wf4ever/ro#',
    'xcql': 'http://docs.oasis-open.org/ns/search-ws/xcql#',
    'xlime': 'http://xlime-project.org/vocab/',
    'xrd': 'http://docs.oasis-open.org/ns/xri/xrd-1.0#',
    'yo': 'http://yovisto.com/',
    'ali': 'http://www.niso.org/schemas/ali/1.0/',
    'aozora': 'http://purl.org/net/aozora/',
    'auto': 'http://auto.schema.org/',
    'b3kat': 'http://lod.b3kat.de/title/',
    'csdbp': 'http://cs.dbpedia.org/',
    'csvw': 'http://www.w3.org/ns/csvw#',
    'ctxdesc': 'http://www.demcare.eu/ontologies/contextdescriptor.owl#',
    'cue': 'http://www.clarin.eu/cmdi/cues/display/1.0#',
    'data': 'http://data.odw.tw/',
    'datacite': 'http://purl.org/spar/datacite/',
    'dataid': 'http://dataid.dbpedia.org/ns/core#',
    'dcodt': 'http://info.deepcarbon.net/datatype/schema#',
    'dcosample': 'http://info.deepcarbon.net/sample/schema#',
    'dio': 'https://w3id.org/dio#',
    'door': 'http://kannel.open.ac.uk/ontology#',
    'dpla': 'http://dp.la/info/developers/map/',
    'dqc': 'http://semwebquality.org/ontologies/dq-constraints#',
    'dqv': 'http://www.w3.org/ns/dqv#',
    'dsfv': 'http://sws.ifi.uio.no/vocab/dsf/henriwi/dsf#',
    'dsv': 'http://purl.org/iso25964/DataSet/Versioning#',
    'eccauth': 'https://vocab.eccenca.com/auth/',
    'eccdi': 'https://vocab.eccenca.com/di/',
    'ecowlim': 'http://ecowlim.tfri.gov.tw/lode/resource/',
    'edac': 'http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-edac.owl#',
    'eem': 'http://purl.org/eem#',
    'efd': 'http://data.foodanddrinkeurope.eu/ontology#',
    'eli': 'http://data.europa.eu/eli/ontology#',
    'elod': 'http://linkedeconomy.org/ontology#',
    'esair': 'http://vocab.linkeddata.es/datosabiertos/def/medio-ambiente/calidad-aire#',
    'estatgph': 'http://estatwrap.ontologycentral.com/id/nama_aux_gph#',
    'ethc': 'http://ethoinformatics.org/ethocore/',
    'eurostat': 'http://wifo5-04.informatik.uni-mannheim.de/eurostat/resource/eurostat/',
    'fe': 'http://www.ontologydesignpatterns.org/ont/framenet/abox/fe/',
    'fire': 'http://tldp.org/HOWTO/XML-RPC-HOWTO/xmlrpc-howto-java.html#',
    'fnabox': 'http://www.ontologydesignpatterns.org/ont/framenet/abox/',
    'fntbox': 'http://www.ontologydesignpatterns.org/ont/framenet/tbox/',
    'foo': 'http://filmontology.org/ontology/1.0/',
    'frame': 'http://www.ontologydesignpatterns.org/ont/framenet/abox/frame/',
    'frappe': 'http://streamreasoning.org/ontologies/frappe#',
    'gci': 'http://ontology.eil.utoronto.ca/GCI/Foundation/GCI-Foundation.owl#',
    'gist': 'http://ontologies.semanticarts.com/gist#',
    'glycan': 'http://purl.jp/bio/12/glyco/glycan#',
    'gns': 'http://sws.geonames.org/',
    'gont': 'https://gont.ch/',
    'goog': 'http://schema.googleapis.com/',
    'gs1': 'http://gs1.org/voc/',
    'hello': 'https://www.youtube.com/user/SuperTellAFriend/featured/',
    'hto': 'http://project-haystack.org/hto#',
    'ianarel': 'http://www.iana.org/assignments/relation/',
    'ideotalex': 'http://www.ideotalex.eu/datos/recurso/',
    'iiif': 'http://iiif.io/api/image/2#',
    'incident': 'http://vocab.resc.info/incident#',
    'input': 'http://volt-name.space/vocab/input#',
    'ipo': 'http://purl.org/ipo/core#',
    'isbdu': 'http://iflastandards.info/ns/isbd/unc/elements/',
    'iso37120': 'http://ontology.eil.utoronto.ca/ISO37120.owl#',
    'jolux': 'http://data.legilux.public.lu/schema/jolux/',
    'juso': 'http://rdfs.co/juso/',
    'kbv': 'https://id.kb.se/vocab/',
    'km4c': 'http://www.disit.org/km4city/schema#',
    'lcsh': 'http://id.loc.gov/authorities/subjects/',
    'lgdm': 'http://linkedgeodata.org/meta/',
    'lgdt': 'http://linkedgeodata.org/triplify/',
    'lheo': 'http://www.conjecto.com/ontology/2015/lheo#',
    'lslife': 'http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-lifemapper.owl#',
    'lsmap': 'http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#',
    'lsweb': 'http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-data.owl#',
    'lswmo': 'http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-modelling.owl#',
    'lswpm': 'http://ontology.cybershare.utep.edu/ELSEWeb/elseweb-lifemapper-parameters.owl#',
    'lu': 'http://www.ontologydesignpatterns.org/ont/framenet/abox/lu/',
    'maeco': 'http://edg.topbraid.solutions/maeco/',
    'maet': 'http://edg.topbraid.solutions/taxonomy/macroeconomics/',
    'master1': 'http://idl.u-grenoble3.fr/',
    'moo': 'http://www.movieontology.org/2009/11/09/movieontology.owl#',
    'mv': 'http://eccenca.com/mobivoc/',
    'ncicp': 'http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#',
    'nlon': 'http://lod.nl.go.kr/ontology/',
    'ns1': 'http://www.w3.org/1999/xhtml/vocab#',
    'odw': 'http://odw.tw/',
    'ogc': 'http://www.opengis.net/ont/geosparql#',
    'oml': 'http://def.seegrid.csiro.au/ontology/om/om-lite#',
    'open311': 'http://ontology.eil.utoronto.ca/open311#',
    'opllog': 'http://www.openlinksw.com/ontology/logging#',
    'oplweb': 'http://www.openlinksw.com/schemas/oplweb#',
    'orges': 'http://datos.gob.es/def/sector-publico/organizacion#',
    'orgesv2': 'http://datos.gob.es/sites/default/files/OntologiaDIR3/orges.owl#',
    'orth': 'http://purl.jp/bio/11/orth#',
    'ost': 'http://w3id.org/ost/ns#',
    'ou': 'http://opendata.unex.es/def/ontouniversidad#',
    'output': 'http://volt-name.space/vocab/output#',
    'owl2xml': 'http://www.w3.org/2006/12/owl2-xml#',
    'pbody': 'http://reference.data.gov.uk/def/public-body/',
    'pcit': 'http://public-contracts.nexacenter.org/id/propertiesRole/',
    'pid': 'http://permid.org/ontology/organization/',
    'pmhb': 'http://pmhb.org/',
    'pp': 'http://peoplesplaces.de/ontology#',
    'proms': 'http://promsns.org/def/proms#',
    'provoc': 'http://ns.inria.fr/provoc/',
    'psv': 'http://www.wikidata.org/prop/statement/value/',
    'puml': 'http://plantuml.com/ontology#',
    'pv': 'http://ns.inria.fr/provoc#',
    'qms': 'http://data.europa.eu/esco/qms#',
    'regorg': 'http://www.w3.org/ns/regorg#',
    'rfd': 'http://com.intrinsec//ontology#',
    'rgml': 'http://purl.org/puninj/2001/05/rgml-schema#',
    'rimmf': 'http://rimmf.com/vocab/',
    'rm': 'http://jazz.net/ns/rm#',
    'rofsf': 'http://rdaregistry.info/termList/rofsf/',
    'rofsm': 'http://rdaregistry.info/termList/rofsm/',
    'rpath': 'https://w3id.org/lodsight/rdf-path#',
    'rut': 'http://rdfunit.aksw.org/ns/core#',
    'samfl': 'http://def.seegrid.csiro.au/ontology/om/sam-lite#',
    'saref': 'http://ontology.tno.nl/saref#',
    'scco': 'http://rdf.ebi.ac.uk/terms/surechembl#',
    'scholl': 'http://menemeneml.com/school#',
    'scor': 'http://purl.org/eis/vocab/scor#',
    'sct': 'http://snomed.info/sct/',
    'sdshare': 'http://www.sdshare.org/2012/extension/',
    'sdt': 'http://statisticaldata.linkedwidgets.org/terms/',
    'si': 'http://sisteminformasi.com/',
    'smxm': 'http://smxm.ga/',
    'snac': 'http://socialarchive.iath.virginia.edu/',
    'sor': 'http://purl.org/net/soron/',
    'srx': 'http://www.w3.org/2005/sparql-results#',
    'step': 'http://purl.org/net/step#',
    'teamwork': 'http://topbraid.org/teamwork#',
    'text': 'http://jena.apache.org/text#',
    'theme': 'http://voc.odw.tw/theme/',
    'tix': 'http://toptix.com/2010/esro/',
    'tp': 'http://tour-pedia.org/download/tp.owl#',
    'type': 'http://info.deepcarbon.net/schema/type#',
    'uby': 'http://purl.org/olia/ubyCat.owl#',
    'uom': 'http://www.opengis.net/def/uom/OGC/1.0/',
    'valueflows': 'https://w3id.org/valueflows/',
    'vf': 'https://w3id.org/valueflows/',
    'voc': 'http://voc.odw.tw/',
    'vocnet': 'http://schema.vocnet.org/',
    'volt': 'http://volt-name.space/ontology/',
    'vort': 'http://rockets.topbraid.solutions/vort/',
    'vsearch': 'http://vocab.sti2.at/vsearch#',
    'wail': 'http://www.eyrie.org/~zednenem/2002/wail/',
    'wde': 'http://www.wikidata.org/entity/',
    'wdt': 'http://www.wikidata.org/prop/direct/',
    'wikibase': 'http://wikiba.se/ontology#',
    'wimpo': 'http://rdfex.org/withImports?uri=',
    'wsdl': 'http://www.w3.org/ns/wsdl-rdf#',
    'xapi': 'http://purl.org/xapi/ontology#',
    'yd': 'https://yodata.io/',
    'dwciri': 'http://rs.tdwg.org/dwc/iri/',
    'sdterms': 'http://statisticaldata.linkedwidgets.org/terms/'
  }
};

/***/ }),

/***/ 705:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatasetAnnotationStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(DatasetAnnotationStore, _BaseStore);

  function DatasetAnnotationStore(dispatcher) {
    var _this;

    _classCallCheck(this, DatasetAnnotationStore);

    _this = _possibleConstructorReturn(this, (DatasetAnnotationStore.__proto__ || Object.getPrototypeOf(DatasetAnnotationStore)).call(this, dispatcher));
    _this.stats = {
      annotated: 0,
      total: 0,
      prevAnnotated: 0
    };
    _this.currentText = '';
    _this.annotatedText = '';
    _this.currentID = '';
    _this.tags = {};
    return _this;
  }

  _createClass(DatasetAnnotationStore, [{
    key: "updateStatsAnnotated",
    value: function updateStatsAnnotated(payload) {
      this.stats.prevAnnotated = this.stats.annotated;
      this.stats.annotated = payload.annotated;
      this.emitChange();
    }
  }, {
    key: "updateStatsTotal",
    value: function updateStatsTotal(payload) {
      this.stats.total = payload.total;
      this.emitChange();
    }
  }, {
    key: "updateTags",
    value: function updateTags(payload) {
      var _this2 = this;

      this.currentText = payload.query;
      this.annotatedText = payload.query;
      this.currentID = payload.id;

      if (payload.tags && payload.tags.length) {
        payload.tags.forEach(function (tag) {
          if (_this2.tags[tag.uri]) {
            _this2.tags[tag.uri].count++;
          } else {
            _this2.annotatedText = _this2.annotatedText.replace(tag.surfaceForm, '<span class="ui" style="background-color: yellow;display: inline;">' + tag.surfaceForm + '</span>');
            _this2.tags[tag.uri] = {
              count: 1,
              text: tag.surfaceForm
            };
          }
        });
      }

      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        stats: this.stats,
        currentText: this.currentText,
        annotatedText: this.annotatedText,
        currentID: this.currentID,
        tags: this.tags
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.stats = state.stats;
      this.currentText = state.currentText;
      this.annotatedText = state.annotatedText;
      this.currentID = state.currentID;
      this.tags = state.tags;
    }
  }]);

  return DatasetAnnotationStore;
}(_addons.BaseStore);

DatasetAnnotationStore.storeName = 'DatasetAnnotationStore'; // PR open in dispatchr to remove this need

DatasetAnnotationStore.handlers = {
  'UPDATE_ANNOTATION_STAT_ANNOTATED': 'updateStatsAnnotated',
  'UPDATE_ANNOTATION_STAT_TOTAL': 'updateStatsTotal',
  'UPDATE_ANNOTATION_TAGS': 'updateTags'
};
var _default = DatasetAnnotationStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 706:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = countAnnotatedResourcesWithProp;

function countAnnotatedResourcesWithProp(context, payload, done) {
  context.service.read('dataset.countAnnotatedResourcesWithProp', payload, {
    timeout: 20 * 1000
  }, function (err, res) {
    if (err) {
      context.dispatch('UPDATE_ANNOTATION_STAT_ANNOTATED__FAILURE', err);
    } else {
      context.dispatch('UPDATE_ANNOTATION_STAT_ANNOTATED', res);
    }

    done(null, res);
  });
}

module.exports = exports.default;

/***/ }),

/***/ 707:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var QueryImportStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(QueryImportStore, _BaseStore);

  function QueryImportStore(dispatcher) {
    var _this;

    _classCallCheck(this, QueryImportStore);

    _this = _possibleConstructorReturn(this, (QueryImportStore.__proto__ || Object.getPrototypeOf(QueryImportStore)).call(this, dispatcher));
    _this.queries = {};
    return _this;
  }

  _createClass(QueryImportStore, [{
    key: "updateQueriesSaved",
    value: function updateQueriesSaved(payload) {
      this.queries = payload.states;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        queries: this.queries
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.queries = state.queries;
    }
  }]);

  return QueryImportStore;
}(_addons.BaseStore);

QueryImportStore.storeName = 'QueryImportStore'; // PR open in dispatchr to remove this need

QueryImportStore.handlers = {
  'UPDATE_QUERIES_SAVED': 'updateQueriesSaved'
};
var _default = QueryImportStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 708:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _ObjectIViewer = _interopRequireDefault(__webpack_require__(298));

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var CheckboxItem = /*#__PURE__*/function (_React$Component) {
  _inherits(CheckboxItem, _React$Component);

  function CheckboxItem(props) {
    _classCallCheck(this, CheckboxItem);

    return _possibleConstructorReturn(this, (CheckboxItem.__proto__ || Object.getPrototypeOf(CheckboxItem)).call(this, props));
  }

  _createClass(CheckboxItem, [{
    key: "checkBox",
    value: function checkBox(status) {
      this.props.onCheck(status, this.props.spec.value);
    }
  }, {
    key: "reClick",
    value: function reClick(e) {
      //prevent opening it in new window
      e.preventDefault(); //like check box click

      this.props.onCheck(status, this.props.spec.value);
    }
  }, {
    key: "addCommas",
    value: function addCommas(n) {
      var rx = /(\d+)(\d{3})/;
      return String(n).replace(/^\d+/, function (w) {
        while (rx.test(w)) {
          w = w.replace(rx, '$1,$2');
        }

        return w;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var title, c;
      var datasetURI = this.props.datasetURI;

      if (this.props.config && this.props.config.objectIViewer) {
        c = this.props.config;
        title = _react.default.createElement(_ObjectIViewer.default, {
          datasetURI: this.props.datasetURI,
          spec: this.props.spec,
          config: c
        });
      } else {
        title = this.props.spec.value;

        if (this.props.spec.label) {
          title = this.props.spec.label;
        } else if (this.props.shortenURI && !(this.props.config && this.props.config.shortenURI === 0)) {
          title = _URIUtil.default.getURILabel(this.props.spec.value);
        }

        if (this.props.spec.valueType === 'uri') {
          if (this.props.config && this.props.config.hasLinkedValue) {
            if (this.props.config.containerDatasetURI) {
              datasetURI = this.props.config.containerDatasetURI[0];
            }

            title = _react.default.createElement("a", {
              className: "ui label",
              href: '/dataset/' + encodeURIComponent(datasetURI) + '/resource/' + encodeURIComponent(this.props.spec.value),
              target: "_blank"
            }, ' ', title, ' ');
          } else {
            title = _react.default.createElement("a", {
              style: {
                color: '#000'
              },
              href: this.props.spec.value,
              target: "_blank",
              onClick: this.reClick.bind(this)
            }, ' ', title, ' ');
          }
        }
      }

      if (this.props.checked) {
        title = _react.default.createElement("b", null, " ", title, " ");
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "checkboxItem"
      }, _react.default.createElement("div", {
        className: "ui horizontal list"
      }, _react.default.createElement("div", {
        className: "item"
      }, _react.default.createElement("div", {
        className: "ui basic icon mini button",
        onClick: this.checkBox.bind(this)
      }, _react.default.createElement(_semanticUiReact.Checkbox, {
        checked: this.props.checked
      }))), _react.default.createElement("div", {
        className: "item"
      }, title), _react.default.createElement("div", {
        className: "item"
      }, this.props.total ? _react.default.createElement("span", {
        className: "ui small blue circular label"
      }, ' ', this.addCommas(this.props.total), ' ') : '')));
    }
  }]);

  return CheckboxItem;
}(_react.default.Component);

var _default = CheckboxItem;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 844:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _prefixes = __webpack_require__(648);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
Display compact URIs using common prefixes
*/
var PUBLIC_URL = undefined ? undefined : '';

var PrefixBasedView = /*#__PURE__*/function (_React$Component) {
  _inherits(PrefixBasedView, _React$Component);

  function PrefixBasedView() {
    _classCallCheck(this, PrefixBasedView);

    return _possibleConstructorReturn(this, (PrefixBasedView.__proto__ || Object.getPrototypeOf(PrefixBasedView)).apply(this, arguments));
  }

  _createClass(PrefixBasedView, [{
    key: "getPrefix",
    value: function getPrefix(uri) {
      var o = {
        prefix: '',
        uri: ''
      };

      for (var prop in _prefixes.list) {
        if (uri.indexOf(_prefixes.list[prop]) !== -1) {
          o.prefix = prop;
          o.uri = _prefixes.list[prop];
          return o;
        }
      }

      return o;
    }
  }, {
    key: "makeShorten",
    value: function makeShorten(uri, prefixObject) {
      if (prefixObject.prefix) {
        return uri.replace(prefixObject.uri, prefixObject.prefix + ':');
      } else {
        return uri;
      }
    }
  }, {
    key: "preparePrefix",
    value: function preparePrefix(uri) {
      var _this = this;

      //case of propertyPath
      var out = [];
      var tmp = uri.split('->');
      var tmp2, tmp22;

      if (tmp.length > 1) {
        tmp.forEach(function (v) {
          tmp2 = v.split(']'); //check named graphs

          if (tmp2.length > 1) {
            var tmp3 = tmp2[0].replace('[', ''),
                tmp4 = tmp2[1];
            tmp22 = tmp3.split('>>'); //for intermediate links

            var tmp4i = tmp4.split('||');

            if (tmp4i.length > 1) {
              //federeated facets
              if (tmp22.length > 1) {
                out.push('[' + _this.makeShorten(tmp22[0], _this.getPrefix(tmp22[0])) + '>>' + _this.makeShorten(tmp22[1], _this.getPrefix(tmp22[1])) + ']' + _this.makeShorten(tmp4i[0], _this.getPrefix(tmp4i[0])) + '||' + _this.makeShorten(tmp4i[1], _this.getPrefix(tmp4i[1])));
              } else {
                out.push('[' + _this.makeShorten(tmp3, _this.getPrefix(tmp3)) + ']' + _this.makeShorten(tmp4i[0], _this.getPrefix(tmp4i[0])) + '||' + _this.makeShorten(tmp4i[1], _this.getPrefix(tmp4i[1])));
              }
            } else {
              //federeated facets
              if (tmp22.length > 1) {
                out.push('[' + _this.makeShorten(tmp22[0], _this.getPrefix(tmp22[0])) + '>>' + _this.makeShorten(tmp22[1], _this.getPrefix(tmp22[1])) + ']' + _this.makeShorten(tmp4, _this.getPrefix(tmp4)));
              } else {
                out.push('[' + _this.makeShorten(tmp3, _this.getPrefix(tmp3)) + ']' + _this.makeShorten(tmp4, _this.getPrefix(tmp4)));
              }
            }
          } else {
            out.push(_this.makeShorten(v, _this.getPrefix(v)));
          }
        });
        return out.join('->');
      } else {
        return this.makeShorten(uri, this.getPrefix(uri));
      }
    }
  }, {
    key: "render",
    value: function render() {
      var outputDIV, shortened;

      if (this.props.spec.valueType === 'uri' || this.props.spec.value.indexOf('http://') !== -1) {
        shortened = this.preparePrefix(this.props.spec.value);
        outputDIV = _react.default.createElement("a", {
          href: this.props.spec.value,
          target: "_blank",
          itemProp: this.props.property
        }, ' ', shortened, ' ');
      } else {
        outputDIV = _react.default.createElement("span", {
          itemProp: this.props.property
        }, ' ', this.props.spec.value, ' ');
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "prefixBasedView"
      }, outputDIV);
    }
  }]);

  return PrefixBasedView;
}(_react.default.Component);

PrefixBasedView.propTypes = {
  /**
  LD-R Configurations object
  */
  config: _propTypes.default.object,

  /**
  LD-R spec
  */
  spec: _propTypes.default.object
};
var _default = PrefixBasedView;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 887:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addons = __webpack_require__(83);

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var FacetedBrowserStore = /*#__PURE__*/function (_BaseStore) {
  _inherits(FacetedBrowserStore, _BaseStore);

  function FacetedBrowserStore(dispatcher) {
    var _this;

    _classCallCheck(this, FacetedBrowserStore);

    _this = _possibleConstructorReturn(this, (FacetedBrowserStore.__proto__ || Object.getPrototypeOf(FacetedBrowserStore)).call(this, dispatcher));

    _this.clearFacets();

    return _this;
  }

  _createClass(FacetedBrowserStore, [{
    key: "clearAll",
    value: function clearAll() {
      this.facets = {};
      this.facetsCount = {};
      this.resources = [];
      this.total = 0; //query used to generate the result list

      this.resourceQuery = ''; //queries used to display the values of each property facet

      this.facetQuery = {}; //all the filters and constraints applied to the facet: used for pivot change

      this.facetQueryConstraints = {};
      this.envState = [];
      this.page = 1;
      this.datasetURI = '';
      this.datasetConfig = {};
      this.config = {};
      this.error = '';
      this.importedEnvState = 0;
    }
  }, {
    key: "clearFacets",
    value: function clearFacets() {
      this.clearAll();
      this.emitChange();
    }
  }, {
    key: "loadFacetConfigs",
    value: function loadFacetConfigs(payload) {
      this.prepareFacetConfigs(payload.datasetURI, payload.dynamicConfig, payload.staticConfig, payload.dynamicDatasetConfig, payload.staticDatasetConfig);
      this.emitChange();
    }
  }, {
    key: "prepareFacetConfigs",
    value: function prepareFacetConfigs(datasetURI, dynamicConfig, staticConfig, dynamicDatasetConfig, staticDatasetConfig) {
      var _this2 = this;

      this.datasetConfig = staticDatasetConfig.dataset.generic;

      if (staticDatasetConfig.dataset[datasetURI]) {
        for (var p in staticDatasetConfig.dataset[datasetURI]) {
          this.datasetConfig[p] = staticDatasetConfig.dataset[datasetURI][p];
        }
      }

      if (dynamicDatasetConfig.dataset[datasetURI]) {
        for (var _p in dynamicDatasetConfig.dataset[datasetURI]) {
          this.datasetConfig[_p] = dynamicDatasetConfig.dataset[datasetURI][_p];
        }
      } //add env state configs to default config


      if (this.envState.length && this.envState[0].datasetConfig) {
        for (var prop in this.envState[0].datasetConfig) {
          this.datasetConfig[prop] = this.envState[0].datasetConfig[prop];
        }
      }

      this.config = staticConfig.facets.generic;

      if (staticConfig.facets[datasetURI]) {
        for (var _p2 in staticConfig.facets[datasetURI]) {
          this.config[_p2] = staticConfig.facets[datasetURI][_p2];
        }
      } //overwrite by dynamic


      if (dynamicConfig.facets[datasetURI]) {
        var _loop = function _loop(_p3) {
          if (!_this2.config[_p3]) {
            _this2.config[_p3] = dynamicConfig.facets[datasetURI][_p3];
          } else {
            if (_p3 === 'list') {
              dynamicConfig.facets[datasetURI][_p3].forEach(function (el) {
                if (_this2.config[_p3].indexOf(el) === -1) {
                  _this2.config[_p3].push(el);
                }
              });
            } else if (_p3 === 'config') {
              //console.log(dynamicConfig.facets[datasetURI][p]);
              for (var fc in dynamicConfig.facets[datasetURI][_p3]) {
                _this2.config[_p3][fc] = dynamicConfig.facets[datasetURI][_p3][fc];
              }
            }
          }
        };

        for (var _p3 in dynamicConfig.facets[datasetURI]) {
          _loop(_p3);
        }
      }
    }
  }, {
    key: "updateFacetResources",
    value: function updateFacetResources(payload) {
      //for second level properties
      this.resources = payload.facets.items;
      this.total = payload.total;
      this.page = payload.page;
      this.datasetURI = payload.datasetURI;
      this.resourceQuery = payload.resourceQuery;
      this.error = payload.error;
      this.emitChange();
    }
  }, {
    key: "switchToEnvState",
    value: function switchToEnvState(payload) {
      this.importedEnvState = payload.stateURI;
      this.emitChange();
    }
  }, {
    key: "updateMasterFacets",
    value: function updateMasterFacets(payload) {
      //for master facet
      if (payload.facets.status) {
        this.facets[payload.facets.propertyURI] = payload.facets.items;
        this.facetQuery[payload.facets.propertyURI] = payload.facets.facetQuery;
        this.facetQueryConstraints[payload.facets.propertyURI] = payload.facets.facetQueryConstraints;
      } else {
        delete this.facets[payload.facets.propertyURI];
        delete this.facetQuery[payload.facets.propertyURI];
        delete this.facetQueryConstraints[payload.facets.propertyURI];
      }

      this.page = payload.page;
      this.datasetURI = payload.datasetURI;
      this.emitChange();
    }
  }, {
    key: "updateMoreMasterFacets",
    value: function updateMoreMasterFacets(payload) {
      this.facets[payload.facets.propertyURI] = this.facets[payload.facets.propertyURI].concat(payload.facets.items);
      this.facetQuery[payload.facets.propertyURI] = payload.facets.facetQuery;
      this.facetQueryConstraints[payload.facets.propertyURI] = payload.facets.facetQueryConstraints;
      this.emitChange();
    }
  }, {
    key: "updateMasterFacetsCount",
    value: function updateMasterFacetsCount(payload) {
      this.facetsCount[payload.propertyURI] = payload.total;
      this.emitChange();
    }
  }, {
    key: "loadMasterFacetsFromState",
    value: function loadMasterFacetsFromState(payload) {
      this.datasetURI = payload.id;

      if (payload.stateURI) {
        //distinguish it from pivot change
        this.importedEnvState = payload.stateURI;
      } //this.config ={list: [], config: {}};


      for (var prop in payload.selection) {
        this.facets[prop] = payload.selection[prop];
        this.facetsCount[prop] = payload.selection[prop].length;

        if (this.config.list.indexOf(prop) === -1) {
          this.config.list.push(this.facets);
        }
      }

      this.emitChange();
    }
  }, {
    key: "updateEnvState",
    value: function updateEnvState(payload) {
      var stateObj = {};
      var ldr_prefix = 'https://github.com/ali1k/ld-reactor/blob/master/vocabulary/index.ttl#';
      var settingProp = '';
      payload.properties.forEach(function (item) {
        settingProp = item.propertyURI.replace(ldr_prefix, '').replace('http://www.w3.org/2000/01/rdf-schema#', '').trim();
        stateObj[settingProp] = decodeURIComponent(item.instances[0].value);
      });
      var selection = JSON.parse(stateObj.selection);
      var options = selection.options;
      this.page = stateObj.page;
      var datasetConfig = {};

      if (options.datasetConfig) {
        datasetConfig = options.datasetConfig;
      }

      this.envState.push({
        stateURI: payload.resourceURI,
        desc: stateObj.label,
        searchTerm: stateObj.searchTerm,
        selection: selection.prevSelection,
        pivotConstraint: stateObj.pivotConstraint,
        id: payload.id,
        invert: options.invert,
        range: options.range,
        datasetConfig: datasetConfig,
        analysisProps: options.analysisProps,
        page: stateObj.page,
        facetConfigs: options.facetConfigs
      });
      this.emitChange();
    }
  }, {
    key: "handleFacetSideEffectsCount",
    value: function handleFacetSideEffectsCount(payload) {
      this.facetsCount[payload.propertyURI] = payload.total;
      this.emitChange();
    }
  }, {
    key: "handleFacetSideEffects",
    value: function handleFacetSideEffects(payload) {
      this.facets[payload.facets.propertyURI] = payload.facets.items;
      this.facetQuery[payload.facets.propertyURI] = payload.facets.facetQuery;
      this.facetQueryConstraints[payload.facets.propertyURI] = payload.facets.facetQueryConstraints;
      this.page = payload.page;
      this.datasetURI = payload.datasetURI;
      this.emitChange();
    }
  }, {
    key: "getState",
    value: function getState() {
      return {
        facets: this.facets,
        facetsCount: this.facetsCount,
        datasetURI: this.datasetURI,
        datasetConfig: this.datasetConfig,
        config: this.config,
        resources: this.resources,
        total: this.total,
        resourceQuery: this.resourceQuery,
        facetQuery: this.facetQuery,
        facetQueryConstraints: this.facetQueryConstraints,
        page: this.page,
        importedEnvState: this.importedEnvState,
        envState: this.envState,
        error: this.error
      };
    }
  }, {
    key: "dehydrate",
    value: function dehydrate() {
      return this.getState();
    }
  }, {
    key: "rehydrate",
    value: function rehydrate(state) {
      this.facets = state.facets;
      this.facetsCount = state.facetsCount;
      this.datasetURI = state.datasetURI;
      this.datasetConfig = state.datasetConfig;
      this.config = state.config;
      this.resources = state.resources;
      this.total = state.total;
      this.page = state.page;
      this.resourceQuery = state.resourceQuery;
      this.facetQuery = state.facetQuery;
      this.facetQueryConstraints = state.facetQueryConstraints;
      this.error = state.error;
      this.importedEnvState = state.importedEnvState;
      this.envState = state.envState;
    }
  }]);

  return FacetedBrowserStore;
}(_addons.BaseStore);

FacetedBrowserStore.storeName = 'FacetedBrowserStore'; // PR open in dispatchr to remove this need

FacetedBrowserStore.handlers = {
  'LOAD_FACETS_RESOURCES_SUCCESS': 'updateFacetResources',
  'LOAD_MASTER_FACETS_SUCCESS': 'updateMasterFacets',
  'LOAD_MASTER_MORE_FACETS_SUCCESS': 'updateMoreMasterFacets',
  'LOAD_MASTER_FACETS_COUNT_SUCCESS': 'updateMasterFacetsCount',
  'LOAD_MASTER_FROM_STATE_SUCCESS': 'loadMasterFacetsFromState',
  'SWITCH_TO_ENV_STATE': 'switchToEnvState',
  'UPDATE_ENV_STATE': 'updateEnvState',
  'LOAD_SIDE_EFFECTS_FACETS_SUCCESS': 'handleFacetSideEffects',
  'LOAD_SIDE_EFFECTS_COUNT_FACETS_SUCCESS': 'handleFacetSideEffectsCount',
  'LOAD_FACETS_CONFIG': 'loadFacetConfigs',
  'CLEAR_FACETS_SUCCESS': 'clearFacets'
};
var _default = FacetedBrowserStore;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 888:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createResource;

var _fluxibleRouter = __webpack_require__(34);

function createResource(context, payload, done) {
  context.service.create('resource.new', payload, {}, function (err, res) {
    if (err) {
      context.dispatch('CREATE_RESOURCE_FAILURE', err);
      done();
    } else {
      context.dispatch('CREATE_RESOURCE_SUCCESS', res); //navigate
      //open in a new tab in case of faceted browser

      if (payload.openInNewWindows) {
        window.open('/dataset/' + encodeURIComponent(res.datasetURI) + '/resource/' + encodeURIComponent(res.resourceURI), '_blank');
      } else {
        context.executeAction(_fluxibleRouter.navigateAction, {
          url: '/dataset/' + encodeURIComponent(res.datasetURI) + '/resource/' + encodeURIComponent(res.resourceURI)
        });
      }

      done();
    }
  });
}

module.exports = exports.default;

/***/ }),

/***/ 889:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleRouter = __webpack_require__(34);

var _URIUtil = _interopRequireDefault(__webpack_require__(41));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var DatasetHeader = /*#__PURE__*/function (_React$Component) {
  _inherits(DatasetHeader, _React$Component);

  function DatasetHeader(props) {
    _classCallCheck(this, DatasetHeader);

    return _possibleConstructorReturn(this, (DatasetHeader.__proto__ || Object.getPrototypeOf(DatasetHeader)).call(this, props));
  }

  _createClass(DatasetHeader, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "addCommas",
    value: function addCommas(n) {
      var rx = /(\d+)(\d{3})/;
      return String(n).replace(/^\d+/, function (w) {
        while (rx.test(w)) {
          w = w.replace(rx, '$1,$2');
        }

        return w;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var dcnf = this.props.config;
      var resourceFocusType = dcnf.resourceFocusType;
      var typeSt,
          typesLink = [];

      if (resourceFocusType) {
        if (!resourceFocusType.length || resourceFocusType.length && !resourceFocusType[0]) {
          typeSt = _react.default.createElement("span", {
            className: "ui black label"
          }, " Everything ");
        } else {
          resourceFocusType.forEach(function (uri) {
            typesLink.push(_react.default.createElement("a", {
              key: uri,
              className: "ui black label",
              target: "_blank",
              href: uri
            }, ' ', _URIUtil.default.getURILabel(uri), ' '));
          });
          typeSt = typesLink;
        }
      }

      var constraintSt,
          constraints = [];

      if (dcnf.constraint) {
        for (var prop in dcnf.constraint) {
          constraints.push(_URIUtil.default.getURILabel(prop) + ': ' + dcnf.constraint[prop].join(','));
        }

        constraintSt = constraints.join(' && ');
      }

      var datasetTitle;

      if (this.props.datasetURI) {
        datasetTitle = _react.default.createElement("a", {
          href: this.props.datasetURI
        }, " ", this.props.datasetURI, " ");

        if (dcnf && dcnf.datasetLabel) {
          datasetTitle = _react.default.createElement("a", {
            href: this.props.datasetURI
          }, " ", dcnf.datasetLabel, " ");
        }
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "datasetHeader"
      }, _react.default.createElement("h3", {
        className: "ui header"
      }, this.props.total ? _react.default.createElement("a", {
        target: "_blank",
        href: '/exportQuery/NTriples/' + encodeURIComponent(this.props.datasetURI) + '/' + encodeURIComponent(this.props.resourceQuery)
      }, _react.default.createElement("span", {
        className: "ui big blue circular label"
      }, this.props.searchMode ? this.addCommas(this.props.resourcesLength) + '/' : '', this.addCommas(this.props.total))) : this.props.hasResources ? _react.default.createElement("span", {
        className: "ui big blue circular label",
        title: "unknown number of resources because of the query timeout!"
      }, "?") : '', ' ', "Resources of type ", typeSt, " in", ' ', datasetTitle ? datasetTitle : ' all local datasets', ' ', dcnf.constraint ? _react.default.createElement("span", null, _react.default.createElement(_semanticUiReact.Popup, {
        trigger: _react.default.createElement("i", {
          className: "ui orange filter icon link "
        }, ' '),
        content: constraintSt,
        wide: true,
        position: "bottom center"
      })) : null, this.props.pivotConstraint && this.props.pivotConstraint.trim() ? _react.default.createElement("span", {
        onClick: this.props.handleBackToPrevPivotState
      }, _react.default.createElement(_semanticUiReact.Popup, {
        trigger: _react.default.createElement("div", {
          className: "ui labeled mini button"
        }, _react.default.createElement("div", {
          className: "ui mini blue button"
        }, ' ', _react.default.createElement("i", {
          className: "ui zoom out icon"
        }, ' '), ' ', "Zoom out"), _react.default.createElement("a", {
          className: "ui basic left pointing label"
        }, _react.default.createElement("i", {
          className: "ui violet filter icon link "
        }, ' '))),
        content: this.props.pivotConstraint,
        wide: true,
        position: "bottom center"
      })) : null));
    }
  }]);

  return DatasetHeader;
}(_react.default.Component);

DatasetHeader.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
var _default = DatasetHeader;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 890:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _BasicResourceList = _interopRequireDefault(__webpack_require__(1683));

var _ScatterChartView = _interopRequireDefault(__webpack_require__(1684));

var _TreeMapView = _interopRequireDefault(__webpack_require__(1685));

var _RadarChartView = _interopRequireDefault(__webpack_require__(1686));

var _BarChartView = _interopRequireDefault(__webpack_require__(1687));

var _NetworkView = _interopRequireDefault(__webpack_require__(1688));

var _TimelineView = _interopRequireDefault(__webpack_require__(1701));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatasetViewer = /*#__PURE__*/function (_React$Component) {
  _inherits(DatasetViewer, _React$Component);

  function DatasetViewer() {
    _classCallCheck(this, DatasetViewer);

    return _possibleConstructorReturn(this, (DatasetViewer.__proto__ || Object.getPrototypeOf(DatasetViewer)).apply(this, arguments));
  }

  _createClass(DatasetViewer, [{
    key: "render",
    value: function render() {
      var viewer,
          viewerConfig = '';

      if (this.props.config) {
        if (this.props.config.datasetViewer) {
          viewerConfig = this.props.config.datasetViewer[0];
        }
      }

      switch (viewerConfig) {
        case 'BasicResourceList':
          viewer = _react.default.createElement(_BasicResourceList.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            facetConfigs: this.props.facetConfigs,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        case 'ScatterChartView':
          viewer = _react.default.createElement(_ScatterChartView.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        case 'TreeMapView':
          viewer = _react.default.createElement(_TreeMapView.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        case 'RadarChartView':
          viewer = _react.default.createElement(_RadarChartView.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        case 'BarChartView':
          viewer = _react.default.createElement(_BarChartView.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        case 'NetworkView':
          viewer = _react.default.createElement(_NetworkView.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        case 'TimelineView':
          viewer = _react.default.createElement(_TimelineView.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
          break;

        default:
          viewer = _react.default.createElement(_BasicResourceList.default, {
            expanded: this.props.expanded,
            enableAuthentication: this.props.enableAuthentication,
            resources: this.props.resources,
            datasetURI: this.props.datasetURI,
            isBig: this.props.isBig,
            config: this.props.config,
            facetConfigs: this.props.facetConfigs,
            cloneable: this.props.cloneable,
            onCloneResource: this.props.onCloneResource,
            OpenInNewTab: this.props.OpenInNewTab
          });
      }

      return _react.default.createElement("div", {
        className: "ui",
        ref: "datasetViewer"
      }, viewer);
    }
  }]);

  return DatasetViewer;
}(_react.default.Component);

var _default = DatasetViewer;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 892:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(1));

var _propTypes = _interopRequireDefault(__webpack_require__(0));

var _fluxibleRouter = __webpack_require__(34);

var _searchInDataset = _interopRequireDefault(__webpack_require__(1702));

var _saveFacetsEnvState = _interopRequireDefault(__webpack_require__(1703));

var _semanticUiReact = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PUBLIC_URL = undefined ? undefined : '';

var DatasetPager = /*#__PURE__*/function (_React$Component) {
  _inherits(DatasetPager, _React$Component);

  function DatasetPager(props) {
    var _this;

    _classCallCheck(this, DatasetPager);

    _this = _possibleConstructorReturn(this, (DatasetPager.__proto__ || Object.getPrototypeOf(DatasetPager)).call(this, props));
    _this.state = {
      searchTerm: '',
      searchMode: 0,
      config: _this.props.config ? JSON.parse(JSON.stringify(_this.props.config)) : '',
      saveMode: 0,
      saveText: '',
      querySaved: 0
    };
    return _this;
  }

  _createClass(DatasetPager, [{
    key: "componentDidMount",
    value: function componentDidMount() {}
  }, {
    key: "buildLink",
    value: function buildLink(page, color, icon) {
      if (this.props.handleClick) {
        return _react.default.createElement("a", {
          onClick: this.props.handleClick.bind(this, page),
          key: icon ? 'i' + page : page,
          className: 'ui ' + color + ' label'
        }, ' ', icon ? _react.default.createElement("i", {
          className: icon
        }) : _react.default.createElement("span", null, page), ' ');
      } else {
        return _react.default.createElement(_fluxibleRouter.NavLink, {
          key: icon ? 'i' + page : page,
          routeName: "dataset",
          className: 'ui ' + color + ' label',
          href: '/dataset/' + page + '/' + encodeURIComponent(this.props.datasetURI)
        }, ' ', icon ? _react.default.createElement("i", {
          className: icon
        }) : _react.default.createElement("span", null, page), ' ');
      }
    }
  }, {
    key: "handleViewsDropDownClick",
    value: function handleViewsDropDownClick(e, data) {
      var tmp = this.state.config;

      if (!this.state.config) {
        tmp = {};
      }

      if (data.value === 'Default') {
        tmp = this.props.config ? JSON.parse(JSON.stringify(this.props.config)) : '';
      } else {
        tmp.datasetViewer = [data.value];
      }

      this.setState({
        config: tmp
      });
      this.props.handleViewerChange(data.value);
    }
  }, {
    key: "handleActionDropDownClick",
    value: function handleActionDropDownClick(e, data) {
      if (data.value === 'downloadResults') {
        this.props.handleExport();
      } else if (data.value === 'saveQuery') {
        //allow both search and save
        this.setState({
          saveMode: !this.state.saveMode,
          querySaved: 0
        });
      } else if (data.value === 'searchInResults') {
        this.onSearchClick();
      }
    }
  }, {
    key: "onShowAllClick",
    value: function onShowAllClick() {
      if (this.props.showAllResources) {
        this.searchOnDataset('');
      } else {
        this.searchOnDataset('ldr_showAll');
      }

      this.props.onShowAllResources();
    }
  }, {
    key: "onSearchClick",
    value: function onSearchClick() {
      //reset the search
      if (this.state.searchMode && this.state.searchTerm) {
        this.searchOnDataset('');
        this.setState({
          searchTerm: ''
        });
      }

      this.props.onSearchMode(!this.state.searchMode);
      this.setState({
        searchMode: !this.state.searchMode,
        saveMode: 0,
        querySaved: 0
      });
    }
  }, {
    key: "handleSearchChange",
    value: function handleSearchChange(evt) {
      this.setState({
        searchTerm: evt.target.value
      });

      if (!evt.target.value) {
        //in case of empty, restore results
        this.searchOnDataset('');
      }
    }
  }, {
    key: "handleSaveTextChange",
    value: function handleSaveTextChange(evt) {
      this.setState({
        saveText: evt.target.value
      });
    }
  }, {
    key: "searchOnDataset",
    value: function searchOnDataset(term) {
      this.context.executeAction(_searchInDataset.default, {
        id: this.props.datasetURI,
        selection: this.props.selection,
        pivotConstraint: this.props.pivotConstraint,
        searchTerm: term
      });
    }
  }, {
    key: "saveEnvState",
    value: function saveEnvState(desc) {
      if (desc.trim()) {
        var selection = JSON.parse(JSON.stringify(this.props.selection)); //to store the component used to view the results and empty the default facets config

        if (this.props.config && this.props.config.datasetViewer) {
          selection.options.datasetConfig = {
            datasetViewer: this.props.config.datasetViewer
          };
          selection.options.facetConfigs = {};
        }

        this.context.executeAction(_saveFacetsEnvState.default, {
          datasetURI: this.props.datasetURI,
          selection: selection,
          pivotConstraint: this.props.pivotConstraint,
          searchTerm: this.state.searchMode ? this.state.searchTerm : this.props.showAllResources ? 'ldr_showAll' : '',
          resourceQuery: this.props.resourceQuery,
          page: this.props.currentPage,
          description: desc
        });
        this.setState({
          saveText: '',
          saveMode: 0,
          querySaved: 1
        });
      }
    }
  }, {
    key: "handleSearchKeyDown",
    value: function handleSearchKeyDown(evt) {
      switch (evt.keyCode) {
        //case 9: // Tab
        case 13:
          // Enter
          this.searchOnDataset(this.state.searchTerm);
          break;
      }
    }
  }, {
    key: "handleSaveKeyDown",
    value: function handleSaveKeyDown(evt) {
      switch (evt.keyCode) {
        //case 9: // Tab
        case 13:
          // Enter
          //replace double quotes
          this.saveEnvState(this.state.saveText.replace(/"/g, '\''));
          break;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var self = this;
      var v_icons = {};
      var defaultViewIcon = 'list layout';
      var v_options = []; //menu is customized if there are props for analysis

      if (this.props.noOfAnalysisProps && this.props.noOfAnalysisProps > 1) {
        v_options = [{
          key: 1,
          icon: 'table',
          text: 'Table',
          value: 'BasicResourceList'
        }, {
          key: 2,
          icon: 'grid layout',
          text: 'Tree Map',
          value: 'TreeMapView'
        }, {
          key: 3,
          icon: 'line chart',
          text: 'Scatter Chart',
          value: 'ScatterChartView'
        }, {
          key: 4,
          icon: 'bar chart',
          text: 'Bar Chart',
          value: 'BarChartView'
        }, {
          key: 5,
          icon: 'bullseye',
          text: 'Radar Chart',
          value: 'RadarChartView'
        }, {
          key: 6,
          icon: 'share alternate',
          text: 'Network Diagram',
          value: 'NetworkView'
        }, {
          key: 7,
          icon: 'calendar minus',
          text: 'Timeline',
          value: 'TimelineView'
        }];
        v_icons = {
          BasicResourceList: 'table',
          TreeMapView: 'grid layout',
          ScatterChartView: 'line chart',
          BarChartView: 'bar chart',
          RadarChartView: 'bullseye',
          NetworkView: 'share alternate',
          TimelineView: 'calendar minus'
        };
        defaultViewIcon = 'table';
      } else {
        if (this.props.noOfAnalysisProps && this.props.noOfAnalysisProps === 1) {
          v_options = [{
            key: 1,
            icon: 'table',
            text: 'Table',
            value: 'BasicResourceList'
          }, {
            key: 2,
            icon: 'share alternate',
            text: 'Network Diagram',
            value: 'NetworkView'
          }];
          v_icons = {
            BasicResourceList: 'table',
            NetworkView: 'share alternate'
          };
        } else {
          v_options = [{
            key: 1,
            icon: 'list layout',
            text: 'List',
            value: 'BasicResourceList'
          }];
          v_icons = {
            BasicResourceList: 'list layout'
          };
        }
      } //action menu


      var a_options = [{
        key: 1,
        icon: 'search',
        text: 'Search in Results',
        value: 'searchInResults',
        onClick: this.handleActionDropDownClick.bind(this)
      }, {
        key: 2,
        icon: 'download',
        text: 'Download Results',
        value: 'downloadResults',
        onClick: this.handleActionDropDownClick.bind(this)
      }];

      if (this.props.enableQuerySaveImport) {
        a_options.push({
          key: 3,
          icon: 'save',
          text: 'Save Query',
          value: 'saveQuery',
          onClick: this.handleActionDropDownClick.bind(this)
        });
      }

      var iconC = this.state.config && this.state.config.datasetViewer ? v_icons[this.state.config.datasetViewer] ? v_icons[this.state.config.datasetViewer] : defaultViewIcon : defaultViewIcon;

      var v_trigger = _react.default.createElement("span", null, _react.default.createElement(_semanticUiReact.Icon, {
        name: iconC,
        className: "olive"
      }));

      var a_trigger = _react.default.createElement("span", null, _react.default.createElement(_semanticUiReact.Icon, {
        name: "lab",
        className: "orange"
      }));

      var maxOnPage = this.state.config.maxNumberOfResourcesOnPage;

      if (!maxOnPage) {
        maxOnPage = 20;
      }

      var datasetURI = this.props.datasetURI;
      var i,
          startI,
          totalPages,
          threshold = this.props.threshold,
          currentPage,
          pageList = [];

      if (this.props.total || this.props.hasResources && !this.props.total) {
        currentPage = parseInt(this.props.currentPage); //total number of pages

        totalPages = Math.ceil(this.props.total / maxOnPage); //the situation when total number of pages is unknown

        if (this.props.hasResources && !this.props.total) {
          totalPages = 100000000000;
        }

        if (this.state.searchMode) {
          //totalPages = Math.ceil(this.props.resourcesLength / maxOnPage);
          //todo: support paging for search, I disable it for now!
          totalPages = 1;
        }

        if (totalPages > threshold) {
          //first page
          pageList.push(self.buildLink(1, 'grey', 'step backward icon'));

          if (currentPage - Math.round(threshold / 2) <= 0) {
            startI = 1;
          } else {
            startI = currentPage - Math.round(threshold / 2);
          }

          for (i = startI; i <= currentPage + threshold && i <= totalPages; i++) {
            if (i === currentPage) {
              pageList.push(self.buildLink(i, 'blue', 0));
            } else {
              pageList.push(self.buildLink(i, 'basic', 0));
            }
          } //last page


          pageList.push(self.buildLink(totalPages, 'grey', 'step forward icon'));
        } else {
          for (i = 1; i <= totalPages; i++) {
            if (i === currentPage) {
              pageList.push(self.buildLink(i, 'blue', 0));
            } else {
              pageList.push(self.buildLink(i, 'basic', 0));
            }
          }
        }

        if (this.props.hasResources && !this.props.total) {
          totalPages = ' ? ';
        }
      }

      return _react.default.createElement("div", null, _react.default.createElement("div", {
        className: "ui bottom attached compact secondary stackable menu",
        ref: "datasetPager"
      }, _react.default.createElement("div", {
        className: "left menu stackable"
      }, _react.default.createElement("div", {
        className: "item"
      }, this.props.showAllResources ? '' : _react.default.createElement("span", null, _react.default.createElement("span", {
        onDoubleClick: this.props.handleToggleShowQuery
      }, totalPages), ' ', "Page(s): ", pageList, " \xA0"), totalPages > 1 && this.props.total <= 10000 ? _react.default.createElement("a", {
        className: 'ui icon mini button ' + (this.props.showAllResources ? 'blue' : 'basic'),
        onClick: this.onShowAllClick.bind(this)
      }, this.props.showAllResources ? 'go back to pagination' : 'show all') : '')), _react.default.createElement("div", {
        className: "right menu stackable"
      }, this.props.total || this.props.hasResources && !this.props.total ? _react.default.createElement(_semanticUiReact.Dropdown, {
        className: "item",
        title: "actions",
        selectOnBlur: false,
        trigger: a_trigger,
        options: a_options,
        icon: null,
        pointing: "top right",
        floating: true
      }) : '', _react.default.createElement(_semanticUiReact.Dropdown, {
        className: "item",
        title: "views",
        selectOnBlur: false,
        onChange: this.handleViewsDropDownClick.bind(this),
        trigger: v_trigger,
        options: v_options,
        icon: null,
        pointing: "top right",
        floating: true
      }), this.props.onExpandCollapse ? _react.default.createElement("a", {
        className: "ui icon mini basic button right floated item ",
        onClick: this.props.onExpandCollapse.bind(this),
        title: "expand/collapse"
      }, _react.default.createElement("i", {
        className: "ui icon expand"
      })) : '')), !this.state.querySaved ? '' : _react.default.createElement("div", {
        className: "ui info message"
      }, "Your query was saved.", ' ', _react.default.createElement("a", {
        className: "ui primary mini button",
        href: "/wysiwyq",
        target: "_blank"
      }, ' ', "See stored queries")), !this.state.saveMode ? '' : _react.default.createElement("div", {
        className: "ui secondary segment bottom attached animated slideInDown"
      }, _react.default.createElement("div", {
        className: "ui icon input fluid"
      }, _react.default.createElement("input", {
        ref: "saveInput",
        type: "text",
        placeholder: "Write a description for your query and press enter to save...",
        value: this.state.saveText,
        onChange: this.handleSaveTextChange.bind(this),
        onKeyDown: this.handleSaveKeyDown.bind(this)
      }), _react.default.createElement("i", {
        className: "save icon"
      }))), !this.state.searchMode ? '' : _react.default.createElement("div", {
        className: "ui secondary segment bottom attached animated slideInDown"
      }, _react.default.createElement("div", {
        className: "ui icon input fluid"
      }, _react.default.createElement("input", {
        ref: "searchInput",
        type: "text",
        placeholder: "Type your search keywords and press enter to search...",
        value: this.state.searchTerm,
        onChange: this.handleSearchChange.bind(this),
        onKeyDown: this.handleSearchKeyDown.bind(this)
      }), _react.default.createElement("i", {
        className: "search icon"
      }))));
    }
  }]);

  return DatasetPager;
}(_react.default.Component);

DatasetPager.contextTypes = {
  executeAction: _propTypes.default.func.isRequired
};
var _default = DatasetPager;
exports.default = _default;
module.exports = exports.default;

/***/ }),

/***/ 893:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ResourceDataMapper = _interopRequireDefault(__webpack_require__(1705));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var GenericRepository = /*#__PURE__*/function () {
  function GenericRepository(dbClient) {
    var dataMapper = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _ResourceDataMapper.default();

    _classCallCheck(this, GenericRepository);

    this.dbClient = dbClient;
    this.dataMapper = dataMapper;
  }

  _createClass(GenericRepository, [{
    key: "fetchByQueryObject",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(queryString) {
        var results;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                results = this.dbClient.executeQuery(queryString);
                return _context.abrupt("return", this.dataMapper.parseResults(results));

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function fetchByQueryObject(_x) {
        return _ref.apply(this, arguments);
      }

      return fetchByQueryObject;
    }()
  }, {
    key: "upsert",
    value: function upsert(queryString) {}
  }, {
    key: "save",
    value: function save() {}
  }, {
    key: "remove",
    value: function remove() {}
  }]);

  return GenericRepository;
}();

exports.default = GenericRepository;
module.exports = exports.default;

/***/ })

},[[1208,1]]]);